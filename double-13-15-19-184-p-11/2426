/* Comments begin... 
Coefficient of   x^13 * y^1               = 0
Coefficient of   x^6 * y^2 * z^4         = -4
Coefficient of   x^4 * y^5 * z^3         = 5
Coefficient of   x^2 * y^8 * z^2         = 0
Coefficient of   x^1 * z^9               = -1
Coefficient of   y^11 * z^1               = -3

Here is the polynomial we're using this time:

-4*x^6*y^2*z^4 + 5*x^4*y^5*z^3 + -1*x^1*z^9 + -3*y^11*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^13 * y^1               = -5
Coefficient of   x^6 * y^2 * z^4         = -2
Coefficient of   x^4 * y^5 * z^3         = -5
Coefficient of   x^2 * y^8 * z^2         = -5
Coefficient of   x^1 * z^9               = -1
Coefficient of   y^11 * z^1               = -3

Here is the polynomial we're using this time:

-5*x^13*y^1 + -2*x^6*y^2*z^4 + -5*x^4*y^5*z^3 + -5*x^2*y^8*z^2 + -1*x^1*z^9 + -3*y^11*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 70
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[3, 8, 8, 0]  	311	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[1, 20, 1, 0]  	332	3 
[3, 12, 6, 0]  	333	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[1, 22, 0, 0]  	343	3 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 9, 11, 0]  	357	3 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 7, 13, 0]  	365	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[5, 14, 1, 1]  	294	5 
[1, 4, 15, 1]  	358	2 
[1, 6, 14, 1]  	369	2 
[3, 17, 0, 49]  	294	4 
[0, 15, 7, 49]  	358	1 
[0, 17, 6, 49]  	369	1 
------
The gap is between 2 and 48.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[55115892745421806337407659271524572152282648039151,882819384141368124328209105071897308710832448812559,919575923147549336815233095599765548227756229831515,27537077702346180330874687444752107004626098702795,817230739834445745527117233144978913895515538159817,1024921551094542291744305792902981508034519054301912,653501337101654963251237814977264248001746493620068;\
820132861020313012592258101991274122940954172338415,378436114249634649735179235160082560272278298548690,616078512793802992809885859739747624322614527353115,553902381518723045073853097354165757057261154280788,318859631707227555535668789581921999284065247747811,802916311561998544951134402287474513753880385809030,25319085609644667735152714123529378013091315190855;\
41257776565929388798133406564441096669957176619380,50606917098312737714247219927058562460827622772422,3209762333896059022856572759652433795624778031540,758336271039350045492080829907383819810176309575832,85171904203423796514471911879850118173438726522926,1058590774017456459194245955200474845538135253894135,123490558670267246884355249016083439311126929176500;\
270386227504180414697181108077945168674854876518920,798467322115853191969979826345387159883259404323341,21096383239090398286820175227571541075777261007132,283459908365615752154374882968844124989639117097636,611451613643944191556560684599278598910240310238363,433267708089219074022642381814963408275217106884376,835920003925747310367285442773076324453470183120526;\
165331460212281200539895013895187800918258746961760,780580687808777127919417563691922539136638250249657,507606902784198680262092221997288967645628549352962,207077202425378221924744563669015209668742689446173,428755236323530741187987557476325980225495120446076,850788193214723271522639732747171058989699517472159,873760766064271071835033617940252812192457211868956;\
185147791578300025899529702879775592560368184012047,31795225696672878459645330511070208229819331797579,598977289199234744954094902152730323895891102118323,794392643140683222887677658114827264960077863542678,236856239632705096763551453266866066702290487990858,31906921634645616713853442872568957729905629301068,968876970758879195146930255450152148424352381736336;\
788302860491962558376762209228099350557835117268429,743597041407767188921806290093184070731740078692820,193501652625138000370825442030238064290854378092950,289879829045037551802621729918234946723379256968748,58208822581955613405374673571037915053470074535508,707621717127499407861367174921388397089969867563675,977203245644135732904911356070711454177326171814995]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
