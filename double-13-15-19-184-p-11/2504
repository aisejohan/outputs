/* Comments begin... 
Coefficient of   x^13 * y^1               = 4
Coefficient of   x^6 * y^2 * z^4         = -4
Coefficient of   x^4 * y^5 * z^3         = -5
Coefficient of   x^2 * y^8 * z^2         = 5
Coefficient of   x^1 * z^9               = 0
Coefficient of   y^11 * z^1               = -3

Here is the polynomial we're using this time:

4*x^13*y^1 + -4*x^6*y^2*z^4 + -5*x^4*y^5*z^3 + 5*x^2*y^8*z^2 + -3*y^11*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^13 * y^1               = -3
Coefficient of   x^6 * y^2 * z^4         = -5
Coefficient of   x^4 * y^5 * z^3         = -5
Coefficient of   x^2 * y^8 * z^2         = -4
Coefficient of   x^1 * z^9               = 4
Coefficient of   y^11 * z^1               = 4

Here is the polynomial we're using this time:

-3*x^13*y^1 + -5*x^6*y^2*z^4 + -5*x^4*y^5*z^3 + -4*x^2*y^8*z^2 + 4*x^1*z^9 + 4*y^11*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 70
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[8, 11, 1, 0]  	288	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[3, 8, 8, 0]  	311	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[1, 20, 1, 0]  	332	3 
[3, 12, 6, 0]  	333	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[1, 22, 0, 0]  	343	3 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[1, 9, 11, 0]  	357	3 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[2, 6, 13, 0]  	363	3 
[1, 7, 13, 0]  	365	2 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[6, 13, 1, 1]  	292	6 
[2, 3, 15, 1]  	356	3 
[1, 8, 12, 1]  	361	3 
[4, 16, 0, 49]  	292	4 
[1, 14, 7, 49]  	356	2 
[0, 19, 4, 49]  	361	2 
------
The gap is between 2 and 48.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[879914953546866885135105170701037497254157699152828,228790685144885755382510725959737642590427579863985,63158344960542413841463424608415158150001655457411,735509704014541780270891286371459675036410777429051,390627550147396859353767770454707527026482360742217,964537664425756777864148979529924653605991300740449,515648894975553738118366510982199901531592853438741;\
960094723195873731270697871737628549599642974583233,856295418451596272284175216616089336694380580678020,904534189165399673326787732289468211230764282701143,309373898010953765562422443838174472298476315582008,716297979290045444502498087331612660025125060493596,979601719684851142864742717865168921634240120607707,1062071031211737995591041816356629719638833625182754;\
584863886217078624513032900696662392968835686965920,294353570363304110926790914869397874516701709962393,804071134969094886242143743306089017067729705387267,776089272408992783425461379529497294444713306024211,6491685715088879365892111390444829531224120738542,273972610586253740784251661978309655726417569297370,445730349532788114403166561299556121159612482050740;\
496892376313637802791311754418536229929898903999898,877078375127738747974654412671165964660124734603036,393564931262885202502004934119743354815500774751761,457127632584174868142594036076148247443430548932354,430960986910097395160527457557653823273530739026823,991097928478968891092746714731641008183278917759435,501401256587134703114777083560738592867193783282465;\
1038265685322383275374188831997460784088767177467657,331331969862654177318778241691217526585079060914351,305027568019449399777190816797619594977434275064059,658992450641106719475029488149999680607390809764531,981586129984612176427272878898023034268929796170837,400718106306606820505920085260834480727694616132561,23040499319458905352559499636270312460981881680627;\
451748395169303685828338170870380983988777564616048,334104531764047571210168090791241173547086937066324,205365741810800542825518893864818583361299509669697,307677520052664567926216064827384512661029145263066,630402985336299859768718834046334965946972426537933,383653073000614678527869904384695342286978330984108,981804695004353637398732261362028374288726920595552;\
935171122875778312702716310505924682144970088118199,498712543873190052306982002453590983026995758720487,155945554537051479589188558844850859843508886729515,806857297835313932154571450343003669521026212998429,190417754470269993333781482119989800130766768913024,384360909064938884051917326539202062359510008323207,966038391224413572389845132554166974273860780182717]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
