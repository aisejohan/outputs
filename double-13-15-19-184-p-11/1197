/* Comments begin... 
Coefficient of   x^13 * y^1               = 3
Coefficient of   x^6 * y^2 * z^4         = -2
Coefficient of   x^4 * y^5 * z^3         = 1
Coefficient of   x^2 * y^8 * z^2         = -5
Coefficient of   x^1 * z^9               = 0
Coefficient of   y^11 * z^1               = 1

Here is the polynomial we're using this time:

3*x^13*y^1 + -2*x^6*y^2*z^4 + 1*x^4*y^5*z^3 + -5*x^2*y^8*z^2 + 1*y^11*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^13 * y^1               = 4
Coefficient of   x^6 * y^2 * z^4         = -4
Coefficient of   x^4 * y^5 * z^3         = -4
Coefficient of   x^2 * y^8 * z^2         = 5
Coefficient of   x^1 * z^9               = -5
Coefficient of   y^11 * z^1               = -4

Here is the polynomial we're using this time:

4*x^13*y^1 + -4*x^6*y^2*z^4 + -4*x^4*y^5*z^3 + 5*x^2*y^8*z^2 + -5*x^1*z^9 + -4*y^11*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 73
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[10, 13, 0, 0]  	325	5 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[1, 20, 1, 0]  	332	3 
[3, 12, 6, 0]  	333	4 
[4, 19, 0, 0]  	337	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[1, 22, 0, 0]  	343	3 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 9, 11, 0]  	357	3 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 7, 13, 0]  	365	2 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[5, 14, 1, 1]  	294	5 
[4, 17, 0, 1]  	307	5 
[3, 8, 8, 1]  	311	5 
[3, 19, 0, 1]  	324	4 
[2, 20, 0, 1]  	326	4 
[1, 1, 19, 1]  	389	2 
[2, 9, 7, 49]  	294	3 
[2, 0, 15, 49]  	311	3 
[2, 12, 6, 49]  	320	3 
[1, 4, 14, 49]  	339	2 
[0, 12, 11, 49]  	389	1 
------
The gap is between 2 and 48.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[476069001766493165901492234682050423961754182337465,607110963301240000064534201037639446904786774760391,162611085583809430448093300109790048472322016969402,994018146202911488116782053880045169285489356783168,839748158702896281565470893275701689597843875200840,291731660718872678249015825743484512468606769788349,572674100719887584334996563671388344083630649502554;\
799866785894629393789815594980011945442423715438603,841382286249195305170363936104405537207648146358237,68216903184814212238907711923496603540161707269648,72508657181096915145454171369597724175994334139827,198640695801130557783767004348786596697604084217317,819571853150777417964373509107138039372491049826660,362432425943223983479437529125840677391167359178862;\
94776273442981868342030692817141944339851255375513,746824458019801663278607339875046160657255698994940,417293615891247831627717395537249899667283708300639,1002251476614564831632831440786586378848000054507421,928346404269511155872204942111763373450707921685304,312830631822047729607576966804589628158274434020818,743536293465891812162450580579185458943438946753606;\
406618317695196097777999341754746744793449347554820,585618008334479192943697288496655353988978848677948,762302601340691807127945440945078161370935736977287,247725686253004094797681971839765956924856829046855,955455575683311178620982593777501740240442113797618,1018556632641113436211041883692698535883711867916367,365098578067928089128872816121870225795651961556912;\
894784119345569296518169602863860832347975319217522,340322853526449782245095002303393854927719905442892,49641114261809674974328440169576879686120997776006,646480902390523457767702294917129821457258842813003,48753753419778776109865094047083720156073286941406,500399905960937497000313042459981599600226232374191,1012514494493691951330804831371026469002204696634039;\
622251100534083562306659728354500808366642543318366,603626668287654977567389951578590049848292775930383,419460420859088024582322935403370421580189454806714,890121586789703796990958184771413077805411590838546,719166595788469478223189529074421475996251809422678,391602008777993714992262563016175390641867100684526,779356267659944148613811903928830560106486922533349;\
705183823525009709439099988514118900339506898975611,686073257482512901681471309259906752378538866524429,596445200552947600043091373512330345259687284579790,74021848289294836392912728717064149151966609683544,810856788795662401411700827739002918630134437821885,593101371397598958129052964237461444234766337603641,536058212963800170387427521754573788550096610111102]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
