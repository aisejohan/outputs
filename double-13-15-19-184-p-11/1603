/* Comments begin... 
Coefficient of   x^13 * y^1               = -4
Coefficient of   x^6 * y^2 * z^4         = -3
Coefficient of   x^4 * y^5 * z^3         = 3
Coefficient of   x^2 * y^8 * z^2         = 3
Coefficient of   x^1 * z^9               = 0
Coefficient of   y^11 * z^1               = 1

Here is the polynomial we're using this time:

-4*x^13*y^1 + -3*x^6*y^2*z^4 + 3*x^4*y^5*z^3 + 3*x^2*y^8*z^2 + 1*y^11*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^13 * y^1               = 5
Coefficient of   x^6 * y^2 * z^4         = 1
Coefficient of   x^4 * y^5 * z^3         = -4
Coefficient of   x^2 * y^8 * z^2         = 2
Coefficient of   x^1 * z^9               = 5
Coefficient of   y^11 * z^1               = -2

Here is the polynomial we're using this time:

5*x^13*y^1 + 1*x^6*y^2*z^4 + -4*x^4*y^5*z^3 + 2*x^2*y^8*z^2 + 5*x^1*z^9 + -2*y^11*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 70
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[3, 8, 8, 0]  	311	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[3, 12, 6, 0]  	333	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 9, 11, 0]  	357	3 
[1, 23, 0, 0]  	358	2 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 7, 13, 0]  	365	2 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[1, 20, 1, 1]  	332	3 
[1, 22, 0, 1]  	343	3 
[1, 1, 16, 49]  	332	2 
[1, 3, 15, 49]  	343	2 
------
The gap is between 2 and 48.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[957641809709901395522408822886007770748054641159891,472267247973110485006485266572599110017351331928312,612023968780754824729888468734062407394836997789506,973342160090930838396445115756136959283349374308170,889328003259814901309256428399566119142095368839535,329956704510843494752396876520792944001176847170760,332287432539957996441740739810148129136424182945260;\
82023240630677918662716101798140566046766671249438,857897831711171618110891587680907042785126518341915,868689987479538812361885391187674772006603956150368,750034670936194089977602502664366227056810161889333,986948302633665771080045422975735538260250699540870,265367116746324986294168685741499589240288817049518,116407258726052956477199463328331810697987957907088;\
1055924469487434866235598463365031239430667858363162,2747983980264580725843008685083248946826175007159,28930922399316836605422167298894330462329080787197,265979325927210082107882804901832880173400754124451,1029258054951374095417008468628958410481336480145660,548204614786751763979345558024052433111849509166108,77113573752172125208366460303222049585310099914910;\
301479934404229829600704961979843981239038209463816,673923888776876947489891183882923261506995967802954,73608070212401488854493349737447708827792112788010,254759867459259796697516219595539187178653050823746,824853034519183882582874559925480600857889147962209,66089524050412424524152549624878333671221695481596,825126224831455173157729971983353232202066844978406;\
538056406137524347659066883216812603220292615841689,768610064922218759518959444706194829414308978488663,967527362753958775263217191022297557441143111324267,589880019790698394124814188746226411960733151725151,296122578991760964721103233279785422190982738193492,50943662845915880726144072791736728937189352061109,138527874364729357508165104487479500005679019009848;\
889545945942202547685230446834183144148594105351731,906775405612734857462628925529957609955972301900724,223900972011590473157857645627174688033375358101572,634677795720174189096184314208390921468514887709892,802433985225824928692432076224176431242001151824397,847642839897323659872193791200164140513438238613735,32773409983390810717986846358594085278283747822834;\
691184898238859125743355716657338862653268638562468,605329050957183791932488952404144831778660045180340,889691761036607016829129761901521686958980362480255,201770394222745543978665238625569050459833657868764,906683241960304489933166549082160687139668767890043,628889551434375424299265411323568753303219367961898,849292220306239286118116127247634970608705561362478]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
