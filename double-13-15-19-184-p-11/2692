/* Comments begin... 
Coefficient of   x^13 * y^1               = 2
Coefficient of   x^6 * y^2 * z^4         = -2
Coefficient of   x^4 * y^5 * z^3         = 3
Coefficient of   x^2 * y^8 * z^2         = 5
Coefficient of   x^1 * z^9               = 0
Coefficient of   y^11 * z^1               = 1

Here is the polynomial we're using this time:

2*x^13*y^1 + -2*x^6*y^2*z^4 + 3*x^4*y^5*z^3 + 5*x^2*y^8*z^2 + 1*y^11*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^13 * y^1               = -5
Coefficient of   x^6 * y^2 * z^4         = 4
Coefficient of   x^4 * y^5 * z^3         = 3
Coefficient of   x^2 * y^8 * z^2         = 2
Coefficient of   x^1 * z^9               = -3
Coefficient of   y^11 * z^1               = -5

Here is the polynomial we're using this time:

-5*x^13*y^1 + 4*x^6*y^2*z^4 + 3*x^4*y^5*z^3 + 2*x^2*y^8*z^2 + -3*x^1*z^9 + -5*y^11*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 69
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[1, 20, 1, 0]  	332	3 
[3, 12, 6, 0]  	333	4 
[3, 11, 7, 0]  	337	4 
[2, 16, 4, 0]  	342	4 
[1, 22, 0, 0]  	343	3 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 3, 15, 0]  	356	3 
[1, 9, 11, 0]  	357	3 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 7, 13, 0]  	365	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[3, 8, 8, 1]  	311	5 
[2, 12, 7, 1]  	339	3 
[2, 4, 14, 1]  	352	3 
[1, 4, 15, 1]  	358	2 
[1, 6, 14, 1]  	369	2 
[2, 19, 0, 49]  	311	3 
[0, 15, 6, 49]  	339	1 
------
The gap is between 2 and 48.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[502323782762759396408259287653758949844750432613376,66531576006949756781756170820554178469578268716809,213499066042704401736885958891066527600170828674259,782642940365954280533280898677581408233107376240067,108231634567163448309892694588383254311922444965402,945659193539128168274083698399574631027815142705281,993545056580581337801373496023740487522346267488593;\
569403340886812514067864517001976527003693000490539,336615479638876815853411853617086589608182652804621,1031235130054530128108118316048612862381265000532619,717214282561531857946580749456127252173579409167843,6990847932808199662859970057973261637877181015426,84264037366606959361383123323265220197600576924635,224890086781370727213579570210002296610344186495048;\
1030193781319463852299812246116487815173824302755231,948363200087561812557162054003728279267356203306501,475710010781477469692773468339360725036475654874709,418877965013828838185708705998391612035767159623705,143545658038397105687589831708247986714434858827456,741426371333559116421000688632651741359422606675940,653104798621615184108249071246159374700928895424176;\
84208843582042542001442862393824196296666184335045,561458503174694027155507255655729605024400015219003,920772815811343868527540888158294870570920205717709,456901872206261557916096223138035895865521100331709,501721247052415518342940719017188130667320896673441,344337256936619781306485969558401262666210537880681,109597159805475428633197033284283196618686715431445;\
106784603770457652928014116805270059850786112802136,582198208721634212147142469145853917218265897071968,659450986834603219512606072712868663863188055788909,463712008609796693361145084703982523472579741482231,956779223102311143482015540898853756306641016446665,71172270384754006201935026754813909063192563614578,345082885410076573144561638840547594209263598135445;\
292200880594369787681701830084569613637043309169658,152297031273009236424030327953858204320783493125142,943914327201943652439050313181990708263898661832173,489608884164813474404130109229348293585930272405550,724337900692032873411388233059156733825022156836129,94696367571099984622970778099761442838402394250362,141011780031788192478942402460496653369729620043505;\
825572895028852660238646677622082387097357979374088,83894357175375987560891146578528281419178223083613,86121025596559539159627214636111490518383875805385,122940535642428021895777167063036368737319693205371,865938457714368546561374517176975198774275753848581,652924571198461804464977242384946456462681263014971,587775383649297974926525604259403031697935629200867]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
