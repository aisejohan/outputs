/* Comments begin... 
Coefficient of   x^13 * y^1               = -4
Coefficient of   x^6 * y^2 * z^4         = 1
Coefficient of   x^4 * y^5 * z^3         = -3
Coefficient of   x^2 * y^8 * z^2         = -2
Coefficient of   x^1 * z^9               = 0
Coefficient of   y^11 * z^1               = 4

Here is the polynomial we're using this time:

-4*x^13*y^1 + 1*x^6*y^2*z^4 + -3*x^4*y^5*z^3 + -2*x^2*y^8*z^2 + 4*y^11*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^13 * y^1               = 4
Coefficient of   x^6 * y^2 * z^4         = -4
Coefficient of   x^4 * y^5 * z^3         = -1
Coefficient of   x^2 * y^8 * z^2         = 2
Coefficient of   x^1 * z^9               = -5
Coefficient of   y^11 * z^1               = 2

Here is the polynomial we're using this time:

4*x^13*y^1 + -4*x^6*y^2*z^4 + -1*x^4*y^5*z^3 + 2*x^2*y^8*z^2 + -5*x^1*z^9 + 2*y^11*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 73
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[3, 8, 8, 0]  	311	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[3, 12, 6, 0]  	333	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 23, 0, 0]  	358	2 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 12, 12, 0]  	408	1 
[0, 23, 4, 0]  	421	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[1, 20, 1, 1]  	332	3 
[1, 22, 0, 1]  	343	3 
[1, 9, 11, 1]  	357	3 
[1, 7, 13, 1]  	365	2 
[0, 20, 4, 1]  	376	2 
[0, 23, 3, 1]  	402	2 
[1, 1, 16, 49]  	332	1 
[1, 3, 15, 49]  	343	1 
[0, 1, 18, 49]  	357	1 
[0, 18, 5, 49]  	365	1 
------
The gap is between 2 and 48.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[910247045090814491925258643539793793723895992280675,307348364490216476489990873645725332806654407867969,738558163545428202405055779411496155225321918160675,78208099222290335767932293408704353960904651057567,618188494146485733727432722212654243116524457136728,924509245748595940155367616389443455405892398635439,473096684852892149761273135109864107504518187516595;\
5107597495577629616906916293892971342446970251091,718619002156252350700273419896982802260528537348920,241221652699839484081272361295912279395767581767833,255894929597095288876666383769532210445869993476437,236244442167206880084142893159470110057848568484793,267553842279547186825819988603253452022885540530804,662286289515645088944382674241649085271418514970889;\
594752436174720459537218399274595196615711985209065,1003248360957328441951237441364629772081356408526800,262304260759732246699783825353375434244162702165735,1017473457297769570365210922102017058570977974753945,1054205683116307221818437180651448929899510988860312,833681166329493468395559929771139304791485494290054,110714048534438392735705558854580177583907910282339;\
713694723989986395470870476604831936085366970915860,835793935817926253146866439474289570754902126901534,785879020274702234412097191655004015129363035724798,260337185208854804278931243508084455530532107592231,444963544229917136939153206877709622964545294415232,563636175348991717663538517516246126761448860906119,172263017030056747002136462845392433450725042577007;\
351102040155616879070352585250954588720104591952870,553870310398426997390066143458341675425548915216458,182526986676684972496924430398398417955166922908880,669984049131577633318994325328246223102105118093284,1011698853458121398191682489484667248448412659813601,244596596997779002371667628281690486982853313387645,1001087803938514459994677380419271197135815014332461;\
187244546569221304782340309235402956809921916677,719696700610581900947090651718747320226885023027553,806464699145845230268922217630748456279946893960570,467449555737839446958266660711860131292829805112456,687747653945896070911008688729545160789157267565772,650975266038338732874896328066089533377644353461927,396111165629681572250116287978812735907950693895465;\
38809415805729442783132714580534380529195157399356,692819746014890374855548982706102678713464149150581,976444362875201054455633544610757413432806373511862,1022353261710591147226449965205934781996832403275081,637697817614869720925732027200780815487248209725946,580121635720668809636714021821382758580947234347016,846569671780744068909831186299717887346628786030900]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
