/* Comments begin... 
Coefficient of   x^13 * y^1               = 4
Coefficient of   x^6 * y^2 * z^4         = -5
Coefficient of   x^4 * y^5 * z^3         = -1
Coefficient of   x^2 * y^8 * z^2         = 4
Coefficient of   x^1 * z^9               = 5
Coefficient of   y^11 * z^1               = 0

Here is the polynomial we're using this time:

4*x^13*y^1 + -5*x^6*y^2*z^4 + -1*x^4*y^5*z^3 + 4*x^2*y^8*z^2 + 5*x^1*z^9

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Not smooth!
Coefficient of   x^13 * y^1               = -4
Coefficient of   x^6 * y^2 * z^4         = 4
Coefficient of   x^4 * y^5 * z^3         = -2
Coefficient of   x^2 * y^8 * z^2         = 3
Coefficient of   x^1 * z^9               = -1
Coefficient of   y^11 * z^1               = 4

Here is the polynomial we're using this time:

-4*x^13*y^1 + 4*x^6*y^2*z^4 + -2*x^4*y^5*z^3 + 3*x^2*y^8*z^2 + -1*x^1*z^9 + 4*y^11*z^1

Allocate M_len = 3200 elements.
The final length of G is 73
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[3, 8, 8, 0]  	311	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	5 
[1, 20, 1, 0]  	332	3 
[3, 12, 6, 0]  	333	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[1, 22, 0, 0]  	343	3 
[3, 14, 5, 0]  	344	4 
[2, 1, 16, 0]  	345	3 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 9, 11, 0]  	357	3 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[2, 0, 19, 0]  	387	3 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[1, 7, 13, 1]  	365	2 
[0, 23, 3, 1]  	402	2 
[2, 17, 2, 2]  	319	4 
[2, 0, 16, 2]  	330	4 
[1, 9, 9, 48]  	319	3 
[1, 11, 8, 48]  	330	3 
[0, 18, 5, 49]  	365	1 
[0, 4, 18, 49]  	402	1 
------
The gap is between 3 and 47.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[1045959784010095309853194296724582912832501575847561,807108069399217356033422076883059747364396102929355,103848157533310383245983284467582348749260312501481,462226376475311975560134674153278629058704563353818,442252863271426012786702142536056297890814223113456,144635543939525265236603153617256338285443229204595,699441561153179965994061604413180610280861458658218;\
238169530726888077939516165705220932480456824589180,1008960523910287191993559114812615219640541082700176,182542671175222476696725920807667364799688214608883,735971921844116419804856672993968224564709008896981,362836755348928141358569831542355800661620964499340,150355393362767881264957285209653391995552937253440,715822642944320517861990979607444501020342820426315;\
232238621312666402845041089123945476267599232991215,574374249066385805883842802221547436845105322209296,720525477954815732597787842912291523842284888759983,942367703469209091010221592403594957952410791036273,499367851838542676864528026089481999115646721911603,417746589023767803860013302153967677589446552677189,211166173423998640794601968829695073376630412064130;\
83415402471739879520793771786678758569566594337029,32801067013435186497516264556995950448587542882577,558772619581744158272345053966933406618050493850432,875343110978145711706253817774665636558701079690823,482299575382190256183358521794172851324897516456560,928437237052193646204016527746296843945212591127445,833165033074799399881086952214622516286172923600274;\
180465686479624770108965049001921399424941879098750,81898217892808372813470656470063949430083252083228,250998720408472720728908895223915172983801905864898,133998750377627079468028794680677806444482432117166,222982074750961019111573737092112143801086121988450,651669208333876436771756962063955284805636458997820,1021832969616947017806642333740828045730045082819625;\
1043870619453194448950073097998799074485982199735480,852291609593111987774580934933272180295358950757702,544140068601700494572250789542181545971708266042639,649915237170228383936744839298656725596748918296760,588745687424458362095451018113123607231569971381305,657305827886211722773645920481653153121501137735657,113280051688067100475583019710552679239976766981493;\
249393712468284071525562211270992381285076865185340,799178748206122539099429719628093971366969650191329,985873206507874511812462318597994229826673119109059,394441693591000026664196835139094909723716762498319,21160323151028766495374951114954192292174877565447,240325627817322786149267623229771553742149223394098,869764436664717560528223061885234971132691218701328]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
