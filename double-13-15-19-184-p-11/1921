/* Comments begin... 
Coefficient of   x^13 * y^1               = 4
Coefficient of   x^6 * y^2 * z^4         = 2
Coefficient of   x^4 * y^5 * z^3         = 2
Coefficient of   x^2 * y^8 * z^2         = 4
Coefficient of   x^1 * z^9               = 3
Coefficient of   y^11 * z^1               = 0

Here is the polynomial we're using this time:

4*x^13*y^1 + 2*x^6*y^2*z^4 + 2*x^4*y^5*z^3 + 4*x^2*y^8*z^2 + 3*x^1*z^9

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Not smooth!
Coefficient of   x^13 * y^1               = -3
Coefficient of   x^6 * y^2 * z^4         = 2
Coefficient of   x^4 * y^5 * z^3         = -1
Coefficient of   x^2 * y^8 * z^2         = 4
Coefficient of   x^1 * z^9               = -5
Coefficient of   y^11 * z^1               = -1

Here is the polynomial we're using this time:

-3*x^13*y^1 + 2*x^6*y^2*z^4 + -1*x^4*y^5*z^3 + 4*x^2*y^8*z^2 + -5*x^1*z^9 + -1*y^11*z^1

Allocate M_len = 3200 elements.
The final length of G is 70
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[3, 8, 8, 0]  	311	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[1, 20, 1, 0]  	332	3 
[3, 12, 6, 0]  	333	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[1, 22, 0, 0]  	343	3 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 9, 11, 0]  	357	3 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 7, 13, 0]  	365	2 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[4, 17, 0, 1]  	307	5 
[2, 16, 4, 1]  	342	4 
[3, 9, 7, 49]  	307	4 
[2, 12, 6, 49]  	320	3 
[1, 8, 11, 49]  	342	3 
------
The gap is between 2 and 48.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[919535284286222230642160452289528032869191755354997,839479688378560525674300455680060879910094994161446,245767600292817139905226920070786207833354319567662,568137384797318789972668397391534912926529984807959,724360717868814785658628996982711118901544742179225,689673696675428759935129804588048711415412703027840,494959881675290518075595487632572354091922183728099;\
705696635424937614246620218842978807988385220485428,403397930935690094841424304199499566434595996459112,273207112558828723823898537884240380236533530741575,20847836959284168596469241122751662398516259359068,76171275930537800983692616655335479915397987022511,3146213349120147669057754779533953626432212592479,673124740026965785969976085826501431368336930338096;\
820490648927979500725721780427827704328312229627730,1052250185627439133150517385440907386809615974368045,316175546796756227612181195662647757032001891948489,585474791818582872420166195936026375616341955524116,307030738544863615445118588724525678036940136810392,591519453641321587830329714744173658754351967776506,708421032947058539870329940096451259320007421110272;\
989080270207427572786678254412116965458911355758201,702087058665031966438317133846433437967978615082942,562549349991918252778314585268653893543577931191894,864394377262381308200135057774472883231692050883324,1037531427982920545451939677452808752609483442757774,622339930155743260416351008020709115680213980746939,646278224275245804965883324670022315768003710744695;\
743494884748373543848166466667910606608210694309554,1009518853408069140120379005958365306254783024565921,585703945609829857405571373296202220712363848477121,922940341916923899521442286931295191192017346099873,379151203828887128515604196401641465250299384449761,385230973854458172899726532926740162455697557019085,13864667004100105888377609724421534625381557491051;\
494479361816975828154177625455686075139681535142333,714548934290101928042753123117548724140788525837118,636708034120129585011318019121375642272923581268957,870770153868532554005753688655505153163901849164822,177821825711905164656406969403084389917020141637021,1028644456532026007365563595114857942666216403983903,581286932386893977354214543171168928018712876764953;\
442302478945840676918219183288673299240243477130703,334471082089206573926148176484650587848788535927636,581424009592070866503963028238585223212851374874007,707433871095217814679983275542267475934959287552693,937322834862509514872074850015193887368346646106315,145757723727704658971104463166880678377259229890847,24252792884433653633763292697084825873962414136439]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
