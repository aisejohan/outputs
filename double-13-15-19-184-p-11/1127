/* Comments begin... 
Coefficient of   x^13 * y^1               = -4
Coefficient of   x^6 * y^2 * z^4         = 5
Coefficient of   x^4 * y^5 * z^3         = 1
Coefficient of   x^2 * y^8 * z^2         = 5
Coefficient of   x^1 * z^9               = 0
Coefficient of   y^11 * z^1               = -2

Here is the polynomial we're using this time:

-4*x^13*y^1 + 5*x^6*y^2*z^4 + 1*x^4*y^5*z^3 + 5*x^2*y^8*z^2 + -2*y^11*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^13 * y^1               = 2
Coefficient of   x^6 * y^2 * z^4         = 1
Coefficient of   x^4 * y^5 * z^3         = 5
Coefficient of   x^2 * y^8 * z^2         = 2
Coefficient of   x^1 * z^9               = -4
Coefficient of   y^11 * z^1               = 3

Here is the polynomial we're using this time:

2*x^13*y^1 + 1*x^6*y^2*z^4 + 5*x^4*y^5*z^3 + 2*x^2*y^8*z^2 + -4*x^1*z^9 + 3*y^11*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 70
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[6, 13, 1, 0]  	292	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[3, 8, 8, 0]  	311	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[1, 20, 1, 0]  	332	3 
[3, 12, 6, 0]  	333	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[1, 22, 0, 0]  	343	3 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 9, 11, 0]  	357	3 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 7, 13, 0]  	365	2 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[8, 11, 1, 1]  	288	6 
[2, 20, 0, 1]  	326	4 
[2, 8, 9, 2]  	317	4 
[1, 19, 1, 48]  	317	3 
[6, 14, 0, 49]  	288	5 
[2, 1, 15, 49]  	326	3 
------
The gap is between 3 and 47.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[438727477243893082052712934687124807196139285709090,1012414973750292645178191213617730460003180091944918,1045989787282963937303946551092502203101166513888068,536920235283134739940360546631421877930119622174168,715193051351059057536962979483163580330603815089770,931897384282054481112733691543815602523210380449263,193738524242606090360329358565089167996791296966235;\
77364070081006004071120420168913208204818888044986,619920392232886731994129758851792611624603783916334,672835837331465591071844729174652366897869612517219,545618561655041429362414347833867595407011667710534,225044514449829178313532626689211853172608120649299,322439987536430137524666692479335431434085451930265,201272796439255676120967331700656618013492532133249;\
992455715306327913835591371446657905312717287570597,393373593309412651159079530396886051199347514702864,1000582917354803287464400875585554774592179067371944,828502719937661473462459105314826034768096305218075,525435516907097037242848838802522141422190762100603,513369366465225654278354490058873465334482309098052,849742255869779236075152006870545306319239852689401;\
879717310201012072924873067412519827476402170797908,978993949146310747319988565548642586488043984436031,1063717266026777000169012024755647353954182968413516,1058362568067474803747136775146934875656044935661577,110189279006121511767198065961321291062214646913472,381472664850159522149930895002333913134713124814991,989576474610205076234490033622407536459410718040974;\
364903508286885330845099137974291703313398583063097,217472459753622796687010674148061786666770770762106,126925014046550609902336927514147744023523048773072,753981385797660895815256160615568078326707779340542,731770426151137749439898394548302046462463559866821,436487711935398636068779867137551899382256631394567,979203215670657731086358921931919866193488504043355;\
310875871063562661393090860514072041673419717875928,227455631180598016112600890375659242912734453739160,809711185748091977116793282752722659750759827821766,641309080439645485335555358587613978459748684867273,796255109303760346513528793939818012748671152382155,1016343756586834848880005505777600314112235178550284,917429100344626149636028470042597614721419369962696;\
912080276827862547885234493449778675263812699781844,208861996142861701794680648004048497321368606064176,94132058693019625855129883558382385966343407934454,753974465662434551620857909235162587339331579776272,991952822486970086906303564217886871954256822578409,514981807653186887167220221728402317913184523157493,393172538934857066313253419188108137353293388156645]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
