/* Comments begin... 
Coefficient of   x^13 * y^1               = -5
Coefficient of   x^6 * y^2 * z^4         = -1
Coefficient of   x^4 * y^5 * z^3         = 1
Coefficient of   x^2 * y^8 * z^2         = -5
Coefficient of   x^1 * z^9               = 2
Coefficient of   y^11 * z^1               = 0

Here is the polynomial we're using this time:

-5*x^13*y^1 + -1*x^6*y^2*z^4 + 1*x^4*y^5*z^3 + -5*x^2*y^8*z^2 + 2*x^1*z^9

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Not smooth!
Coefficient of   x^13 * y^1               = 2
Coefficient of   x^6 * y^2 * z^4         = -5
Coefficient of   x^4 * y^5 * z^3         = -5
Coefficient of   x^2 * y^8 * z^2         = -5
Coefficient of   x^1 * z^9               = 1
Coefficient of   y^11 * z^1               = -3

Here is the polynomial we're using this time:

2*x^13*y^1 + -5*x^6*y^2*z^4 + -5*x^4*y^5*z^3 + -5*x^2*y^8*z^2 + 1*x^1*z^9 + -3*y^11*z^1

Allocate M_len = 3200 elements.
The final length of G is 73
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[9, 0, 9, 0]  	288	6 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[3, 8, 8, 0]  	311	5 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[1, 20, 1, 0]  	332	3 
[3, 12, 6, 0]  	333	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[2, 11, 8, 0]  	343	3 
[1, 22, 0, 0]  	343	3 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[7, 0, 9, 1]  	262	7 
[2, 9, 8, 1]  	313	4 
[1, 7, 13, 1]  	365	2 
[1, 9, 11, 2]  	357	3 
[0, 20, 3, 48]  	357	2 
[6, 11, 1, 49]  	262	6 
[1, 20, 0, 49]  	313	2 
[0, 18, 5, 49]  	365	1 
------
The gap is between 3 and 47.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[473417395699346652913425130081817946762807322076877,452428793761253498201631493651468734994880505817623,188061734750412615439984177751676316780126056804109,382581363469010984038588781396492988511643579008720,19437840582723479045464648090886112559441968437015,652279248153447560320028597295687487576144722538193,720558741096753044294510823615668875860573353818890;\
450728832542293511846133259432971317839784976413779,179725128534941855663366902283982464604144320480839,370490097218569556774175881233673703347927771039410,968040629814184243101015377304328643254586376970244,1058059810958273235290535867101525542515813711667445,711467262544103523360007213937544509110205639646665,680495465186417669696460211312133091597842807176182;\
346567715921434249419925852704252231862128995156250,438880038551069340457910364347996102513008358956221,551199404951495115392732112215436051168348996077300,105679260828416389290570012097668119866590031592215,333985934887713944900442725885879872933655424309589,880774716367534257030246323283417585766808941142439,300713138025184138826596410584175772433758781728759;\
281354305574893816871800535217539927576974255691067,862929762950012421808541306330792707379720787526686,469044972014212861109677834605842445836278520122001,750158128276458898004488256125561496968271671220742,429306176450470576156027881503534303004332376734524,429213912298426437058252785893499875354845108822690,355604411355535252290294962996783655588508425831575;\
972097936965598490847875319456504783524429594336658,415818352761872661288850687842675529676394139628368,163736483956824205418840585997746501445313072823722,120595711337473319046173890101220718043444757678765,532376256886437100730030416398325742027418929567811,622782362568323781214583791256164276955455184683395,473003832160671847095306743869882475410427535791183;\
272388933176813329063706208624917809968914300351851,303369033835525779679850935033982907953809092157354,817875886949601039274055159833110540540193541531637,714494776466820130501612417778192418070995467779088,556296508604646212164701819711529976718318901432762,435688393340067458481311157676403726655435899708588,320981086883279562492948527492781323706140343845826;\
65482992440904487405367496722604471022971697815915,151705253752445542355716904845711637366539885899903,1010367068846764586680533025659364974989871401061299,632133846879722394657868002150063392114411866797001,15830757114606656454914967434927499684999123279566,28027188459426306217258996101975970687488907112750,114674488749113587736194176252122733851639666882366]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
