/* Comments begin... 
Coefficient of   x^13 * y^1               = 1
Coefficient of   x^6 * y^2 * z^4         = -5
Coefficient of   x^4 * y^5 * z^3         = 4
Coefficient of   x^2 * y^8 * z^2         = 3
Coefficient of   x^1 * z^9               = 0
Coefficient of   y^11 * z^1               = -5

Here is the polynomial we're using this time:

1*x^13*y^1 + -5*x^6*y^2*z^4 + 4*x^4*y^5*z^3 + 3*x^2*y^8*z^2 + -5*y^11*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^13 * y^1               = 5
Coefficient of   x^6 * y^2 * z^4         = -5
Coefficient of   x^4 * y^5 * z^3         = -3
Coefficient of   x^2 * y^8 * z^2         = 1
Coefficient of   x^1 * z^9               = 4
Coefficient of   y^11 * z^1               = 3

Here is the polynomial we're using this time:

5*x^13*y^1 + -5*x^6*y^2*z^4 + -3*x^4*y^5*z^3 + 1*x^2*y^8*z^2 + 4*x^1*z^9 + 3*y^11*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 68
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[3, 8, 8, 0]  	311	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[1, 20, 1, 0]  	332	3 
[3, 12, 6, 0]  	333	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[1, 22, 0, 0]  	343	3 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 9, 11, 0]  	357	3 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 7, 13, 0]  	365	2 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[2, 15, 5, 1]  	346	3 
[1, 7, 12, 49]  	346	2 
------
The gap is between 2 and 48.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[67764778680814987879465846557585974631567985253584,472288716625257030636683590671014715129097896395758,338509788703874207073984067198886783042031027872741,1020012209321605764023662859480343501752150874279651,218768011426761798471443604230987216378641529178280,307248866238182910033636585971010493557987171552619,870233616088964640217800225473090635126431316525709;\
512021837103401193811500224597997803295786327797230,517623739024976480310572852595121226084651817225162,829542246997888792644096645852413720591846742310993,322319213977443185790922955059397079275422825243174,369347282738756893180668606303987121357117289917289,760357779644365846894242251101796126208040392770650,310223553770230030061072020928358619343991117881212;\
955918393879395221333991137323606714506816316609467,688873289344814963496219440783552860598895920069200,648350657499632060010779448609977581804335794894908,155028759996772103370285694356318725119679849371673,677233160076984559153268748344482223733131913438986,632077455704540141847538337508068321370103550278246,710442950440675967900172310509058303692880626396332;\
63115982352852736971705840101765013687756092177871,31886442062892786729968052138708418356328387291418,749097459266748313322182454383143287811716153679008,34428249084754606005381447914996442279389721420234,995683092350573635537987868349223979906773948309385,848075675570019078344894555539581596501734818217187,53635105197098884641708992410682504464351882234094;\
814725621462085101388463849810986283456839750525659,617242323049016416386596252930858486946034605989964,436486506406282073798677557985109978883514148397555,145281808760702834845020860189742797522688616243321,830533062835294973747959689309971439162613187632328,287580294361918151369699446409690439272652978462797,47178758625600660370244888575621668332025428122131;\
433232117062794572576964243032435925625038580352649,287177426687367678361547621450114959237699433862936,370325325895368029814542254950782340625333553868598,703496066026510534844681778447932489605956358537987,645412610242257427899235189351073292421282656253240,807444829469602298771232775620418602887073092244815,271586677018895119255151601708292800013371824060866;\
372148580064489693968337140024084443121875210750151,691695535304144898505533502079704889786775141531857,570702515711535537768379624288878388414726539097943,779777577604797740508551744666769527174438219835186,457865135739346625949321039168834709107447653719160,462992044333355727200247377128496543191426848158196,444422423452520740668783613008232680792196300349606]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
