/* Comments begin... 
Coefficient of   x^13 * y^1               = -1
Coefficient of   x^6 * y^2 * z^4         = 4
Coefficient of   x^4 * y^5 * z^3         = 5
Coefficient of   x^2 * y^8 * z^2         = -4
Coefficient of   x^1 * z^9               = 4
Coefficient of   y^11 * z^1               = 0

Here is the polynomial we're using this time:

-1*x^13*y^1 + 4*x^6*y^2*z^4 + 5*x^4*y^5*z^3 + -4*x^2*y^8*z^2 + 4*x^1*z^9

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Not smooth!
Coefficient of   x^13 * y^1               = 2
Coefficient of   x^6 * y^2 * z^4         = -1
Coefficient of   x^4 * y^5 * z^3         = -4
Coefficient of   x^2 * y^8 * z^2         = 3
Coefficient of   x^1 * z^9               = 3
Coefficient of   y^11 * z^1               = 2

Here is the polynomial we're using this time:

2*x^13*y^1 + -1*x^6*y^2*z^4 + -4*x^4*y^5*z^3 + 3*x^2*y^8*z^2 + 3*x^1*z^9 + 2*y^11*z^1

Allocate M_len = 3200 elements.
The final length of G is 73
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	4 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	4 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[3, 8, 8, 0]  	311	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[3, 12, 6, 0]  	333	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 3, 15, 0]  	356	3 
[1, 9, 11, 0]  	357	3 
[1, 23, 0, 0]  	358	2 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 7, 13, 0]  	365	2 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[1, 20, 1, 1]  	332	3 
[1, 22, 0, 1]  	343	3 
[2, 14, 6, 1]  	350	3 
[2, 4, 14, 1]  	352	3 
[1, 18, 5, 1]  	378	2 
[1, 0, 20, 1]  	393	2 
[1, 1, 16, 49]  	332	2 
[1, 3, 15, 49]  	343	2 
[1, 6, 13, 49]  	350	2 
[1, 15, 6, 49]  	352	2 
[0, 10, 12, 49]  	378	1 
------
The gap is between 2 and 48.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[983126770595763856888531294957955458946824591636587,480194795967405291921648990688604821548956690607540,395879782324396877878456550590680890026073616201209,787752409538226777088605774224558180974280805609257,932761808019222016623299907538640425619474742455552,85324267675753413267978784124887883777282303472677,879905493796683109147288776984598581424569454463604;\
149203987568411165865321316020577357684916256773838,528868949088667989558240212194004137490853978788854,939647157102827500321582147810856948161363015603934,745526999048961764285596669540022407211035884110857,999872608280177074843553876799241492879916839427953,815535155761084389813056778865558605323686849138859,734150203435195815326178835683641814575435807009336;\
748837782475978734548586648081248766350739988148590,282966602407197188366828300662440169020411922039132,1001116012007742943771131270866131264772285769235073,471308370225108842307155090528930133274732056641815,559911909710319188469850728913702520970776385400887,623818094289334530946021892225852627255417377437234,176585922026761277506712310253645615369577910136738;\
816417225713493581079241427438306514295673820294524,837423134062298068071495421465378690112543416043803,925430985473633659533202806651903580921401485742455,799510600450363457252708676359602832871604712156697,135222893103788760040930615394834957371104180633060,169115344016346791734881825605884240572976702940560,214581940366000084431515839592995418466233431524724;\
155266949603343699772653261607868527784414702054456,201843896722989050121259332299141451132978488907944,753280436435142010339465408293246207811079825929256,345601583692659259209033786959251784938659466308025,752601238178866669731380959245932362037765787393260,193978340261341082814758956849563849242490575808138,387318393635158349902446741458108954450392439392157;\
232709880057458772487859036243790851311037822276400,261051848110353998049392362747053023105328510344049,759663321410761189467498496188228162043988004165701,292682798247799395130672609358816025187570349316814,264768041698969607535269423338821645583789733157903,730336808394967276492158262854737444524981710375964,421816383658745844148115715053730500851999060737328;\
932018845208959182224761055644136254546038192156656,121133600798277857086588124747828345383486512152202,406872265135055306069006338665438684201647128804547,649072668806774645681057239697819228362911391946010,706215416828631210940375487837820003431429237525305,995900230084185989777602938528794538635136952587684,241161015014437213181856252546412452086526828437456]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
