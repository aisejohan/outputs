/* Comments begin... 
Coefficient of   x^13 * y^1               = 3
Coefficient of   x^6 * y^2 * z^4         = -5
Coefficient of   x^4 * y^5 * z^3         = -3
Coefficient of   x^2 * y^8 * z^2         = 3
Coefficient of   x^1 * z^9               = -2
Coefficient of   y^11 * z^1               = 0

Here is the polynomial we're using this time:

3*x^13*y^1 + -5*x^6*y^2*z^4 + -3*x^4*y^5*z^3 + 3*x^2*y^8*z^2 + -2*x^1*z^9

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Not smooth!
Coefficient of   x^13 * y^1               = 4
Coefficient of   x^6 * y^2 * z^4         = 4
Coefficient of   x^4 * y^5 * z^3         = -1
Coefficient of   x^2 * y^8 * z^2         = -1
Coefficient of   x^1 * z^9               = -5
Coefficient of   y^11 * z^1               = 2

Here is the polynomial we're using this time:

4*x^13*y^1 + 4*x^6*y^2*z^4 + -1*x^4*y^5*z^3 + -1*x^2*y^8*z^2 + -5*x^1*z^9 + 2*y^11*z^1

Allocate M_len = 3200 elements.
The final length of G is 73
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[3, 8, 8, 0]  	311	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[10, 13, 0, 0]  	325	5 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[1, 20, 1, 0]  	332	3 
[3, 12, 6, 0]  	333	4 
[4, 19, 0, 0]  	337	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[1, 22, 0, 0]  	343	3 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 9, 11, 0]  	357	3 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 7, 13, 0]  	365	2 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[5, 14, 1, 1]  	294	5 
[4, 17, 0, 1]  	307	5 
[3, 19, 0, 1]  	324	4 
[2, 20, 0, 1]  	326	4 
[1, 19, 4, 1]  	374	3 
[2, 9, 7, 49]  	294	2 
[2, 12, 6, 49]  	320	3 
[2, 1, 15, 49]  	326	3 
[1, 4, 14, 49]  	339	2 
[1, 0, 19, 49]  	374	2 
------
The gap is between 2 and 48.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[365781288750198384432848197965662008386371901710486,931466089478748553924432049473838959980609466115612,71913442467294018373292824430137442579987469758766,514335824115358095367969892942185748386465544396589,108140649996618971938878054134080892507117055458917,1053088690722784820964934525188382131567558606064607,250386921349615374838325220828856047723237070740069;\
513828545488067827754354741499831317652626637722253,917458496044509652902687601709782796145555821528199,2308859788755250529812112921562576254533751428627,55415128397252282889126885189497752057660940881450,712864671356175116364396883891861062359930304325568,598147425120712728467239477186186278963865171690387,326583409219696629709063037027814926448605831598700;\
556204103469860736149555352133514402239439354639260,858276542458263986874267650687584666329223889347113,851610142410764914069512937621969539687748803335897,555334002047780501193966883017221988529186183864832,1032150694970214491651322183851999492987490539097907,447215168369188713174755719919898410189192817294751,162224982927442223605001581941849706601322495649893;\
1037707256475279167361999391250212854756788833875652,287544343516583568937272929660664067856286055240301,1022353803504085877097914454314009852234536060794653,849759584469126300506841708978511599074214984212569,742808683811225366106411629018189023656543668410174,1046762112780311939014213260295867343654328974225197,293534410491203463591504346794810465964562170950569;\
687241571907309321861877300193179353052660062052859,35427247735775143129466983782262912720763235653557,47684609820639240127110954805181883073734324258766,818024764975100688692125855486253960418335491764802,436495022450977832854314629650710665833375446010061,1063434069531976753873059131444104820673658473241964,1067066841091636305919243379347152205690861381994643;\
331032214083156962020379096433824095404426561550426,314157830249977425025457982480041954779036880909061,578001086786506606133983721631892210717917153815470,659415514171589479122497141632691854706361095407189,916713883890315292646011854625433075670827949974292,725823113246607866013824857507377168271251860315386,890107908835782228532926316507293453474027137910321;\
505918000239356198898402794567615532592563485542452,132832970543929104464398871664751860191258832090163,1026686208798327995505170752223637163529403455846494,667068567494880673255826880400279162535468158841228,847107211672638903934996810408053413046330797554124,743369346662558138954873851904372556574505939761025,641441523155185808159574149027612483296202092590359]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
