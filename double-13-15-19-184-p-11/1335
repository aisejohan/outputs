/* Comments begin... 
Coefficient of   x^13 * y^1               = -2
Coefficient of   x^6 * y^2 * z^4         = -4
Coefficient of   x^4 * y^5 * z^3         = -1
Coefficient of   x^2 * y^8 * z^2         = -1
Coefficient of   x^1 * z^9               = 0
Coefficient of   y^11 * z^1               = 5

Here is the polynomial we're using this time:

-2*x^13*y^1 + -4*x^6*y^2*z^4 + -1*x^4*y^5*z^3 + -1*x^2*y^8*z^2 + 5*y^11*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^13 * y^1               = -4
Coefficient of   x^6 * y^2 * z^4         = -2
Coefficient of   x^4 * y^5 * z^3         = 2
Coefficient of   x^2 * y^8 * z^2         = 5
Coefficient of   x^1 * z^9               = 5
Coefficient of   y^11 * z^1               = -4

Here is the polynomial we're using this time:

-4*x^13*y^1 + -2*x^6*y^2*z^4 + 2*x^4*y^5*z^3 + 5*x^2*y^8*z^2 + 5*x^1*z^9 + -4*y^11*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 73
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[6, 13, 1, 0]  	292	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[1, 20, 1, 0]  	332	3 
[3, 12, 6, 0]  	333	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[1, 22, 0, 0]  	343	3 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 9, 11, 0]  	357	3 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 7, 13, 0]  	365	2 
[1, 6, 14, 0]  	369	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 29, 0, 0]  	435	1  <--- 2
[0, 7, 18, 0]  	447	1 
[8, 11, 1, 1]  	288	6 
[3, 8, 8, 1]  	311	5 
[1, 15, 7, 1]  	371	2 
[1, 17, 6, 1]  	382	2 
[0, 26, 0, 1]  	390	2 
[2, 15, 5, 3]  	346	3 
[1, 7, 12, 47]  	346	2 
[6, 14, 0, 49]  	288	5 
[2, 19, 0, 49]  	311	4 
[0, 7, 14, 49]  	371	1 
[0, 9, 13, 49]  	382	1 
------
The gap is between 4 and 46.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[889591665200484976115702730538253995324935409062652,84966608158984452052070249308162841638300025223283,19291995656368324382483234644144387010024744141659,393114405125631620831679098933823926077260889960338,216565762961969383984595847059323866287855651483916,144991904407539361007705463024400110287893169115176,910957694388551724320208330018818229617937204793162;\
449996269201992201663712937811761682215042110867919,196182643875455861266094361142752130869758691316848,784324454578425542499020672609220484684396945667004,324563853460370785505565741179029437154685793138560,13692699752723763202292701819272333844036614880884,879853265132540044276615240407137549410078763311854,977942775802085414950562064522363662057003803761044;\
241819146394205673889369631626263225611292968594450,638734817982133413590786733340214862079491185392499,222670422502390977763372945161900826520350595518345,954904273558994299955767241430315018046473897351896,651413777888943444397044217402998945546170740529062,322758483840226793541496624660570293358440547262860,1002837600523097337551517186244248166075787789350257;\
450893776870786073944344656285098220823979671566847,501556990586880282989163466979578535823470768263769,398591304285139043130198080442294195125136968623526,307959968758076038428145474497242553658316568608824,749211401530749489174193372041898862887613492425765,523863601301275323042173071496163303161947594704294,284220335929778448417894731369829969752713740780852;\
81954922467784652761236647967054104146262087971868,705709797342546148461858810524220901630287341411015,802626148421330207792322523168716528824994282865143,314689298835820260514565385307414314754300967054453,239131097889650231751129192275254201748437145247619,592316911212565461221129818159474438176721715534247,890839336008508446865967243664776997260304198802346;\
601699754985214730902848238282785649574917578069176,1060254519543958032761459280174702429082765528639394,886823978839596172968489649209693132829551396236008,236427248608272966807911907977832108520144899654965,342817051922694357225855458078164322143826139449265,556909891540390057526058948336412667553980833582252,207385753737161188058530884920703070492792174078532;\
174573170854546848925706452960486846024374953082547,452338933753833361684058708012714814616789342169259,19684044077720985608945282360762096995095939458068,327063542131497729021540559868567582494077442629819,878526105477265931821377740716932177180886806358018,8295171218537172183524145085532024402654842558546,245554859419067764943032264663268849995437964419632]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
