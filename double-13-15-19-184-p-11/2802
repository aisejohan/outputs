/* Comments begin... 
Coefficient of   x^13 * y^1               = -1
Coefficient of   x^6 * y^2 * z^4         = 1
Coefficient of   x^4 * y^5 * z^3         = 5
Coefficient of   x^2 * y^8 * z^2         = 3
Coefficient of   x^1 * z^9               = 0
Coefficient of   y^11 * z^1               = 1

Here is the polynomial we're using this time:

-1*x^13*y^1 + 1*x^6*y^2*z^4 + 5*x^4*y^5*z^3 + 3*x^2*y^8*z^2 + 1*y^11*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^13 * y^1               = 2
Coefficient of   x^6 * y^2 * z^4         = 4
Coefficient of   x^4 * y^5 * z^3         = 4
Coefficient of   x^2 * y^8 * z^2         = 4
Coefficient of   x^1 * z^9               = 5
Coefficient of   y^11 * z^1               = -3

Here is the polynomial we're using this time:

2*x^13*y^1 + 4*x^6*y^2*z^4 + 4*x^4*y^5*z^3 + 4*x^2*y^8*z^2 + 5*x^1*z^9 + -3*y^11*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 70
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[9, 0, 9, 0]  	288	6 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[3, 8, 8, 0]  	311	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[1, 20, 1, 0]  	332	3 
[3, 12, 6, 0]  	333	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[1, 22, 0, 0]  	343	3 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 7, 13, 0]  	365	2 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[7, 0, 9, 1]  	262	7 
[1, 9, 11, 1]  	357	3 
[6, 11, 1, 49]  	262	5 
[0, 20, 3, 49]  	357	2 
------
The gap is between 2 and 48.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[985964412259471354223788659209603209736724282623547,659506790797880534521895373315574554194266047773169,991178756847650189448850633407536503382298702049676,633012200832828884999679989502286555916032404130637,1048893763907556202133710550075832908124826621930956,949031421423877357835780307206086620825870955555699,131694781130720793725261128732560983593081834287776;\
605964292740436726157801413527182909554675193303741,559651089207183608662646890572796388966967744034189,652948227242024403873670756166392922840974385723206,486903924579053740313417096730763295292890626340483,82043921267310946341687139607602349178054480463891,94781086102204417655556386251028734788287765943097,379089402670702746615653602856163135828687621872770;\
155246462449708010676015881331269808856411620344370,815181746222732763292275610625090656220074230921787,685742933914685971987292325442586240934297974239492,810220427842553589279808100143814392236774881856964,284337773626138893636261814552271952745256638333714,501674774135317183866686403486540698600638757435277,687391273438519122155225383095706107041519569117485;\
931161989414482232116516061518561878951179460007339,877055054350520516303464716618246825844172561489424,493145568836448359755933349639914193190527427468616,902255124193117298692119389705925885643620255564824,648571501550804651766251346467990825459464982137510,766622131406768971056259519046618388716156808166788,1045665127189579495841660094878850358596520475343810;\
1026073736769185429960000344892956384123279442667307,296612840796550609944003964731736130558119203278092,620543810665572413633651070692687770857852176870701,727272872483469894721073093859975817423419457528147,62359686244913053512888105605926794134771385143607,640426058680751234421196518993121222060215409236521,598880889032649010148253824928308997539221905530190;\
215182886348860372513984757489208088848703264372948,259547099537307320663356082693597130486331683555038,505830675921527242331418525632698878897697594239270,563792828616252932335267893726978472002717344415126,420511598103115663975409018572410024730435715887382,64907676816846740400419795972877975588858132608960,935039612874632276563450886561220093411553210084342;\
972098696960653347763294221138511334700939313178651,904406171953549221154381436387468811879613631274918,929836011688612204308183775044894210421578090584772,602807126008504759649735529330806348698604482325499,809402111181500114253139355522168635949811362442113,140755723344978726741829206829048544810861441026486,696928576120080206578655941211722375051969082980553]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
