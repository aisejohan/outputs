/* Comments begin... 
Coefficient of   x^13 * y^1               = 4
Coefficient of   x^6 * y^2 * z^4         = -1
Coefficient of   x^4 * y^5 * z^3         = -4
Coefficient of   x^2 * y^8 * z^2         = 0
Coefficient of   x^1 * z^9               = 2
Coefficient of   y^11 * z^1               = 0

Here is the polynomial we're using this time:

4*x^13*y^1 + -1*x^6*y^2*z^4 + -4*x^4*y^5*z^3 + 2*x^1*z^9

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^13 * y^1               = -1
Coefficient of   x^6 * y^2 * z^4         = 4
Coefficient of   x^4 * y^5 * z^3         = 2
Coefficient of   x^2 * y^8 * z^2         = 3
Coefficient of   x^1 * z^9               = 3
Coefficient of   y^11 * z^1               = -5

Here is the polynomial we're using this time:

-1*x^13*y^1 + 4*x^6*y^2*z^4 + 2*x^4*y^5*z^3 + 3*x^2*y^8*z^2 + 3*x^1*z^9 + -5*y^11*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 74
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[3, 8, 8, 0]  	311	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 23, 0, 0]  	358	2 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 12, 12, 0]  	408	1 
[0, 23, 4, 0]  	421	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[1, 20, 1, 1]  	332	3 
[3, 12, 6, 1]  	333	4 
[1, 22, 0, 1]  	343	3 
[1, 9, 11, 1]  	357	3 
[1, 7, 13, 1]  	365	2 
[0, 20, 4, 1]  	376	2 
[0, 23, 3, 1]  	402	2 
[1, 1, 16, 49]  	332	1 
[2, 4, 13, 49]  	333	3 
[1, 3, 15, 49]  	343	1 
[0, 1, 18, 49]  	357	1 
[0, 18, 5, 49]  	365	1 
------
The gap is between 2 and 48.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[250109332533913025516101094526534346199434566556460,100990547952027124784977132010996090051363070532269,296322021424313735342482882903571845592599482607340,339060708964390208099681196676924905554688715849050,580323296765791793675852865237805090860916138238249,933307457729842578776832611331818959227782066678026,675554522342239608869892839078103994674230537176395;\
113956854623665848013013743258891814957443700985806,344094634519139251319448546564548694860844644781179,59727172731596424100838996485913421032613374406974,429910103187986660696778743933993700856719300996733,1052490705147828002316851306016897232037872318459414,409409861890361105223403200961065943813994671022134,765939332905537297556617158074866988790570260732869;\
840162389295895141496579095274601125673841456334923,30788408326717770611907536493735940885102977054219,752378420530442920092656297208542208006266922224797,971425129017893988392723804837367234283220455825338,621704980891872089259381758033622177844212488243487,1001838878121492450745235447009300533636146109751356,399192703224295816621975828331204913235286053210609;\
309184509968407366276324128475335238623649568410598,469144190050731530280868009269668220351856342622171,302075137839041389782775521748545067272347103003254,757743974727312516516906969760136933810356262893141,505012948726877480767836166905756289901417786396060,591223358386363771106222088412226396335089262931507,579529898384582016173909901232982691992527849590441;\
860830690792884438379080570588725153828497596401365,587848409585640376006768887082007126891261163627092,575457419872264221988423309491863334301032940082112,254147213322711534456707710028894567400134058848548,127625327983206629612537942029758607128552493906879,268270681263165890893538631664954707658028096659542,112185311623058153150026706169309116518015540229352;\
243910777618111312605598024507379102179981537896399,423408486729601983215963759476856154774018985360370,360553770980581783790503274218551344954249891606737,365258004212516220022978322566864932245032881125368,944121799545038149603149894456782901275024954186410,572675541291900107408413200351618965855184039047990,661673800018018095608954227668519638953077778667161;\
503874212852455353272091144979625367022660870805009,800934660979275978705797914919518972601857499755666,473646856716883330200884907328911556448445445096143,608669970597437311187412340189955175998518066539983,17933810610239298568196110344237123006553834883250,794759525537518295372056331917850505143961807899985,137266457533919624887183086587961167904870401996640]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
