/* Comments begin... 
Coefficient of   x^13 * y^1               = 1
Coefficient of   x^6 * y^2 * z^4         = -3
Coefficient of   x^4 * y^5 * z^3         = -4
Coefficient of   x^2 * y^8 * z^2         = 4
Coefficient of   x^1 * z^9               = 0
Coefficient of   y^11 * z^1               = -5

Here is the polynomial we're using this time:

1*x^13*y^1 + -3*x^6*y^2*z^4 + -4*x^4*y^5*z^3 + 4*x^2*y^8*z^2 + -5*y^11*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^13 * y^1               = 4
Coefficient of   x^6 * y^2 * z^4         = -1
Coefficient of   x^4 * y^5 * z^3         = 4
Coefficient of   x^2 * y^8 * z^2         = -2
Coefficient of   x^1 * z^9               = 5
Coefficient of   y^11 * z^1               = -2

Here is the polynomial we're using this time:

4*x^13*y^1 + -1*x^6*y^2*z^4 + 4*x^4*y^5*z^3 + -2*x^2*y^8*z^2 + 5*x^1*z^9 + -2*y^11*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 73
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	5 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[3, 8, 8, 0]  	311	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[10, 13, 0, 0]  	325	5 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[1, 20, 1, 0]  	332	3 
[3, 12, 6, 0]  	333	4 
[4, 19, 0, 0]  	337	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[1, 22, 0, 0]  	343	3 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 9, 11, 0]  	357	3 
[1, 4, 15, 0]  	358	2 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 7, 13, 0]  	365	2 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[5, 14, 1, 1]  	294	4 
[4, 17, 0, 1]  	307	5 
[3, 19, 0, 1]  	324	4 
[2, 7, 12, 1]  	359	3 
[2, 20, 0, 2]  	326	4 
[2, 1, 15, 48]  	326	3 
[2, 9, 7, 49]  	294	3 
[2, 12, 6, 49]  	320	3 
[1, 4, 14, 49]  	339	2 
[1, 18, 4, 49]  	359	2 
------
The gap is between 3 and 47.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[479066501235926826343134365743638861256326501991213,382421510303825518241866702875290908068733497422638,903306918236553169438242780326630696730590382477502,567573004785554252894658483992095625499111932526384,1029841576402501477533791921174022638288108073929527,9352497071703591166406817180035446489354349545804,152398284446984069172889000188308635954565534543026;\
569736790777432451377244243177697464817711974398026,140398673788790000264084540386633499645534216105551,322522777663675266719537235252081076104060325436091,675488849343389355504565327684405010000480570996708,232414358490017086978057868000482144445973292675080,660789239475106512403593129979545275647054295621020,824207509562430735037517734557824247252521464099130;\
967689489161408751309316347908303807370321214076651,306829718360490058633311270013981391854350809107808,14448724464155622536701348792865945434324944697093,328786605596053704808182211729407090445285991155856,101515529278349716097856425293294362400083780718956,333445793643506149645001977952003193307572604081991,928193483803539417245842989099409912936724450153913;\
1061444295952190963068170389929360955218902326721151,24740503986843204610657307915587014698469529798641,211010604645891875541004497596359373964829982070366,259522195432442238041372709828211140996744589633830,62088417727338976004501073080557467298374117790256,561708628256347089273363067669651969767079197986089,451284123917465452015784433061396893976492727047399;\
222976248059485069210922819441073331584553679188458,128214382967053446489450673651513045923143556184903,703786739440956621191955588181351465258738267575730,54084048366935863921290469373350115320258014733466,75891488879296304029079793069537514547271500655595,170573694102512490763359647270149826135195976738200,41947738485118121529805284200981761754479695062237;\
576157727966478506751394297142088522589357697122707,552894856156614579646358161030746501316971845770950,662939377960034667721746604943087342324554828058527,917741104748940958808633672826532431726984960928579,530212935503713259473020863467954894581443679720848,390472870917827357153671834757884043853132669545416,15958680512048521529384655782359916476905009186732;\
1004380820415293012039467834570767284474454696465452,665179589035796260330403978821248780709783815954784,489497498445280112669247385734426299270939673161019,1004269189043348535127977400030460404479156506320970,110352204147326706114253999783527521008313070431103,315365603976178941183874414957869832108632300485012,705611353572799038580060710536816973694971173052215]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
