/* Comments begin... 
Coefficient of   x^13 * y^1               = -4
Coefficient of   x^6 * y^2 * z^4         = 5
Coefficient of   x^4 * y^5 * z^3         = -1
Coefficient of   x^2 * y^8 * z^2         = 0
Coefficient of   x^1 * z^9               = -5
Coefficient of   y^11 * z^1               = 0

Here is the polynomial we're using this time:

-4*x^13*y^1 + 5*x^6*y^2*z^4 + -1*x^4*y^5*z^3 + -5*x^1*z^9

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^13 * y^1               = 5
Coefficient of   x^6 * y^2 * z^4         = -4
Coefficient of   x^4 * y^5 * z^3         = 5
Coefficient of   x^2 * y^8 * z^2         = 4
Coefficient of   x^1 * z^9               = 4
Coefficient of   y^11 * z^1               = 1

Here is the polynomial we're using this time:

5*x^13*y^1 + -4*x^6*y^2*z^4 + 5*x^4*y^5*z^3 + 4*x^2*y^8*z^2 + 4*x^1*z^9 + 1*y^11*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 74
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[6, 13, 1, 0]  	292	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[3, 8, 8, 0]  	311	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[6, 16, 0, 0]  	318	5 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	5 
[1, 20, 1, 0]  	332	3 
[3, 12, 6, 0]  	333	4 
[3, 11, 7, 0]  	337	4 
[2, 16, 4, 0]  	342	4 
[1, 22, 0, 0]  	343	3 
[3, 14, 5, 0]  	344	4 
[2, 1, 16, 0]  	345	3 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 9, 11, 0]  	357	3 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 7, 13, 0]  	365	2 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[2, 0, 19, 0]  	387	3 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[8, 11, 1, 1]  	288	6 
[2, 8, 9, 1]  	317	4 
[2, 17, 2, 1]  	319	4 
[2, 0, 16, 1]  	330	4 
[2, 12, 7, 1]  	339	3 
[6, 14, 0, 49]  	288	4 
[1, 19, 1, 49]  	317	3 
[1, 9, 9, 49]  	319	3 
[1, 11, 8, 49]  	330	3 
[1, 4, 14, 49]  	339	2 
------
The gap is between 2 and 48.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[357401995418021273099385361126895931313325619740090,60901229354922803467659640990709816799497674570732,27509663685261520297396329043060387110968254992695,883134666558856684405467805329810530654010313953594,454025810743561245193613529342746096447614468267046,1003351218578583320815130946195810894900278764799872,5769582034955572603399100583064431815348556955961;\
646356482897192302124829163310430685112928352792683,582060981244958607714100979258766846239505112512285,795176871761555408267718883149550502887094386312357,677193661416092822876412824778579491984714823786636,631543465590632229856455558503665163302617968529961,853626660429993181491699482690772547811071022924997,685440239396816425714813028473206975945658637699477;\
623159423378579011172390035367999202965478612638192,1005759884425381955645043659564337484079295451078268,435293107604068863187437432112375514429097305759791,281414413086087294557988936093969081633758129297832,283220545874095330318539880329354839760840910350121,195633472345424692206433367797137410347918903716925,82912730268575568553211975893775782943271756829027;\
454612652281515794996341245672212084995686508364001,304942034205076667685225227214152746669569180741374,874237529533558829820785849808379322285982753808158,338227723841953749128442941797171302240017797793317,854085683281130911279373801476816271662835449305535,741475975885955259873178883557086728502356238473,367869051445691791266752137121386350385937479719935;\
901211199263689506507802016870509983207333446568435,291217535702870884723443081200479730267680972789577,578764402800132015227082338517789024054587997149477,883929419395697668729887227397006871450323949999900,108761964352770512399346135735232409206959365928382,975875393196826236990402298134143312938448333871140,276447758759278673576221557017535167087907632189374;\
270229095305153611201073628641088458937911739199166,1022688067049642695448955650910814339697521149961327,615305508086954913062249238530598894491316574469096,379389171848188996629033067337821315303129467618442,551909611006077422479235881035075746716723023481573,844738641033775098200665005682805216616117467496771,987298246408756327236823733875263435151855673944689;\
675710431257698016798449512544811456911790578825165,881246389071498754108171630215327417272992048562076,691313808415977714550937187668740122718259681374353,217469937825608609438528665316748702348134648179891,221198565856456138116333903069013557160411512811724,528505516404824970327264856810117634590742817921631,1005117829579085171819881460903896225797420316151748]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
