/* Comments begin... 
Coefficient of   x^13 * y^1               = 0
Coefficient of   x^6 * y^2 * z^4         = 0
Coefficient of   x^4 * y^5 * z^3         = 3
Coefficient of   x^2 * y^8 * z^2         = -3
Coefficient of   x^1 * z^9               = 3
Coefficient of   y^11 * z^1               = -3

Here is the polynomial we're using this time:

3*x^4*y^5*z^3 + -3*x^2*y^8*z^2 + 3*x^1*z^9 + -3*y^11*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^13 * y^1               = 2
Coefficient of   x^6 * y^2 * z^4         = -3
Coefficient of   x^4 * y^5 * z^3         = 3
Coefficient of   x^2 * y^8 * z^2         = 2
Coefficient of   x^1 * z^9               = 5
Coefficient of   y^11 * z^1               = 3

Here is the polynomial we're using this time:

2*x^13*y^1 + -3*x^6*y^2*z^4 + 3*x^4*y^5*z^3 + 2*x^2*y^8*z^2 + 5*x^1*z^9 + 3*y^11*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 74
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[3, 8, 8, 0]  	311	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[3, 12, 6, 0]  	333	4 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 23, 0, 0]  	358	2 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 12, 12, 0]  	408	1 
[0, 23, 4, 0]  	421	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[5, 3, 9, 1]  	281	6 
[1, 20, 1, 1]  	332	3 
[1, 22, 0, 1]  	343	3 
[1, 9, 11, 1]  	357	3 
[1, 7, 13, 1]  	365	2 
[0, 20, 4, 1]  	376	2 
[0, 23, 3, 1]  	402	2 
[4, 14, 1, 49]  	281	5 
[1, 1, 16, 49]  	332	1 
[1, 3, 15, 49]  	343	1 
[0, 1, 18, 49]  	357	1 
[0, 18, 5, 49]  	365	1 
------
The gap is between 2 and 48.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[241240829148196305550925958891058795351591647618089,178887917876707813650165264290571584351592106287125,974420941335569207581177457983483530552140935231831,33504569536160778251139023113381589580748265123696,636775911761045765254675584398112198320062040063674,628853714617805353038061149253684734297998838239527,531147873493882554714345874590473712729165669227392;\
233907072169729091826372884615562554487393049384979,392953181310763636468610730554631445221731972410625,543286916055763762112573961175833210345490887655981,21959057541427440937331427479927339374775931665879,33603094954380113056282157577005352397472282062724,1048704407678692755855853128968927694072685945114905,525008081116979141885976470206066896825780040114708;\
675200721503277263016468080884425378118540867218111,933248664312306471505895264946985968881491538050133,542359510031276205163955011343954209379716436173083,519896042923263581134085145982171120648696534023200,1009435533822093668704368417956701690099035243713591,152672472717221229695420638028128082224976941967939,338448970832104766522229280783557850538881654288223;\
109820313167607721332464798137341579969099109497457,231611536395556168209860421929734355779458374204880,980116372100316461916309355405125009406372629247384,718581771415123289333439114339416749254839378850558,851395168407428446676910952877418619370641755997476,661192936357231713749296657875128885822150578210346,725236696913020892568951396814475785205740373379074;\
695755121641616648364239230253475948674951663231740,522676112062608497751289152767192194403154774796704,576175308454537465948240393031850345374390600539990,882126669135349376227462217201292662608890450313978,766941703071705299559266673244051631191639898678994,619638175417142910509410801809734262432341572814694,655132645041476112896126329214972831267717747752160;\
689816960479422627819242585443460557243705996590942,475922457227451009194726867104436791342814570214657,278537002627003447125059036822739548726970518764048,937724274705227515722484747607795920799352057387400,151320406404066854049227557423795806702454460103229,427670473301857446451608496397832280228573798680746,565534333090373544034169879729896394724284835280013;\
795448844704748178868429201081765330424273644414039,368445037349326952900571637433006048360850819649515,238746588861804950440878466893256638334740768664254,624541629721801248819285237203438363557429698678150,964576186101435330178137930273135774739062443885613,139071455761683779534838587720926429763546709016871,392146875104583392003525637104172767712562070459187]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
