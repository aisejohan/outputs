/* Comments begin... 
Coefficient of   x^13 * y^1               = -5
Coefficient of   x^6 * y^2 * z^4         = -4
Coefficient of   x^4 * y^5 * z^3         = -3
Coefficient of   x^2 * y^8 * z^2         = 2
Coefficient of   x^1 * z^9               = -5
Coefficient of   y^11 * z^1               = 0

Here is the polynomial we're using this time:

-5*x^13*y^1 + -4*x^6*y^2*z^4 + -3*x^4*y^5*z^3 + 2*x^2*y^8*z^2 + -5*x^1*z^9

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Not smooth!
Coefficient of   x^13 * y^1               = -1
Coefficient of   x^6 * y^2 * z^4         = 1
Coefficient of   x^4 * y^5 * z^3         = -3
Coefficient of   x^2 * y^8 * z^2         = -2
Coefficient of   x^1 * z^9               = -2
Coefficient of   y^11 * z^1               = -2

Here is the polynomial we're using this time:

-1*x^13*y^1 + 1*x^6*y^2*z^4 + -3*x^4*y^5*z^3 + -2*x^2*y^8*z^2 + -2*x^1*z^9 + -2*y^11*z^1

Allocate M_len = 3200 elements.
The final length of G is 73
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[9, 0, 9, 0]  	288	6 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 16, 1, 0]  	298	5 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[3, 8, 8, 0]  	311	5 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[1, 20, 1, 0]  	332	3 
[3, 11, 7, 0]  	337	4 
[2, 12, 7, 0]  	339	3 
[2, 16, 4, 0]  	342	4 
[1, 22, 0, 0]  	343	3 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[2, 6, 13, 0]  	363	3 
[1, 7, 13, 0]  	365	2 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[1, 1, 19, 0]  	389	2 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[3, 12, 6, 1]  	333	4 
[1, 9, 11, 1]  	357	3 
[1, 8, 12, 1]  	361	3 
[7, 0, 9, 2]  	262	7 
[6, 11, 1, 48]  	262	6 
[2, 4, 13, 49]  	333	2 
[0, 20, 3, 49]  	357	2 
[0, 19, 4, 49]  	361	2 
[0, 1, 19, 49]  	376	1 
------
The gap is between 3 and 47.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[197018069911086716764275020604675487781122961726442,79301529439382720020648817479583063189238829628072,68809016022729446188591979683984427901636738475960,613719691468000849985364530587458675881439904317665,361148112645295362672044374193898901531961780671331,203761928964356844096266990740495818665057958845461,1063110544000468430067745970440926251076763475250248;\
556509817692401408073930312937841662730616229374148,15776402070654905059602846056215920583109290659031,326059962245479710879925023129998508329492850736993,540789809701088688603695257302370843022639876066366,712964788550811940418206046173684245313627350429386,724125093896058873234187923454325493375980572422532,868004631554171305027580425021461944729161616606039;\
844058509397515469816787129558356955163963051538614,855215856676359051853591913064435215812741648047573,647087429873677183278983973671588071665121401136953,608291277800041333129104096997144164671141277895415,457238540499386338541627039580832811555250602133360,510879595132179797636336192746809862688326366083538,392731582941993864356604574560396227016535517371336;\
497000570218652178425860530473217573651939037430509,856275457755115334383284713759498573605324420367764,20117388102208793730115209230774873767673849105262,293503496463961254656382629047702140575996659751149,356399993853938673074943204879367172108992204362973,544842546612485129653987369401804677819454405581080,731407454813117337617910957825079819724853723980970;\
310274016822023443665717134567465411817007506127588,60296107849115969278510280461536407447474809064878,1001345327648593264358489521594612395413729707374516,515528946492565702108257728585076244091259057822473,245945278076949065773088865940548329942496176343585,978072786226945620058179714553548933029229577162132,176548583196293213407717374172320968805440193418158;\
281384968802403939049945174247358901086683728061936,70405901100365534695066018829798565175333494463867,335471536563567485809615288547042107853136572674784,869544722747869019726217411199410774951641611180689,963303677473733797873877869217170611672283007613277,120267325209389357151255996360258928980687254876884,799872034970823461596757991409401829551927563708152;\
843310173835681675514181608358923468637773499411061,851188832816634900306333223332232714765545543568587,607257053583747277251226409370415978795395081430235,772191676786173691033477494127525190281016863107572,996347988861105988331614415704267273701125964261253,826902113657355397977653622457515051364723064843165,218197945350068637613517158651805424409282279169766]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
