/* Comments begin... 
Coefficient of   x^13 * y^1               = -2
Coefficient of   x^6 * y^2 * z^4         = 2
Coefficient of   x^4 * y^5 * z^3         = -5
Coefficient of   x^2 * y^8 * z^2         = -3
Coefficient of   x^1 * z^9               = 0
Coefficient of   y^11 * z^1               = 3

Here is the polynomial we're using this time:

-2*x^13*y^1 + 2*x^6*y^2*z^4 + -5*x^4*y^5*z^3 + -3*x^2*y^8*z^2 + 3*y^11*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^13 * y^1               = -5
Coefficient of   x^6 * y^2 * z^4         = 5
Coefficient of   x^4 * y^5 * z^3         = -2
Coefficient of   x^2 * y^8 * z^2         = -4
Coefficient of   x^1 * z^9               = -3
Coefficient of   y^11 * z^1               = 4

Here is the polynomial we're using this time:

-5*x^13*y^1 + 5*x^6*y^2*z^4 + -2*x^4*y^5*z^3 + -4*x^2*y^8*z^2 + -3*x^1*z^9 + 4*y^11*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
The final length of G is 73
[6, 2, 3, 0]  	165	5 
[13, 0, 0, 0]  	169	5  <--- 1
[12, 1, 0, 0]  	171	5 
[4, 5, 3, 0]  	184	4 
[4, 8, 2, 0]  	210	5 
[3, 0, 10, 0]  	229	4 
[10, 5, 2, 0]  	243	8 
[7, 0, 9, 0]  	262	7 
[10, 8, 1, 0]  	269	7 
[5, 3, 9, 0]  	281	6 
[8, 11, 1, 0]  	288	6 
[6, 13, 1, 0]  	292	6 
[5, 14, 1, 0]  	294	5 
[11, 0, 8, 0]  	295	6 
[3, 6, 9, 0]  	300	5 
[4, 17, 0, 0]  	307	5 
[4, 16, 1, 0]  	311	5 
[3, 8, 8, 0]  	311	5 
[3, 17, 1, 0]  	313	4 
[2, 9, 8, 0]  	313	4 
[8, 14, 0, 0]  	314	5 
[3, 16, 2, 0]  	317	4 
[2, 8, 9, 0]  	317	4 
[6, 16, 0, 0]  	318	5 
[2, 17, 2, 0]  	319	4 
[3, 15, 3, 0]  	321	4 
[11, 12, 0, 0]  	323	5 
[3, 19, 0, 0]  	324	4 
[10, 13, 0, 0]  	325	5 
[2, 20, 0, 0]  	326	4 
[2, 19, 1, 0]  	330	4 
[2, 0, 16, 0]  	330	4 
[1, 20, 1, 0]  	332	3 
[3, 12, 6, 0]  	333	4 
[3, 11, 7, 0]  	337	4 
[2, 16, 4, 0]  	342	4 
[1, 22, 0, 0]  	343	3 
[3, 14, 5, 0]  	344	4 
[1, 12, 8, 0]  	345	3 
[2, 15, 5, 0]  	346	3 
[2, 14, 6, 0]  	350	3 
[2, 4, 14, 0]  	352	3 
[2, 3, 15, 0]  	356	3 
[1, 9, 11, 0]  	357	3 
[1, 4, 15, 0]  	358	2 
[2, 7, 12, 0]  	359	3 
[1, 8, 12, 0]  	361	3 
[2, 6, 13, 0]  	363	3 
[1, 7, 13, 0]  	365	2 
[1, 6, 14, 0]  	369	2 
[1, 15, 7, 0]  	371	2 
[1, 19, 4, 0]  	374	3 
[0, 20, 4, 0]  	376	2 
[1, 18, 5, 0]  	378	2 
[0, 19, 5, 0]  	380	2 
[1, 17, 6, 0]  	382	2 
[0, 18, 6, 0]  	384	1 
[0, 26, 0, 0]  	390	2  <--- 2
[1, 0, 20, 0]  	393	2 
[0, 1, 20, 0]  	395	1 
[0, 10, 13, 0]  	397	1 
[0, 0, 21, 0]  	399	1  <--- 3
[0, 23, 3, 0]  	402	2 
[0, 12, 12, 0]  	408	1 
[0, 4, 19, 0]  	421	1 
[0, 15, 11, 0]  	434	1 
[0, 7, 18, 0]  	447	1 
[3, 16, 1, 1]  	298	5 
[2, 12, 7, 1]  	339	3 
[1, 1, 19, 1]  	389	2 
[2, 8, 8, 49]  	298	4 
[1, 4, 14, 49]  	339	2 
[0, 12, 11, 49]  	389	1 
------
The gap is between 2 and 48.
Lengths: 2 2 3 3 2 2.
For 413 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^25*z^2
1*y^6*z^17

For 229 = 3*d/2-d1-d2-d3 you get 3 in char 0.
1*x^2*y^11*z^2
1*x^1*y^3*z^9
1*y^14*z^1

For 45 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^2*z^1
1*y^3

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 
*/
A = \
[1015618609517100470495561526084052969369460338463951,413847361250688510124048325769796245948897893556058,901664019060144433447478454175009554158348256634870,86806158752087119110206918942761838979765745600271,1042432606009353795722457547607905786938775508603680,912645952970645357289533817259001958491072589337656,458772443549686889505970568997756170860806246457032;\
968745814455254822703778399030726250730177578983893,364136691048337205286616639721620867500266834228137,742483125920818342017070681493877674163687684946959,939278054048375700918756024310573238982049611942792,69473828247570238637072684844107247780810845161277,664592194674581295145625738511685399663353424177555,435906150251669996984929898102584306453416497356461;\
241519596198435037954026438890006516179834588660897,533730668323239992970471694292919400017370449483185,246237892458465891433574889138304684415338604164061,846329755601392882297356458164938345065140313982109,300163255123858541648792830070531440225016959959467,455762639177834140269202351640230331020122598049182,682566759086475208747561967322379786724678401592029;\
668229175207099962529043087078271447675687771011620,670618722636348921813404055473491965476300906317116,653680903147442555749194559582941817747693446475628,413873863902767983440951059412908408689801799537577,782317370415012999977859697188014575506666308747429,800123188695312650728121232174157796658517669899836,298904609011705539509555016445020776803564942071876;\
209985877675899672568269940386931758366477032984885,689978616118314232367894592172550633062651181435563,1026781901693194653057956137780516866594576990415898,135791904810412778386073324065226552664830474317548,610876797496470840686441497441310475531446745360510,591934715115383963846936420497510974647265638482053,74502343118229245759057652194630548358549169168333;\
511621691576038687741589480012680907568805418334352,424298688202751917269463050153889943361984757642314,340984338586379514995308572900576264720038433218559,79309640375682393491984599272632187684309716225940,573716147082682740357961893771262398539436345223518,931660043459901171459475662704496376006672671698244,639083357377160704958493782298667992457412302978862;\
319366528127558036624257409461982381640163007416326,224906462410542119948459381157937438728415307970190,815424113323503413283054588966567189627888524127915,418215874011415718532553428204000370512546479592816,961052332095116714018350571876202096565562976147537,219709919972609431650505389718608426938600386572831,915714646165615095824682019417227127934134797830200]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 109 lists. */
