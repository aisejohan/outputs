/* Comments begin... 
Coefficient of   x^21 * y^1               = 5
Coefficient of   x^10 * y^2 * z^6         = 1
Coefficient of   x^8 * y^5 * z^5         = 0
Coefficient of   x^6 * y^8 * z^4         = 1
Coefficient of   x^4 * y^11 * z^3         = 1
Coefficient of   x^2 * y^14 * z^2         = 3
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = 2

Here is the polynomial we're using this time:

5*x^21*y^1 + 1*x^10*y^2*z^6 + 1*x^6*y^8*z^4 + 1*x^4*y^11*z^3 + 3*x^2*y^14*z^2 + 2*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Not smooth!
Coefficient of   x^21 * y^1               = 3
Coefficient of   x^10 * y^2 * z^6         = -3
Coefficient of   x^8 * y^5 * z^5         = -1
Coefficient of   x^6 * y^8 * z^4         = 0
Coefficient of   x^4 * y^11 * z^3         = -4
Coefficient of   x^2 * y^14 * z^2         = -3
Coefficient of   x^1 * z^13               = -2
Coefficient of   y^17 * z^1               = -5

Here is the polynomial we're using this time:

3*x^21*y^1 + -3*x^10*y^2*z^6 + -1*x^8*y^5*z^5 + -4*x^4*y^11*z^3 + -3*x^2*y^14*z^2 + -2*x^1*z^13 + -5*y^17*z^1

Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 165
[10, 2, 5, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[8, 5, 5, 0]  	422	5 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	10 
[14, 11, 3, 0]  	612	9 
[16, 11, 2, 0]  	619	10 
[11, 0, 14, 0]  	643	9 
[14, 14, 2, 0]  	650	9 
[9, 3, 14, 0]  	674	9 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	8 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 34, 0, 0]  	839	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[6, 26, 1, 1]  	743	7 
[4, 12, 13, 1]  	755	6 
[16, 20, 0, 1]  	764	7 
[3, 32, 0, 1]  	793	5 
[4, 20, 9, 1]  	815	5 
[3, 28, 5, 1]  	856	5 
[3, 24, 8, 1]  	857	4 
[2, 27, 7, 1]  	876	3 
[2, 1, 27, 1]  	898	4 
[0, 32, 6, 1]  	922	2 
[5, 12, 12, 29]  	743	6 
[3, 29, 1, 29]  	755	5 
[5, 21, 6, 29]  	764	6 
[4, 24, 5, 29]  	783	5 
[3, 1, 23, 29]  	793	4 
[3, 6, 20, 29]  	815	4 
[2, 14, 16, 29]  	856	4 
[2, 10, 19, 29]  	857	3 
[1, 13, 18, 29]  	876	2 
[1, 18, 15, 29]  	898	3 
[0, 1, 29, 29]  	922	1 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[1332099187036019975252693791987,904787611989305836361269681417,1083726964978767422521040770413,422400829494996236094653983463,358311839117923828262785620059,833135725853977375942565996675,1309369428039207831400195536302,1337757032150105366331949207197,277281545386851549443846299265,853362933121243267155361335506,945580440233352835722029745075;\
9941234735035859227827064526,1069481178143494957406927530795,1166993245093228111019779369490,1561131646238651953468264279985,847217550945966232722652623914,910981357721837584791550239408,1212584719338543374271062032671,224454669952893099704621300851,1376068908376902541797458718937,740348843270059613906969558873,896593152169579142061834646728;\
1556312978835743790402037077319,1455651243975693538351016070558,1270036592551632253313199413458,1400351795382082551474295565395,1159603229865266945645712687389,558308312437272735140280113614,565882115901453425576077186545,1064030291828358680159336736074,993131056380989611532987113035,856460222469571314094352410602,865206605677730754468306893969;\
1470961657822462240886663357443,1057360582680213686688759447265,756038001468536316614895705296,1047599152670585473730869746000,527640228453317374920038779529,1357924786633068801389616125323,1264986779640175619536250220523,288168615072963281198662567898,657025410444432011393475859575,651872932459240823682750696814,1051870864331955210335432707276;\
737241427122513463423566028176,355385054373065103120895715582,1570211455950756503312982579697,380282389907147038507380516233,714757897919928530118184399941,204760965804981362944918534762,275773604279336403535995312195,108694845451517612223646051221,1308710643639038320556051362835,1185166039823972424778038701882,1386236406061735378237601273936;\
1260919710220641617115020757880,1007505285369478846891648956046,1582984811081615170100478740036,42654019216570095233107816608,652778586570549554919943481683,1193307263995586187832528056187,1251826925207027205645402228336,154243123891831808273719173708,539418865499342530028331012778,1149002340343462614466591051830,321378380896316210054629668649;\
361079806707586739933203326343,1263886184444605703613600397215,751904480294712676554352785689,263850121854246855287764293329,751432850851433925234765775675,431611631849862938187452899314,264990492415646415111985917769,12203688602425191915522317773,339728898597150599251575823270,694573368613601271001848188130,1467546261773783050698811075829;\
129165067366798670143635780169,1054230315662058960279700004233,995220524073898035087253897868,200552781191675890775937277578,926952575332440510940727097908,1055587678265849105890254633364,1224606115240190130635656291185,1440814542928037657334031810205,615156279082657280851211757285,1192034421001387056853562083182,900690588817452298284631735985;\
534677709157768188628933792210,254844003293256330788744598118,557575166241435315273780787805,549083484225731601754575926706,214801611031842411864261665449,1313609654732390826522447150932,865365351693960200619284002507,1581396305612430182973782780051,51328280342703467938333339126,599574328277875306144578834660,268320875534907299326469719879;\
743947825527571295701911904476,1418975711692841728915004619373,301760956000300900353183645679,194216537587670474639939486409,541862484202920515766415738663,1124456816238389505131578742259,558453919400224962566657413307,546596419815883500890234147531,406506218278050672580725309559,116304651077049786030413995228,724183171343620937576454121064;\
1571201601504275590353031299012,554202574023393157072945390154,1321375437867303358755634544013,734896163901995341460450982295,1005392361703581524486868207967,1101798845871654839821013484504,1269107552898614412575029706257,528453358250826739852079435477,1251490850375473737828163396438,113853732903906035194673992649,487662207905680424020652314836]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
