/* Comments begin... 
Coefficient of   x^21 * y^1               = 2
Coefficient of   x^10 * y^2 * z^6         = -4
Coefficient of   x^8 * y^5 * z^5         = -1
Coefficient of   x^6 * y^8 * z^4         = -5
Coefficient of   x^4 * y^11 * z^3         = -1
Coefficient of   x^2 * y^14 * z^2         = -1
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

2*x^21*y^1 + -4*x^10*y^2*z^6 + -1*x^8*y^5*z^5 + -5*x^6*y^8*z^4 + -1*x^4*y^11*z^3 + -1*x^2*y^14*z^2 + 3*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Not smooth!
Coefficient of   x^21 * y^1               = -4
Coefficient of   x^10 * y^2 * z^6         = 4
Coefficient of   x^8 * y^5 * z^5         = 0
Coefficient of   x^6 * y^8 * z^4         = 5
Coefficient of   x^4 * y^11 * z^3         = -4
Coefficient of   x^2 * y^14 * z^2         = 5
Coefficient of   x^1 * z^13               = -2
Coefficient of   y^17 * z^1               = -4

Here is the polynomial we're using this time:

-4*x^21*y^1 + 4*x^10*y^2*z^6 + 5*x^6*y^8*z^4 + -4*x^4*y^11*z^3 + 5*x^2*y^14*z^2 + -2*x^1*z^13 + -4*y^17*z^1

Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 162
[10, 2, 5, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[6, 8, 4, 0]  	422	5 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[16, 8, 3, 0]  	581	10 
[14, 11, 3, 0]  	612	9 
[11, 0, 14, 0]  	643	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[15, 0, 13, 0]  	688	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[8, 5, 14, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[9, 6, 13, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[8, 22, 2, 0]  	720	8 
[7, 23, 2, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[9, 23, 1, 0]  	731	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	8 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 34, 0, 0]  	839	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[12, 17, 2, 1]  	681	9 
[6, 26, 1, 1]  	743	7 
[16, 20, 0, 1]  	764	7 
[3, 32, 0, 1]  	793	5 
[2, 35, 0, 1]  	843	4 
[3, 10, 18, 1]  	845	4 
[3, 20, 11, 1]  	858	4 
[1, 13, 19, 1]  	907	2 
[1, 31, 6, 2]  	918	3 
[1, 0, 29, 28]  	918	2 
[10, 20, 1, 29]  	681	8 
[5, 12, 12, 29]  	743	6 
[5, 21, 6, 29]  	764	6 
[4, 24, 5, 29]  	783	5 
[3, 1, 23, 29]  	793	4 
[2, 4, 23, 29]  	843	3 
[2, 27, 6, 29]  	845	3 
[2, 6, 22, 29]  	858	3 
[0, 30, 7, 29]  	907	1 
------
The gap is between 3 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[1558886199179589759390747847026,1160377227332131111550841020384,1408649734245417170300448792478,1437173191648197388721753164946,572908488833901310866299675492,452411002807530674689614096913,1282164702105385172527788288888,403572081757260396057016840681,486706538111086167531326615044,936044064194448813843754520346,1331746229870804154322719994509;\
1460384791819003780704920983778,531688390427777063298374002455,85432080962202489698615522718,762544012020506626223751569791,271710085237440350346680659550,1076662413992721289554285760251,463876532095812004401502271650,460079445535938634187160768444,994398547884340567464373751841,793385572986748076271175967750,798684053321836347743080706186;\
1078640464248080556860778250562,846040778844656979601218972847,185897492541590104893684700700,782054634627573455936995601658,1000710899676390555025906338575,648314740861028292680528789450,1056808196532081616514320681340,644739904091694542485536777463,406182977343775992292245586174,1453748404752027583157148917144,975348921066886159696080201782;\
395494564163034953326726348364,763981366324771144474198039577,239666713951012438549476385858,289043907131340004634536554404,807281426663558661540188888513,885171063821424281378403751396,686725865331758627609867707910,1408339395207154356755268955121,331026282861946750866757938188,93238547294080397442228383157,828525314760632219198590957857;\
1312480347952110710854174556701,91580351379103802495305500690,1176220735345969147783907983337,1518846669037526879769618838400,1322831500308077347898324906452,1117323095471293510019564800621,1472930941774371614763703412465,84528751353302245818247743852,1006475197742167407437005282548,107966892722215700396007029685,329312417060051752081602929906;\
634182259459680870883056226310,84063003227242094515163329652,1316897751658300466727699267858,426548907104115461067941627121,907167821376025034302688023219,914323052338118154690410372184,627879927629543749897329216195,686606584952805547742679496144,422245611431829175830981773808,549951698104895280964245532584,642652502996383799705881014062;\
815086040484057467495715333432,362353351509416795414048182016,147456116582493332997411474197,1108640540988583522140156618914,1345659240621506215417529786214,258788604124527825103297523740,1087369406641843837291021362428,189203782059311809520606712826,301058429933494788155837027462,863294798250036849613412680415,807050625781283609740405388294;\
354465817613076385190856397708,590582444347816772038857139568,138460178660361734109574660715,829470803786568293413918284375,562505522884772143498254108995,240137029411156940731556497390,1003152497773562535180645035029,456937631988748255174899428920,413663850116400362292129692904,448543260776306082395441549281,299311638587765625151143322322;\
1075200804972222692240056054747,1346021046468648388697558574408,589318689252598317977830072160,851030603914920845074446239672,411255405569371226034936930187,1452166985726511391040226890158,385047772715713240497463180400,859221005191265313216818088770,309133472665714644727026630207,1102845335603818988954911547585,338673132314334246189088496597;\
1359723803117075947224236750857,1505999048056792406675884789019,1463706011302364877493546109094,918598332295126947254009212114,1261392095812641699776598705537,452850979239611484678442039381,747993213551309924053526774994,925387500056439040989161322232,1460498360758535814590159034530,613617908946228010481288658202,492375431122133508519550859428;\
658327520509419897445545886321,335898498398676957664768347801,465451813175358656067587038313,822684878506923164601745781531,1436484503255564357620303542451,1555750806466754755686515922873,1315396260822752386900949495630,108506517319764258644316703017,1163596136714417031764028013431,771821436087635952773180068115,583152542319987154744701653313]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
