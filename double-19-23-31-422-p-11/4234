/* Comments begin... 
Coefficient of   x^21 * y^1               = -1
Coefficient of   x^10 * y^2 * z^6         = 3
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = 5
Coefficient of   x^4 * y^11 * z^3         = -2
Coefficient of   x^2 * y^14 * z^2         = -1
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = -1

Here is the polynomial we're using this time:

-1*x^21*y^1 + 3*x^10*y^2*z^6 + 2*x^8*y^5*z^5 + 5*x^6*y^8*z^4 + -2*x^4*y^11*z^3 + -1*x^2*y^14*z^2 + -1*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Not smooth!
Coefficient of   x^21 * y^1               = 2
Coefficient of   x^10 * y^2 * z^6         = -1
Coefficient of   x^8 * y^5 * z^5         = -3
Coefficient of   x^6 * y^8 * z^4         = -3
Coefficient of   x^4 * y^11 * z^3         = -3
Coefficient of   x^2 * y^14 * z^2         = 0
Coefficient of   x^1 * z^13               = -1
Coefficient of   y^17 * z^1               = 4

Here is the polynomial we're using this time:

2*x^21*y^1 + -1*x^10*y^2*z^6 + -3*x^8*y^5*z^5 + -3*x^6*y^8*z^4 + -3*x^4*y^11*z^3 + -1*x^1*z^13 + 4*y^17*z^1

Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 163
[10, 2, 5, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[8, 5, 5, 0]  	422	5 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	5 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	10 
[14, 11, 3, 0]  	612	10 
[18, 8, 3, 0]  	619	10 
[11, 0, 14, 0]  	643	9 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	9 
[9, 3, 14, 0]  	674	8 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	8 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	7 
[17, 0, 12, 0]  	695	8 
[7, 22, 2, 0]  	701	7 
[7, 6, 14, 0]  	705	7 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[14, 19, 1, 0]  	734	7 
[5, 9, 14, 0]  	736	7 
[16, 19, 0, 0]  	741	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[5, 20, 7, 0]  	772	6 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[4, 23, 6, 0]  	791	5 
[3, 32, 0, 0]  	793	5 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[15, 24, 0, 0]  	837	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[7, 8, 13, 1]  	720	8 
[6, 9, 13, 1]  	724	6 
[16, 17, 1, 1]  	726	7 
[7, 25, 1, 1]  	739	7 
[4, 12, 13, 1]  	755	6 
[12, 23, 0, 1]  	757	7 
[4, 6, 20, 1]  	834	5 
[3, 26, 7, 1]  	872	4 
[2, 10, 20, 1]  	888	3 
[1, 14, 18, 1]  	899	3 
[0, 35, 5, 1]  	960	2 
[0, 41, 3, 1]  	1036	2 
[5, 11, 12, 29]  	720	6 
[5, 26, 1, 29]  	724	5 
[5, 18, 7, 29]  	726	5 
[5, 28, 0, 29]  	739	6 
[4, 21, 6, 29]  	745	4 
[3, 29, 1, 29]  	755	5 
[4, 24, 5, 29]  	783	5 
[4, 7, 18, 29]  	795	3 
[3, 10, 17, 29]  	814	4 
[3, 23, 8, 29]  	834	3 
[2, 12, 18, 29]  	872	3 
[1, 27, 8, 29]  	888	2 
[0, 31, 6, 29]  	899	2 
[0, 4, 28, 29]  	960	1 
[0, 10, 26, 29]  	1036	1 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[1487598980509353837185423651827,441286640332464544024386074226,368743628077546556751847017976,571140733075184782070130293306,824613842108677682486639602487,663047489318371372201422221698,1462219380603787763907946718139,636395415226863942782705838199,1156441932294592080769849870983,386527093208347359680638236725,949215948809392246263785352552;\
1512515335408096586826251747314,833529671061171825954919132444,441889860018304123912580132212,1060958312016478451248059546335,1203832678460712619113851140062,64764531256885084597600798280,1207433932388893848024358182606,456794012527867392472934850736,1431594952223294472387623294720,908055475910040664226462413796,548365475669759203976374497137;\
894112894732223919770123005861,1514780725449302893351080569541,812014040361425066347878126733,557855881309903263806467831313,576858420882913148981521773770,979354064677355307326225437774,983330318126444966226859599982,1569362665240991070803004736194,1030574801659400021116783184472,535119803256002015809846514140,753648485935943960697468245134;\
506845243251627373039705495903,494444262105748885729886043434,1371626698846514637519130563092,1483193470623070825223986253477,325646932154093870866498404518,148674634842333024343294747096,1517625609055975545669727709195,723085645344290758162594605622,1057774319945189395270921237082,394924667296594347127778631288,828567990298156535798802602402;\
81997188661693369552523992676,958240137556879291161410000184,595166524111852115751275174604,1543765294787573163255551525319,922806946689582586241047377753,672667246311995912317105804170,308294208196173629695819515368,1425988518917275616382311014134,351798124885205819306373538013,878247081074582310658926598569,234524495324637805811706713135;\
1539420698531627077779817569215,1280427280019320809669820893526,49569873256498150790943220352,202383036802014011262466806340,993520943794731845228877310796,1326978593311707828448764429116,206141760894908265051217584882,7091598184063491027670122767,1376635383129818118502937111315,569060290416784146339867154295,658640844392176670223882683693;\
540392030696611840352127661413,518302106085672361852837608431,669042757426283284955818312477,232616806715343056869990769169,521692532190098459607016850635,559460406714564511211753317774,1056471905999779866279283585237,226313882334537982449928338271,569027000224651454697276583991,1302933344327619977757033580529,864024243353042565347714953078;\
1438378753139482351050458304905,987509839977969532579562671150,256324175046845800186307205830,155421807592931347852410608274,624122925932926133133163838710,1076929326483504274031033443694,1362123508309470951739009115779,1416081811276397653832807219857,1143306352607813047254329067174,741111036541575532630898955019,710245644250959529400401113851;\
1130755930809570943186950231155,326006490245506911682250761136,1263381202970341607262084870356,519137731368353687304175214677,908740434621420114443257122309,105409293045182645792971850251,662740681941430702396404394271,1224599444922434138843865307266,1373757795817258319411700918447,642207513020114917620085378565,148345133307413532576981340314;\
1289326425351792085497446637766,557063977274381683554698159901,670351243184982710233863049512,1244385855781258840265663673472,917247558045669767827871805878,1580677670683239326264924667535,134902792575788913140177584894,559348925493065576466208565526,174792158727659272003921154603,566264466960617002259388733257,690643724172500461434782517334;\
1157595238216919111339674202923,1565708306984091612124909613451,134581403718267681994630192534,508343147753745293723023327400,499075383070320671641750464499,1036996917645010883810388950283,1257138748970866749822939938922,589577186591121111245944537555,1374743354980452988365092762691,1480495010134850358554727206055,1121375978823742540034001742899]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
