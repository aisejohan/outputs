/* Comments begin... 
Coefficient of   x^21 * y^1               = -2
Coefficient of   x^10 * y^2 * z^6         = -2
Coefficient of   x^8 * y^5 * z^5         = 4
Coefficient of   x^6 * y^8 * z^4         = -1
Coefficient of   x^4 * y^11 * z^3         = 2
Coefficient of   x^2 * y^14 * z^2         = -5
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = 0

Here is the polynomial we're using this time:

-2*x^21*y^1 + -2*x^10*y^2*z^6 + 4*x^8*y^5*z^5 + -1*x^6*y^8*z^4 + 2*x^4*y^11*z^3 + -5*x^2*y^14*z^2

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Not smooth!
Coefficient of   x^21 * y^1               = -3
Coefficient of   x^10 * y^2 * z^6         = -5
Coefficient of   x^8 * y^5 * z^5         = 4
Coefficient of   x^6 * y^8 * z^4         = -5
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = -2
Coefficient of   x^1 * z^13               = -3
Coefficient of   y^17 * z^1               = 4

Here is the polynomial we're using this time:

-3*x^21*y^1 + -5*x^10*y^2*z^6 + 4*x^8*y^5*z^5 + -5*x^6*y^8*z^4 + -2*x^2*y^14*z^2 + -3*x^1*z^13 + 4*y^17*z^1

Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 162
[10, 2, 5, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[8, 5, 5, 0]  	422	5 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	10 
[16, 8, 4, 0]  	612	9 
[14, 11, 3, 0]  	612	10 
[18, 8, 3, 0]  	619	10 
[11, 0, 14, 0]  	643	9 
[14, 14, 2, 0]  	650	9 
[16, 14, 1, 0]  	657	9 
[9, 3, 14, 0]  	674	8 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	8 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	7 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	7 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 24, 9, 0]  	869	3 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[8, 8, 4, 1]  	460	7 
[8, 23, 1, 1]  	712	8 
[16, 20, 0, 1]  	764	7 
[5, 18, 9, 1]  	788	6 
[2, 28, 6, 1]  	868	4 
[3, 26, 7, 1]  	872	4 
[0, 32, 6, 1]  	922	2 
[6, 11, 3, 29]  	460	6 
[7, 9, 12, 29]  	712	7 
[7, 26, 0, 29]  	731	6 
[5, 21, 6, 29]  	764	5 
[4, 24, 5, 29]  	783	5 
[4, 4, 20, 29]  	788	5 
[1, 14, 17, 29]  	868	3 
[2, 12, 18, 29]  	872	3 
[0, 1, 29, 29]  	922	1 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[172749520209216118731534894361,1345288668143553336190581257539,1052374138222960891437652810772,1338372532003392157289256767220,78125870904273465046822931267,785207923387163233075596240125,1228728641948239099825314242184,1317283975749698072915516018939,1403987614310502982976510237646,286708805658250443262042041563,76697040441737772817654008533;\
1307404856609272227151676445659,38293142780929534044447718510,802109061733453189090776285304,846590297196896826698255212653,409215904568914865581942316105,44404041008646339430887159639,278021443397357069342156399054,460620284903234848388505524686,1156667702066666522523634426451,1560266030443433838286265840380,624173927180574867822462585475;\
1288348651242157588829348987780,1181413828620237906604152909270,1413075465291875477699193202639,369303765682618689116692938110,1222344567199832723915491402344,1158109430179344576623185789920,1313890140431394744329531406723,1095482541644890841495331762495,117334595146612843595576808300,1332203032845231562475491340265,1527720545241523605814383614864;\
897713308762511109886791431110,175062996332202067264794958927,480996898292119932412141135947,1142360545850959911380833482686,1352057222408824621733454836304,602579402875926224903069773363,15907158272343841369554634628,816220412912597086826777788465,928068104785313847916079234056,1115545317886322356816319593793,1366797696661995512449157440598;\
1122297189893711391556161333592,232179177970449762257404718067,64251513198437390305244774157,1340951198428591068591474382477,469982564822387680135155752746,1354499016529128125700285652587,346259286840225743308059863182,850327000866337327753600868490,859101660732837905833510335418,636787775729551927893955235715,1134697666269244400768034545648;\
986266688473435447736960789660,912727577961933964850336857500,1365055917455720691453069111683,431901214604875698062786477676,276508917365751961500832879151,835207861576164140471190110657,1263157007143804551064861791084,315951460058108101865894299263,75037255631894157532016377709,1313746450713654995454162574400,1069290519079987675601321150773;\
865615570490924056604589882060,1571913440943869850300704894701,413991080084287142430342542010,1071093716014457811500647465280,72952320162545106037420552447,992810491916346011140272187015,666616170101293979264117548414,1161505218815627229833963499969,654053774525648548818128049380,431886443711268055028171392575,429875802611258032016107984963;\
398665271475290828596295199830,600741463987911401599555237801,949411719688396945168429414234,765971026506234009505732471322,211336689575408617839371862142,1187852355131080755177533171326,727189509997200305430988901904,894065472893484212804484205688,728849295347868414980879190319,1078404229739825551111444003856,1085989906196425324168435427099;\
71958045638752420120548963387,78917979739809385875801842815,381255124629670693338962309358,1441314886499590835685894137075,1364030224483355776725427177535,827009487101217020656577855872,1235063100498295051229194099558,318308136038067467686497265888,552095424436092267896697494182,406364606773860413328813626078,1454180019542057251018596425646;\
672111450925686414254468648476,832646469051788476228806661283,373100812757542575584080177775,1108055520120815858052058203287,968366188578887066105472720792,1582549546813888981626578186016,464181110172354210339686058758,1194651087947621361822668645533,188521800317489566099420333041,909375190377724148261766271293,1326657187716335044801996876694;\
1139469861710629086257550271932,1246685311373333385852868090268,776866994277194831716659568855,1401498005743073286906335335561,1553123338819199757374139324774,1068084418006673198575569990579,17923146113041128310331917871,761922306348908325455956160996,773623307592497631932087988068,242292297274675616778872948831,459039210920855971050582573196]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
