/* Comments begin... 
Coefficient of   x^21 * y^1               = -1
Coefficient of   x^10 * y^2 * z^6         = -4
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = 5
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = 4
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = 0

Here is the polynomial we're using this time:

-1*x^21*y^1 + -4*x^10*y^2*z^6 + 2*x^8*y^5*z^5 + 5*x^6*y^8*z^4 + 4*x^2*y^14*z^2

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^21 * y^1               = 2
Coefficient of   x^10 * y^2 * z^6         = 5
Coefficient of   x^8 * y^5 * z^5         = 3
Coefficient of   x^6 * y^8 * z^4         = 2
Coefficient of   x^4 * y^11 * z^3         = -1
Coefficient of   x^2 * y^14 * z^2         = -1
Coefficient of   x^1 * z^13               = 2
Coefficient of   y^17 * z^1               = -5

Here is the polynomial we're using this time:

2*x^21*y^1 + 5*x^10*y^2*z^6 + 3*x^8*y^5*z^5 + 2*x^6*y^8*z^4 + -1*x^4*y^11*z^3 + -1*x^2*y^14*z^2 + 2*x^1*z^13 + -5*y^17*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 163
[10, 2, 5, 0]  	391	7 
[21, 0, 0, 0]  	399	7  <--- 1
[20, 1, 0, 0]  	403	7 
[8, 5, 5, 0]  	422	6 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	12 
[14, 11, 3, 0]  	612	11 
[18, 8, 3, 0]  	619	11 
[11, 0, 14, 0]  	643	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[15, 0, 13, 0]  	688	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[8, 23, 1, 0]  	712	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	8 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[12, 22, 1, 0]  	765	7 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[12, 20, 1, 1]  	719	8 
[10, 22, 1, 1]  	727	8 
[16, 20, 0, 1]  	764	7 
[3, 3, 23, 1]  	839	4 
[1, 15, 17, 1]  	891	3 
[1, 1, 29, 1]  	941	2 
[1, 24, 12, 1]  	943	3 
[12, 17, 2, 2]  	681	9 
[10, 20, 1, 29]  	681	8 
[8, 23, 0, 29]  	681	7 
[5, 21, 6, 29]  	764	5 
[4, 24, 5, 29]  	783	5 
[2, 20, 11, 29]  	839	3 
[0, 32, 5, 29]  	891	2 
[0, 18, 17, 29]  	941	1 
[0, 41, 0, 29]  	943	2 
------
The gap is between 3 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[227060895376559371705362640559,500193486872822726515796477962,41143429883954914761266540805,1469296583445555733140275316654,860038657382399784251699397155,638541260222361610291260926700,685039826652931278190539264541,95549792454728948690226925327,1074612893984720865963137975839,1051642003944325667344320727515,940943672929410265798527301204;\
126241432666680618871729618707,515186510685503351205212593296,560669643137075706650870297569,347703125116958075671725623841,142617328760819230631587990056,1568536601647686478186145347108,1124579368012520730835151162283,805610221760443388145802733425,859464738212246391395450701102,222897870575158288490894887061,533660599976363950207919705750;\
1079137706686275211454321794703,409782488552985196166777692325,1478223808247035852350746974659,525605488570032832152138709784,687116222052486693391931121951,802686483220136949696146677782,723433699645938826217402451766,1006590568411245657653466582842,452392678771151352140015123773,684427039177773598674072595974,586507734612833563626994492243;\
1519508728426338517396919807500,523153546655310127493055091783,314303545782073645870845180111,613467098809949131443348368936,1054152077066747287637737965577,1357522240431106972414781355635,1459890101417192519100458334463,600354242520619418591229232411,817976832374437659851203992705,1155844801385914192934254042389,476826979789652636792585601158;\
1394572232395749775772087164435,59324900322110705211022725317,374716613963651521540214200122,690819821604969964453721285066,622398304243693950896894352811,1375252755659190533903694102846,856281005109271323803297615539,19049957352592518515103196696,535889667076454953152827245991,267338194968817054401498518680,457454279115742223474456875743;\
386172470023484840620895577346,486619171569894341589893647628,892018976234162861998215117729,675597730874405885234458945813,792937193536473129994467154130,434649723711039995614229166008,338432441893303774741519365417,87873487122176526904734514826,798354283812443204794440148480,184049834068429498815913360687,1423717272203648820800957579651;\
4307558503076562098948428942,651702265846904896911160084915,1392969075232533057674915454843,616714812169506199902234076100,1232173490335188256895836172948,146005664373851811202034064396,84898863462372355289605093976,335353487722698114079064660456,40903204351966237928421309084,342528286454887851852762149064,447186382790332112551698097386;\
602746519579244315229123901147,516702103780819265914630604347,1121594284149937345873324077795,902323448627832442175793828868,774440643483580116631934820166,786254591746168984019853025666,666222626788496624157524740340,1578787114622985550959961098462,835515034202194365750634888061,457860144410627570553279026425,247891449818708966016437782113;\
32533429194851779503398085205,1224704713557857092843981465219,407331816692007352223723252592,88213930467261719046601189834,390452260946884974871102554782,1184037895324451057922613509235,798501915485077306631760468518,289692292194602771240444817216,1064300728551716814835522631071,991448863727408880588537690387,813124419053111539203720889108;\
1514947544812778513345438697839,496879646790999230091961172329,1151006417881866251972068300527,440167148214998043307178435483,569383084976229433273402045887,310505539739765192643286437565,402135199641480342274629201150,938023283758932970128203073983,1332500093722443310664803649626,1040250695760316423578372988074,751861894058221615226678863798;\
945559551709300863149083435876,57732985422371743514116818986,379486805534525002282177975098,113691447462934757349028283793,1434741622103233622399295013434,94612091520332271915692978348,559805130082764346257571247010,935192040071566189235043084628,1163276260785423065354283804902,1318320945581471393286251738013,514429693561794363383060459198]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
