/* Comments begin... 
Coefficient of   x^21 * y^1               = -3
Coefficient of   x^10 * y^2 * z^6         = 4
Coefficient of   x^8 * y^5 * z^5         = 1
Coefficient of   x^6 * y^8 * z^4         = -3
Coefficient of   x^4 * y^11 * z^3         = 5
Coefficient of   x^2 * y^14 * z^2         = -3
Coefficient of   x^1 * z^13               = -5
Coefficient of   y^17 * z^1               = 0

Here is the polynomial we're using this time:

-3*x^21*y^1 + 4*x^10*y^2*z^6 + 1*x^8*y^5*z^5 + -3*x^6*y^8*z^4 + 5*x^4*y^11*z^3 + -3*x^2*y^14*z^2 + -5*x^1*z^13

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Not smooth!
Coefficient of   x^21 * y^1               = 4
Coefficient of   x^10 * y^2 * z^6         = 4
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = -4
Coefficient of   x^4 * y^11 * z^3         = 1
Coefficient of   x^2 * y^14 * z^2         = 0
Coefficient of   x^1 * z^13               = 1
Coefficient of   y^17 * z^1               = 1

Here is the polynomial we're using this time:

4*x^21*y^1 + 4*x^10*y^2*z^6 + 2*x^8*y^5*z^5 + -4*x^6*y^8*z^4 + 1*x^4*y^11*z^3 + 1*x^1*z^13 + 1*y^17*z^1

Allocate G_len 320 elements and old = 160.
The final length of G is 164
[10, 2, 5, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[8, 5, 5, 0]  	422	5 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	10 
[14, 11, 3, 0]  	612	10 
[18, 8, 3, 0]  	619	10 
[11, 0, 14, 0]  	643	9 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	9 
[9, 3, 14, 0]  	674	8 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	8 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	7 
[17, 0, 12, 0]  	695	8 
[7, 22, 2, 0]  	701	7 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[6, 9, 13, 0]  	724	6 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[14, 19, 1, 0]  	734	7 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[16, 19, 0, 0]  	741	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[4, 12, 13, 0]  	755	6 
[6, 28, 0, 0]  	758	7 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	7 
[5, 24, 4, 0]  	771	6 
[5, 20, 7, 0]  	772	6 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[5, 14, 12, 0]  	789	6 
[4, 31, 0, 0]  	789	6 
[4, 23, 6, 0]  	791	5 
[4, 15, 12, 0]  	793	5 
[3, 32, 0, 0]  	793	5 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[15, 24, 0, 0]  	837	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[7, 6, 14, 1]  	705	7 
[7, 8, 13, 1]  	720	8 
[16, 17, 1, 1]  	726	7 
[5, 11, 13, 1]  	751	7 
[12, 23, 0, 1]  	757	7 
[5, 29, 0, 1]  	762	6 
[4, 14, 12, 1]  	770	6 
[3, 21, 10, 1]  	850	4 
[3, 9, 19, 1]  	853	4 
[2, 10, 20, 1]  	888	3 
[1, 7, 27, 1]  	1017	2 
[6, 23, 2, 29]  	705	5 
[6, 25, 1, 29]  	720	7 
[5, 18, 7, 29]  	726	6 
[4, 21, 6, 29]  	745	4 
[4, 28, 1, 29]  	751	6 
[4, 15, 11, 29]  	762	5 
[3, 31, 0, 29]  	770	5 
[4, 24, 5, 29]  	783	4 
[4, 7, 18, 29]  	795	4 
[3, 10, 17, 29]  	814	4 
[2, 7, 21, 29]  	850	3 
[2, 26, 7, 29]  	853	3 
[1, 27, 8, 29]  	888	2 
[0, 24, 15, 29]  	1017	1 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[685030593807071011045661604499,604466438503574756868626420410,88871501019336848028970707695,1035250986834711862996115196257,967566193602016531810810572093,310157013280913926576229039490,112727535619157490998494724735,772444620958116992303574631563,1143980076209439824522302591247,1373696392304720264973879155722,1245922453821525248002878063035;\
449980668609811088851202092899,1383866997305899184648785257641,772165755568262170594657347878,1288678300015292652479583030274,887563609141467527167877949113,1051362685729065226972425643750,951254019797240117712442304110,759136371158439442239877754718,193334009633296565945590048931,1254734800950511436285475504880,91272075239209544081801350963;\
564512403759601967905535706404,607736039265603879275258289671,1241542825612566816025098911239,295743304298936758824062615420,695134527626630878670802528665,407041620434828218584176716295,1515367069935188525649798310458,890442951298511764425643547374,54383699457411302623038013488,829246653838583293129940440361,1284450965181180573236562521947;\
1211755246362988350010911197616,429813295453592873795726510187,764703194037192660278111358292,1547217859646210911197399009110,204275983540052568459425379247,941984547980460475783403313741,570009116149896861770834175322,1480035199304316317123464439205,1263176209183739854619300910929,205589926701532670408091043030,337075790469011407078256720388;\
828099381763621222556470062820,857033565753010197454125464161,396473929604456653024498019904,528235550134942758354135413854,821621381975689040156155121245,1477803306130718267807062595232,869090101207940119589759737840,1482166966558360218010864037367,1130076190242029651715601985423,1272212645555465228867900093358,57321885813346249699888629224;\
185201601112848291031384568440,1551244199713424949795256400227,374955840797273775601463205720,688282174591975737149887034810,1440269402460304010242518958659,1273903039775353221816200993660,80902381613770504266841653753,213622236932044310470851017630,969510130004704059314575560440,779501813519280000546210215380,1412413019464949574558401214596;\
165322572957128220110096322323,363229100646081607254767947539,799250731481938076134322265428,127610776803852227769567083070,1192831785564217796982391822019,164788061560345969110386302919,1495349484396959105704594976402,672714163638390444866564558190,345101208850737595433711756321,1469558930983548929974375479587,626047533528342342915306949041;\
806579867834039514913529835566,1036379909611852330094497813959,917632027971172171343803654527,670410906929584386566025873683,688482669545209860844259921316,1228006344634497983637853656886,563855337357933114217405415129,1140029371100897173447708803657,378120471989116268368950088117,838502116918229998806953128440,459936089722868383708289546912;\
325188278343788408306086519516,1085948425174284535706440380779,1411060963052727401697335345028,1116212137643983257812045405910,1269551870044390331969487110853,1070608582689197404715619272428,818182532855076436192822924610,612731150536639017628809916434,873704044286952518647819541356,209504645234205071597322651417,608692673523599677275437089190;\
1524450366875397518657513854466,1279422218836486105071428845637,1074279005971238750721750843250,465857407369166142244433003826,1273620221189649625443783031510,552365013573074459027485643461,1200737995210450450122751503407,206255371705891890079407492310,1206917295798700975781286176941,1403987239059613957732066979951,765921508376434386080614284071;\
1520651575024197087372348474810,338923443126081004013140149009,1440337772068249378967450365982,508698803262041914368291647741,1553318247397351838608208682074,221451405729511870332515792730,329220638295603047552558936618,1070879156647052544028443782455,876614498598538348878365943092,178268663143521435564350402164,1207450184588467749419740909692]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
