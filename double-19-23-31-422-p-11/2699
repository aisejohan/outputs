/* Comments begin... 
Coefficient of   x^21 * y^1               = -4
Coefficient of   x^10 * y^2 * z^6         = -2
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = 3
Coefficient of   x^4 * y^11 * z^3         = 3
Coefficient of   x^2 * y^14 * z^2         = 5
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = 0

Here is the polynomial we're using this time:

-4*x^21*y^1 + -2*x^10*y^2*z^6 + 2*x^8*y^5*z^5 + 3*x^6*y^8*z^4 + 3*x^4*y^11*z^3 + 5*x^2*y^14*z^2

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^21 * y^1               = -5
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 3
Coefficient of   x^6 * y^8 * z^4         = -3
Coefficient of   x^4 * y^11 * z^3         = 1
Coefficient of   x^2 * y^14 * z^2         = 5
Coefficient of   x^1 * z^13               = 1
Coefficient of   y^17 * z^1               = -3

Here is the polynomial we're using this time:

-5*x^21*y^1 + 3*x^8*y^5*z^5 + -3*x^6*y^8*z^4 + 1*x^4*y^11*z^3 + 5*x^2*y^14*z^2 + 1*x^1*z^13 + -3*y^17*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
The final length of G is 137
[8, 5, 4, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[6, 8, 4, 0]  	422	5 
[6, 11, 3, 0]  	460	6 
[4, 14, 3, 0]  	491	5 
[5, 0, 14, 0]  	529	6 
[18, 8, 3, 0]  	619	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	9 
[18, 14, 1, 0]  	695	8 
[7, 22, 2, 0]  	701	7 
[10, 20, 2, 0]  	712	8 
[13, 3, 13, 0]  	719	8 
[17, 0, 13, 0]  	726	8 
[16, 17, 1, 0]  	726	8 
[5, 25, 2, 0]  	732	6 
[4, 11, 13, 0]  	732	6 
[19, 0, 12, 0]  	733	7 
[6, 26, 1, 0]  	743	7 
[10, 23, 1, 0]  	750	7 
[14, 20, 1, 0]  	757	7 
[8, 25, 1, 0]  	758	7 
[3, 28, 2, 0]  	763	5 
[12, 22, 1, 0]  	765	7 
[5, 28, 1, 0]  	770	6 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	6 
[6, 29, 0, 0]  	781	6 
[3, 14, 13, 0]  	782	5 
[10, 26, 0, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[8, 28, 0, 0]  	796	6 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[12, 25, 0, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[18, 4, 12, 0]  	806	6 
[3, 11, 16, 0]  	806	5 
[4, 1, 23, 0]  	812	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[17, 22, 0, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[3, 34, 0, 0]  	839	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[15, 0, 13, 1]  	688	9 
[17, 3, 12, 1]  	764	7 
[3, 32, 0, 1]  	793	5 
[16, 22, 0, 1]  	810	6 
[15, 24, 0, 1]  	837	5 
[3, 26, 7, 1]  	872	4 
[12, 17, 2, 2]  	681	9 
[14, 23, 0, 2]  	795	6 
[11, 3, 13, 28]  	681	8 
[10, 22, 1, 28]  	727	7 
[4, 7, 18, 28]  	795	5 
[3, 10, 17, 28]  	814	4 
[14, 17, 1, 29]  	688	7 
[4, 7, 17, 29]  	764	5 
[3, 10, 16, 29]  	783	3 
[3, 1, 23, 29]  	793	4 
[3, 27, 5, 29]  	833	4 
[2, 28, 5, 29]  	837	4 
[2, 14, 16, 29]  	856	4 
[2, 12, 18, 29]  	872	3 
------
The gap is between 3 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[186254729194957245881862780146,307351104990961323573316457897,157240963009019922171675640540,971914810457322661579266474286,1063290036189909002679537102154,323269958143145087713391339103,930143212917358399399842218608,113366070611686572860323268642,277252625277875320083801251637,1013118052530953942679242024647,1392396697749704072390087140204;\
151084144408588928679438346509,1087899102772724051413511919139,739511348809481583321462684788,1578235017618230591309609283606,724307961951681733028900966667,501619111207307807411009044579,890774746130794160227642271452,508688626981016755626265832447,874331955373872804793465264806,411682110862588382884580726301,849247043170075140663573192120;\
238058764693312749379681070791,424301026457831780428768424622,501642364015034022383243674960,526165782528197557431758991182,513983843635078108998090938564,80470321438072171105071295108,7352642129468582142622672158,696054617243113547142242707320,332553247147097658659190516413,437253280699679764171980320709,450930662497091295542859991100;\
548785120244614978059159856777,1162292534495936703895499220655,367755665226127540543373314920,704554347377520143143585165209,1009996933351395906593631023982,90277756305438867730344329748,940266698445136151397368388240,1288974842827885899308676099618,371674318329147362742304286118,991009836116812630259362477014,761887652018671399361744276013;\
674135959194569146124808981936,1326383685380990183031630283294,797016429344030774708882670930,1368592025786532852096891648648,1563820783995932237492828606121,396090979591551338347507421046,415362030941413119083692742636,776899499929624152127632112252,1468940137638092736821486227792,526923229094857446282703230838,341461913453812918349111149819;\
733370561834009742086266944430,164388005887324657132342803857,1202597242522859725114369319648,862223937286790901439217217100,892243639629294696626076333920,1340566063687073151026378401748,197431041770754491812441940985,732468640728687229416277774579,799853934923598489029372896377,1220620770591776598852636356220,103657073306419476677402427320;\
1555824176038557819273491244775,906748498830598698889231580716,315132108641094124731708579856,1329237387049250126232740685510,1370795031779759556519180145305,182524055012305137660434723510,1288674313608443885571131986962,544150740139834970227710387356,379739461953842039987367253516,946985172997378460444130706877,1159584065669058935567938485099;\
1204108828145422162952649783154,303174809233103175938493516579,1178290326082815355725413339478,569224332027391942608718002068,494677107881515750790494110479,1229991852871323428731440085446,677541290025164705851468780242,153347850141434332433378625824,548808674146318810627611802539,628285577284757184226237505449,544252478933362439001158159609;\
1315442053399468908645872424769,273251224874329274105976704124,571345290182567496266230197732,288443729992917453387096810047,421973284598240890354591031984,1469344064810675624661736447989,1121968707411765209525163617180,894066536198636011031597226439,1204092313107033689114984883708,1315881970056393677922744682153,521899723807127670802291443840;\
276132025734311517338849228909,898881706120973182757852443335,1402131799739826621007026190959,1016481209248307234431546429377,336641716393008718146187791355,1098678353852447931491170592944,1046932678459017967355474987779,369414762357121183420330933914,1224040327442786012350816056784,634644539750090849750618580205,818580672486481402731706901329;\
1026663916370155205331374825653,924662316214954009579437422922,1155610298367777054152973055008,696363893477664633629790672620,1156051942321986750993722380897,1115480470588093377127401711494,554898015876951475215226022734,188288307079454981925213136922,395516195076401693704207391572,58382155850547641325912616247,1254229497490307006663651773347]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 165 lists. */
