/* Comments begin... 
Coefficient of   x^21 * y^1               = 2
Coefficient of   x^10 * y^2 * z^6         = -5
Coefficient of   x^8 * y^5 * z^5         = -5
Coefficient of   x^6 * y^8 * z^4         = 0
Coefficient of   x^4 * y^11 * z^3         = 3
Coefficient of   x^2 * y^14 * z^2         = -1
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = 0

Here is the polynomial we're using this time:

2*x^21*y^1 + -5*x^10*y^2*z^6 + -5*x^8*y^5*z^5 + 3*x^4*y^11*z^3 + -1*x^2*y^14*z^2

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^21 * y^1               = 4
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = -3
Coefficient of   x^6 * y^8 * z^4         = -5
Coefficient of   x^4 * y^11 * z^3         = 5
Coefficient of   x^2 * y^14 * z^2         = 5
Coefficient of   x^1 * z^13               = -5
Coefficient of   y^17 * z^1               = -2

Here is the polynomial we're using this time:

4*x^21*y^1 + -3*x^8*y^5*z^5 + -5*x^6*y^8*z^4 + 5*x^4*y^11*z^3 + 5*x^2*y^14*z^2 + -5*x^1*z^13 + -2*y^17*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
The final length of G is 134
[8, 5, 4, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[6, 8, 4, 0]  	422	5 
[6, 11, 3, 0]  	460	6 
[4, 14, 3, 0]  	491	5 
[5, 0, 14, 0]  	529	6 
[18, 8, 3, 0]  	619	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	9 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	9 
[18, 14, 1, 0]  	695	8 
[7, 22, 2, 0]  	701	7 
[10, 20, 2, 0]  	712	8 
[13, 3, 13, 0]  	719	8 
[16, 17, 1, 0]  	726	8 
[5, 25, 2, 0]  	732	6 
[4, 11, 13, 0]  	732	6 
[19, 0, 12, 0]  	733	7 
[6, 26, 1, 0]  	743	7 
[10, 23, 1, 0]  	750	7 
[14, 20, 1, 0]  	757	7 
[8, 25, 1, 0]  	758	7 
[3, 28, 2, 0]  	763	5 
[12, 22, 1, 0]  	765	7 
[5, 28, 1, 0]  	770	6 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	6 
[6, 29, 0, 0]  	781	6 
[10, 26, 0, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[8, 28, 0, 0]  	796	6 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[12, 25, 0, 0]  	803	6 
[3, 15, 13, 0]  	805	5 
[2, 32, 1, 0]  	805	5 
[18, 4, 12, 0]  	806	6 
[3, 11, 16, 0]  	806	5 
[4, 1, 23, 0]  	812	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[17, 22, 0, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[2, 29, 6, 0]  	891	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[2, 0, 29, 0]  	937	3 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[17, 3, 12, 1]  	764	7 
[3, 14, 13, 1]  	782	5 
[16, 22, 0, 1]  	810	6 
[15, 24, 0, 1]  	837	5 
[2, 29, 5, 1]  	860	4 
[2, 28, 6, 1]  	868	4 
[2, 0, 28, 1]  	906	4 
[1, 35, 4, 1]  	948	3 
[1, 4, 28, 1]  	979	2 
[1, 7, 27, 1]  	1017	2 
[14, 23, 0, 2]  	795	6 
[4, 7, 18, 28]  	795	5 
[3, 10, 17, 28]  	814	4 
[4, 7, 17, 29]  	764	5 
[2, 31, 1, 29]  	782	4 
[3, 10, 16, 29]  	783	3 
[3, 27, 5, 29]  	833	3 
[1, 14, 16, 29]  	837	3 
[0, 21, 15, 29]  	948	1 
------
The gap is between 3 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[604982782424462109569959196495,1025576656330532320808257562940,803942312997523355923794098287,1076861909767362362348696689005,845321984842866270547272666619,286783936006120749883778861242,1167980131737027782608066581961,230724984850074000054307230318,292510911852029291107520709799,1338774233126401050946493092291,527912209554966225939018436114;\
261257413358977391149798698682,762928865898052720265176697950,1036986302600805193389939874547,700888988207758812018121132942,1171529556976320499799085777082,671446875664621222359282216479,1298578093925136177851845913326,146082169647858312554011595236,353448299788221540723719186772,471068327260795499088193442553,1401298833362992470244103699076;\
209611329970104232210224286587,173084786581787111275169916001,339434074054387327769841418029,987446722080103985065176091050,983189587833718007670554851114,21123321457379695674503776965,1173455239705919980671039640363,959702963655917311976227310404,118225150542281020949345497456,589601901058421467645013354627,795863354669247946290103648094;\
886582658681314940499002979698,282863320848141602707668566464,1520099863439445176876020637393,346152370489486154177025489058,753859950146857169192435401884,464974546717053410100331630241,1524109152437035602563690417721,722448042703972080166039278272,753204179112294327323184304707,365103431215026304962532608908,874975229129107333519418578331;\
1337618035078259372157522053010,903231130767359920454716455976,871246624080509119429915702493,469374884012081436258977259768,241015238824465305923373653508,1398495243096395801195633440921,216181210037983413569209296950,1481498144753877835003841181177,10130290683760366874435139613,31643603425723243161118410994,1541208091211429393229756589706;\
909262332555644303613082084734,24127353749623703956794574795,1038621040936650140226242013,639686199945449424839775708147,455982385349166212337102749271,1016458623506047762044450119344,914510571297154502727593970631,574052362284588903229776597511,968671830270082554099118963064,106710110811464623028164621121,1102689037778926618531953167341;\
1463565796565462784951057810332,41643399061251520686019803265,1474855143062503357505118971084,235902781978163758678665097224,1142853257872231915087577224275,1400117914785281983151661565292,745665499465931433174406550611,1244424756305943043075252718677,10926397556492380988464870167,496442321017642530650249567591,1517566665582083701635869557772;\
5461766380741094784822933024,886758631706575324803362735366,1174598947389608259006295843191,866668276268328979018493725817,486087445614898918143250099884,1249856261153016839016664025287,1116202473355099328783062092098,212938385545331446005239509869,1259090254953596144472954028897,1571168841292118181106436850660,351572706288333824597386575492;\
1110003046386512862856030045573,926909994281907712419837323076,967002439730210559667819136829,760449028255109337768833153494,497702619273948669647648600777,216413845123356008656785227168,842185284816667234562739568938,913856087820301146458967799715,974943450503136034233201515011,466122477175639411492408271041,463358719162823693060524172698;\
198017865696862080304055333006,477193506826184586096808233204,1467762304094076859960601839122,1566174232677679477917883322966,20716374942051123641518950936,1563581547574938678361236204774,1396920547090118893396212950533,293524919265508210632603722922,1421382819988484939524038594175,847107802124853172882245427050,166319548224807610491954267865;\
840890486617701424974632489791,1557995218525645976553390636865,112806106868925958170240948759,465651996207658856119153508483,163113825680587982252517457751,1114826468410848862333838148404,744540329028910450220996042539,528488596698437746231777896485,356749638599262176042393628251,989074790155668788954924583173,33018756286796445452275633018]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 165 lists. */
