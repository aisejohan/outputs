/* Comments begin... 
Coefficient of   x^21 * y^1               = 1
Coefficient of   x^10 * y^2 * z^6         = -4
Coefficient of   x^8 * y^5 * z^5         = -2
Coefficient of   x^6 * y^8 * z^4         = -5
Coefficient of   x^4 * y^11 * z^3         = 4
Coefficient of   x^2 * y^14 * z^2         = -5
Coefficient of   x^1 * z^13               = 2
Coefficient of   y^17 * z^1               = 0

Here is the polynomial we're using this time:

1*x^21*y^1 + -4*x^10*y^2*z^6 + -2*x^8*y^5*z^5 + -5*x^6*y^8*z^4 + 4*x^4*y^11*z^3 + -5*x^2*y^14*z^2 + 2*x^1*z^13

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Not smooth!
Coefficient of   x^21 * y^1               = -5
Coefficient of   x^10 * y^2 * z^6         = 3
Coefficient of   x^8 * y^5 * z^5         = 1
Coefficient of   x^6 * y^8 * z^4         = 4
Coefficient of   x^4 * y^11 * z^3         = -4
Coefficient of   x^2 * y^14 * z^2         = -4
Coefficient of   x^1 * z^13               = -3
Coefficient of   y^17 * z^1               = -3

Here is the polynomial we're using this time:

-5*x^21*y^1 + 3*x^10*y^2*z^6 + 1*x^8*y^5*z^5 + 4*x^6*y^8*z^4 + -4*x^4*y^11*z^3 + -4*x^2*y^14*z^2 + -3*x^1*z^13 + -3*y^17*z^1

Allocate G_len 320 elements and old = 160.
The final length of G is 171
[10, 2, 5, 0]  	391	7 
[21, 0, 0, 0]  	399	7  <--- 1
[20, 1, 0, 0]  	403	7 
[8, 5, 5, 0]  	422	6 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	12 
[14, 11, 3, 0]  	612	11 
[18, 8, 3, 0]  	619	11 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[13, 0, 14, 0]  	681	9 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	9 
[10, 19, 2, 0]  	689	9 
[18, 14, 1, 0]  	695	9 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[5, 9, 14, 0]  	736	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[8, 25, 1, 0]  	758	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[11, 0, 14, 1]  	643	10 
[9, 20, 2, 1]  	693	8 
[14, 19, 1, 1]  	734	8 
[7, 25, 1, 1]  	739	7 
[16, 20, 0, 1]  	764	7 
[4, 23, 7, 1]  	822	5 
[3, 12, 16, 1]  	829	5 
[2, 28, 6, 1]  	868	4 
[2, 1, 27, 1]  	898	4 
[1, 32, 5, 1]  	910	3 
[1, 7, 27, 1]  	1017	2 
[8, 23, 1, 2]  	712	8 
[4, 31, 0, 2]  	789	6 
[7, 9, 12, 28]  	712	7 
[7, 26, 0, 28]  	731	6 
[4, 0, 23, 28]  	789	5 
[10, 17, 2, 29]  	643	9 
[6, 9, 12, 29]  	693	6 
[12, 22, 0, 29]  	734	6 
[5, 28, 0, 29]  	739	6 
[5, 21, 6, 29]  	764	5 
[4, 24, 5, 29]  	783	3 
[3, 9, 18, 29]  	822	4 
[2, 29, 4, 29]  	829	3 
[1, 14, 17, 29]  	868	3 
[1, 18, 15, 29]  	898	3 
[1, 1, 28, 29]  	910	2 
[0, 24, 15, 29]  	1017	1 
------
The gap is between 3 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[1201117323656706787030037484508,1427150771407610235744498650908,1574860684263444287321719446058,1417408807251033424892960508998,1447954071489084895060832609883,68705938488666574760961812340,49650068116370752349577108026,1090088858210539573693099882540,829187754208464858869550401546,1174865694465511519623902910567,1218007820898474797119177826566;\
62896934192900224417806381881,1104163370335968354960335484255,1119868644976560893242703240420,1203192518807936386419704664210,1442861494014503164854733447890,207633484185379454973217088983,239268427570359620385724871319,1080120372414282369997860023375,1000907786856589775605428611460,319220251017173999262379670082,1499910858514928024552064667121;\
903500241447646262542481048822,1053031199412468165787071321342,823926438752889969144263514680,241632513076616906129150698257,729035262623071590071448863619,119025741427652781570421196976,466575489827381595683446514024,1528569756482445572418530838512,883275220253770479264850468770,1571079311502655355507921281258,100222578317869593421565926141;\
516433506479519952157366181638,621271639736743629400529869801,738303473582176070312107766864,1504625927401972501848826070571,484355372940622484470791182429,552450484815969588966492357290,198970377131493144204640397752,431772140827983434482832278824,1385765932786142257041586544518,829015822718570850454395054729,169306238021891428785366684623;\
540679598831368721223611535447,120785947007883124899773514747,766120067417502329153600838444,661732886623424810484865913954,397528884773677108679119000075,821143027705903471851121753815,541671733057783362586191418273,1057467017719168028265256313768,1519093789231423755233545242812,514556314392212105613224818281,170527000681480515925034331226;\
1410355164580317870953617615395,386725879176161071432631768980,242971180728004900696384301358,1221736289307085403222738802127,315296098438275770789860737400,1364221887785415997081707003128,868195638779497779455542570029,534159666782005786098628236449,1339842852680322635963831122775,235181139834647141612010316365,858110809171052562301114583370;\
862128906876297157240521836687,1306545866550074959204578950290,862187010943157384426476462254,271156158913443023359567464586,1047347087052855156625724277985,873854687798819935955098596838,1540861031764833670779494004013,917013864999384664710146003407,589382463769318644265475574764,426878836000428022511020193693,605479464253260558680236011230;\
1264037581768565967994431060561,891493978939465112274602030695,715025047074798581479358230764,558845020746850048141113526981,1420467370318405272571445897698,1074391769667436594123192078471,573358897421344809736699686212,811503781503019344452359235776,1328231638686508028249064098261,666797369303205401614438217594,221949534104905459991137514691;\
522607790407619485583740195495,1336185906800550438419249094358,1376912386606584294776391252525,1336614656258184940732390248283,1249720468133248747429087946025,1401536605821253200669352090207,610285305463472399254196474431,1272930506853786704837250832990,41352552769414460683187564794,1452033596348240648874249523152,1111160425270668618291142484117;\
1099750349430800376611777297997,1215592881484818529689854992728,844724792851807712133594631943,1341484286457859278767358013897,1428917554848286058820890931074,107388083245796164196064151175,1171561517660681349577414531789,304154537584396571171231748330,810012335003228779350888572767,1112435027308965493793736973358,49336706115094696546487871951;\
485552174676321996885681988015,1300881761633385128368922146704,990836353384230361927147540735,457834638658578201034898122283,711855636653016079654360735156,779115805871371541940647456000,1274550240018418868594689241334,480202773775726681585803649191,1053374232300211057476655851051,958864394020954959585308641776,1494316304536935790095387561183]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 167 lists. */
