/* Comments begin... 
Coefficient of   x^21 * y^1               = 1
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 4
Coefficient of   x^6 * y^8 * z^4         = 2
Coefficient of   x^4 * y^11 * z^3         = 3
Coefficient of   x^2 * y^14 * z^2         = 0
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = 2

Here is the polynomial we're using this time:

1*x^21*y^1 + 4*x^8*y^5*z^5 + 2*x^6*y^8*z^4 + 3*x^4*y^11*z^3 + 2*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^21 * y^1               = 2
Coefficient of   x^10 * y^2 * z^6         = 1
Coefficient of   x^8 * y^5 * z^5         = 0
Coefficient of   x^6 * y^8 * z^4         = 0
Coefficient of   x^4 * y^11 * z^3         = 1
Coefficient of   x^2 * y^14 * z^2         = 2
Coefficient of   x^1 * z^13               = 4
Coefficient of   y^17 * z^1               = 4

Here is the polynomial we're using this time:

2*x^21*y^1 + 1*x^10*y^2*z^6 + 1*x^4*y^11*z^3 + 2*x^2*y^14*z^2 + 4*x^1*z^13 + 4*y^17*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 153
[10, 2, 5, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[20, 1, 0, 0]  	403	5 
[4, 11, 3, 0]  	422	4 
[14, 11, 2, 0]  	581	8 
[7, 0, 15, 0]  	598	7 
[12, 14, 2, 0]  	612	7 
[11, 0, 14, 0]  	643	7 
[13, 0, 13, 0]  	650	8 
[9, 3, 14, 0]  	674	9 
[10, 19, 2, 0]  	689	7 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[12, 19, 1, 0]  	696	8 
[8, 5, 14, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[9, 6, 13, 0]  	712	8 
[8, 22, 2, 0]  	720	8 
[7, 23, 2, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	7 
[9, 23, 1, 0]  	731	7 
[6, 8, 14, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[5, 9, 14, 0]  	736	7 
[8, 8, 13, 0]  	739	7 
[7, 9, 13, 0]  	743	7 
[9, 9, 12, 0]  	750	7 
[6, 25, 2, 0]  	751	7 
[5, 26, 2, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[8, 25, 1, 0]  	758	7 
[10, 25, 0, 0]  	765	7 
[9, 26, 0, 0]  	769	6 
[5, 28, 1, 0]  	770	6 
[6, 7, 16, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[7, 28, 0, 0]  	777	6 
[18, 19, 0, 0]  	779	7 
[4, 28, 2, 0]  	782	4 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[6, 1, 21, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[6, 4, 19, 0]  	795	6 
[6, 0, 22, 0]  	796	6 
[5, 1, 22, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[6, 3, 20, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[5, 8, 17, 0]  	806	6 
[6, 6, 18, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[5, 7, 18, 0]  	814	5 
[5, 3, 21, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[5, 6, 19, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 34, 0, 0]  	839	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[3, 9, 20, 0]  	884	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[7, 26, 1, 1]  	762	6 
[16, 20, 0, 1]  	764	7 
[6, 29, 0, 1]  	781	6 
[3, 32, 0, 1]  	793	5 
[5, 4, 20, 1]  	807	5 
[5, 0, 23, 1]  	808	5 
[4, 7, 19, 1]  	826	5 
[3, 7, 20, 1]  	838	4 
[3, 9, 19, 1]  	853	4 
[0, 32, 6, 1]  	922	2 
[1, 24, 12, 1]  	943	3 
[3, 1, 22, 29]  	762	3 
[6, 4, 18, 29]  	764	6 
[5, 7, 17, 29]  	783	5 
[2, 24, 7, 29]  	807	3 
[0, 1, 29, 29]  	922	1 
[0, 41, 0, 29]  	943	1 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^5*z^15
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[24417589430136588807746925606,811101665762096424609068877623,1528164558363898309304808556682,638248814238919691479641623368,376682738791825427431150402865,850490275517399524951845990396,19475178111102916073211000892,1093484002291703304537095452590,1133087926720625111857611274636,985153051180434376828444309497,870534143118345886652029905908;\
366075129101611624347221880908,942696584244681556513379072001,1396229141479076085405857539657,775707855220073409952407566070,1579858112009533270032830637739,1508941503934821452547784359572,331180507985028817654738899788,1062885917781677996661174738559,652473157784362880710939350728,424713712654410583680165978803,203298180554345944143325268756;\
296476444017040994734959529114,1083797588284334625047633313593,130272727443549185919579513549,190625413020583317882608255555,69260550345427269805834946319,82441986218358835166167492357,660109283318221753752972799442,1430812398077020197803499868790,158923876624337016357633827392,907833127538616136474679711176,27842822419843174378898893685;\
26925057960751692396677780384,256941143845394294339223720461,180136204024607232990314532026,1452318041545765524532677462000,889339528931187614536652761673,1150719908795006588030521208856,1137415478811503664444934321312,325104300306897861186958619010,475461953624829491246476485320,1327071884585259930490459384991,379187406222721681076612234653;\
295670818693436284852443934775,304363110224457188197580017505,1479095221883815442277745930572,1492531810960295726779300851115,413981690965403762527649392421,338148482766998858994495753055,145759807418381458975660843625,847005584947396654214376553667,494044846327232865721348600099,1113889553347612222593848784744,1040245664704441004656018306420;\
1068540917904281575424574136183,344201331187146904471126840126,1319950819232434159322893060095,1539140578913631617956168336057,1582528634437759681471554605443,58733092768365076937989060409,1042707575761583205891410696890,337211758280112919579897650184,1415683473706150699613125735381,243886496064816101767741269095,323903085005584879500277138314;\
1548193641132113993002248688215,1275537844821155134190984327719,1261572934418572727439321853677,1223219067594122074002699884074,1465885166592944312821130877594,461546546716872129111242088478,904237747988736385262690008335,1081326351743633199362734222999,1228959040592975610884460166166,1136553475957630213607963676222,303560114386106859838383496714;\
1522806027189237775274666225784,1011524398986661927223686055129,396840044391767130879556177432,357958160093791541708167176257,222330279904338016818256200791,1482389403962183816027161497924,622099537187296259077672405687,466161333131552536615463756001,188715809677116891314016492511,1334458526432309687632494283397,1452117849973304594475066974830;\
1379409229752045344364097543506,827801714607392255573909665663,149931593526789018086116393807,210369338818060148964248142340,389122407852541005262465162086,1073283500969712858820628799781,1413410983989012385942706290842,696333368311600656978935137511,191625181726231826758781827154,1035176306573655916251954809976,1298463125297664418990952053989;\
1013467046372172583482121974191,64007488756363775178024909514,1365469461470811825229506079989,1303257768157254316512339225915,564774872169408753250610944303,714982550255513453032022702568,98306584526601793366540888713,1524504103332487864053435398067,437863505407457499626320894214,1053082185250271171239008641932,795612478521574378262360665925;\
479059581647993155775103675607,100397212106166761940928901502,900041670698914508558501278004,727408485576035319116208931596,275326007976036239879696742417,516918625185546773511601386921,1028641582771481559037644232086,656742338998002353466854317845,716789654641673512321495479758,674086835740055296299959101840,187669998147286677973313223894]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
