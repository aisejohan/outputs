/* Comments begin... 
Coefficient of   x^21 * y^1               = 0
Coefficient of   x^10 * y^2 * z^6         = 5
Coefficient of   x^8 * y^5 * z^5         = 5
Coefficient of   x^6 * y^8 * z^4         = 5
Coefficient of   x^4 * y^11 * z^3         = 4
Coefficient of   x^2 * y^14 * z^2         = 4
Coefficient of   x^1 * z^13               = -2
Coefficient of   y^17 * z^1               = 0

Here is the polynomial we're using this time:

5*x^10*y^2*z^6 + 5*x^8*y^5*z^5 + 5*x^6*y^8*z^4 + 4*x^4*y^11*z^3 + 4*x^2*y^14*z^2 + -2*x^1*z^13

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Not smooth!
Coefficient of   x^21 * y^1               = 3
Coefficient of   x^10 * y^2 * z^6         = 2
Coefficient of   x^8 * y^5 * z^5         = 4
Coefficient of   x^6 * y^8 * z^4         = 3
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = 1
Coefficient of   x^1 * z^13               = -4
Coefficient of   y^17 * z^1               = 1

Here is the polynomial we're using this time:

3*x^21*y^1 + 2*x^10*y^2*z^6 + 4*x^8*y^5*z^5 + 3*x^6*y^8*z^4 + 1*x^2*y^14*z^2 + -4*x^1*z^13 + 1*y^17*z^1

Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
The final length of G is 172
[10, 2, 5, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[8, 5, 5, 0]  	422	5 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	10 
[14, 11, 3, 0]  	612	10 
[18, 8, 3, 0]  	619	10 
[12, 14, 3, 0]  	643	9 
[11, 0, 14, 0]  	643	9 
[14, 14, 2, 0]  	650	9 
[16, 14, 1, 0]  	657	9 
[10, 17, 3, 0]  	674	8 
[9, 3, 14, 0]  	674	8 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	8 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	7 
[9, 19, 3, 0]  	701	8 
[7, 22, 2, 0]  	701	8 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	7 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 3, 23, 0]  	839	4 
[2, 35, 0, 0]  	843	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[3, 10, 19, 0]  	876	3 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[6, 14, 3, 1]  	529	6 
[16, 20, 0, 1]  	764	7 
[4, 17, 11, 1]  	808	5 
[4, 23, 7, 1]  	822	5 
[3, 7, 20, 1]  	838	4 
[4, 9, 18, 1]  	841	5 
[3, 10, 18, 1]  	845	4 
[3, 9, 19, 1]  	853	4 
[3, 28, 5, 1]  	856	5 
[2, 26, 8, 1]  	884	3 
[1, 30, 7, 1]  	926	2 
[1, 0, 30, 1]  	949	2 
[1, 21, 15, 1]  	967	3 
[8, 26, 0, 2]  	750	7 
[7, 6, 14, 3]  	705	8 
[6, 23, 2, 28]  	705	7 
[5, 9, 13, 28]  	705	6 
[5, 15, 10, 28]  	750	6 
[4, 18, 9, 28]  	769	5 
[1, 12, 19, 28]  	884	2 
[5, 0, 14, 29]  	529	5 
[9, 19, 2, 29]  	670	7 
[4, 26, 2, 29]  	736	6 
[5, 21, 6, 29]  	764	6 
[4, 24, 5, 29]  	783	5 
[3, 3, 22, 29]  	808	4 
[2, 26, 6, 29]  	822	3 
[2, 24, 8, 29]  	838	3 
[2, 14, 16, 29]  	856	4 
[0, 16, 18, 29]  	926	1 
[0, 38, 3, 29]  	967	2 
------
The gap is between 4 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[1439995469987553942775540025476,1043193224512016467868670624521,129425372637055259408189800828,846626417599138373325252415269,1423337422611625854605169340982,1331290020865108457488391947220,467663593682793553952572353028,537723445920240426761665572987,278961872828532595270667084943,1286358355270705879051097069686,1432690415687965078136827985298;\
1493476646740034993903101757002,139231896678298962891475424238,101504326391056262572667510958,1443779047818777042066913553873,442789510911352917587729335585,274777492803080206028679900068,147521525866950840968892292863,154620545093782856515950205947,818456460721010906864758001489,314310576925129630143315284157,1528864647831939708097590370786;\
85705008205607509745840211001,120653718363012810087735488254,949426305517378364674927913976,1381622502121084752079757218903,549890508419950248058470787506,879289786692998698323000768964,898312603822555843010804382877,510610444210509285728160758628,655441931653540921544074571976,978323366984871194054723504703,1474989519942421922235813554659;\
1554052971378083750386070812122,150866721442534224935239280353,319739641205394257210324664923,657659101009821867198228304252,1571519413860567054968011692787,818144287028329526987494134208,1110755621275823466482919689771,634297176296588172457610716415,424468879910716745414515043949,1316703294346706854061899452104,811969886470350164991080741105;\
1532943994859774795731823391960,344632631869137681967341804802,974510276869016981254341692661,1311319472344963215923443804908,993023310078677230554872742808,817210761797504188205472943232,725442786883376306249532859524,563856109875786849128426608618,136471669532339085756080710969,512191103162432351931341974928,352731906330009091032256250933;\
622206053613091830442042335067,640552758914816963693628118777,638938318769737218739263096175,42124580155809438778659716284,1192335056005203381068012992942,637511781880518093063513586566,638929038842042939191839048213,151616548362202266711833820245,1128135242035950614095308428057,112247548967641568417848391018,804606417378173733168018122433;\
474968760385866550588554885256,491136086993628596942793610172,1520705563416021512903708909384,1359561316389836898990562320971,1476610825553751873989115745930,721264934420564456100147470259,598152608690667793517890953301,1429945626528730116789763250911,815578528319177807967105042148,965411007454850059688028259321,598905091491013674310471882893;\
1313679157784285178549657253560,241065202793370973539359549216,382568002360282527692691878908,377330871862665507201909991200,231540118785631325504341636250,1286704332253755028288169841698,1393763291863820148900894826451,1145862270968413228097751111910,1353894669407648638758741110462,455891403204340074164476801001,234608896262938595152834026288;\
457124334926098959944136408402,909176548563992833620449668412,1170260919657501478111514065594,261621094349367085803567995480,901777012705834601878137153338,814603307596932064657234091424,342535180767514847628834789372,425980473187597632293406576258,1172487985007082092839394687299,1354244887349014332114833232304,719188208689486334074926883849;\
64112980306931091034207703508,1024414607425347250953245847564,447090289485313212289184509526,1215763600359447405542744652976,324665301257940404839208623052,1117965100737013297341292892865,345862873664671780784223554753,1388913760785387591282529951125,1267829573320025799666445617469,1020192933821014415610129055041,1415177754449645247973639977975;\
956321859821255028563340446626,831774216607128820650263197499,583049013207975321885045130303,563938975312441655587998211457,494088532882386046957288306425,1411739113042145940018131052987,263897317965785476223127221279,1329351883380295072346375839259,1586194251437831649537154988735,417215678257583855892516437911,599070092509774700086392924243]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 167 lists. */
