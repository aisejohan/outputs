/* Comments begin... 
Coefficient of   x^21 * y^1               = -3
Coefficient of   x^10 * y^2 * z^6         = 5
Coefficient of   x^8 * y^5 * z^5         = 4
Coefficient of   x^6 * y^8 * z^4         = 5
Coefficient of   x^4 * y^11 * z^3         = 5
Coefficient of   x^2 * y^14 * z^2         = 0
Coefficient of   x^1 * z^13               = -4
Coefficient of   y^17 * z^1               = 0

Here is the polynomial we're using this time:

-3*x^21*y^1 + 5*x^10*y^2*z^6 + 4*x^8*y^5*z^5 + 5*x^6*y^8*z^4 + 5*x^4*y^11*z^3 + -4*x^1*z^13

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Not smooth!
Coefficient of   x^21 * y^1               = -1
Coefficient of   x^10 * y^2 * z^6         = 1
Coefficient of   x^8 * y^5 * z^5         = 3
Coefficient of   x^6 * y^8 * z^4         = -3
Coefficient of   x^4 * y^11 * z^3         = -1
Coefficient of   x^2 * y^14 * z^2         = -4
Coefficient of   x^1 * z^13               = -1
Coefficient of   y^17 * z^1               = 5

Here is the polynomial we're using this time:

-1*x^21*y^1 + 1*x^10*y^2*z^6 + 3*x^8*y^5*z^5 + -3*x^6*y^8*z^4 + -1*x^4*y^11*z^3 + -4*x^2*y^14*z^2 + -1*x^1*z^13 + 5*y^17*z^1

Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 164
[10, 2, 5, 0]  	391	7 
[21, 0, 0, 0]  	399	7  <--- 1
[20, 1, 0, 0]  	403	7 
[8, 5, 5, 0]  	422	6 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	12 
[14, 11, 3, 0]  	612	11 
[18, 8, 3, 0]  	619	11 
[11, 0, 14, 0]  	643	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	8 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	5 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[9, 3, 14, 1]  	674	9 
[10, 22, 1, 1]  	727	8 
[5, 11, 13, 1]  	751	7 
[16, 20, 0, 1]  	764	7 
[2, 18, 12, 1]  	824	4 
[3, 10, 18, 1]  	845	4 
[3, 9, 19, 1]  	853	4 
[3, 28, 5, 1]  	856	5 
[8, 20, 2, 29]  	674	8 
[8, 25, 0, 29]  	727	5 
[4, 28, 1, 29]  	751	6 
[5, 21, 6, 29]  	764	6 
[4, 24, 5, 29]  	783	4 
[1, 35, 0, 29]  	824	3 
[2, 27, 6, 29]  	845	3 
[2, 26, 7, 29]  	853	3 
[2, 14, 16, 29]  	856	3 
[1, 13, 18, 29]  	876	2 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[334582012523305073506613413022,201660577570148882456655569241,318761367864940551206864819062,511890523983390064758832452855,759268461610521811522159655916,84635876963112996619049569453,1380035014420999433225830455057,579181794480440622972152974487,736691147432859720595503520775,795770381152475360104908072913,1562184320848801699599680877428;\
1536227791754696154622300852639,220094489573684739263547972758,739129659017260883206743625060,1428689105372002834941896620085,1241391706930621589455024241373,252846897825749743494553426555,650512753459157991384370418283,439324559356942797676877785013,648681176837073635271396331534,542467070885640866738397948356,1351119184591773988224578492737;\
1016663171157209180423456561692,661859098746418388257094708730,252745418037110564265740450431,401312863449132892402507162768,131106349055372055353948903394,491614586465060856762429675815,51840523930930691605222774387,869877430250699341923175037578,6400558481904736818545881609,798254582955475203833356246363,773019370041271417399398079687;\
714787302098425511322897280832,284323792274387072854415948776,1275705956951404646371718038453,190282885101113381563350898424,1205596431607067549595515896311,1524460127776683073643110466000,973832612803607004987416634922,1433652840740272779056348631911,868715142386299287147506250164,920913728407930579304200308343,868503040739210170863391738047;\
614788631740617444463090267198,1119734392711351948396880844282,545284397534591114991619177074,1164271053013938506627405177114,892623420982666417108601447053,1311624513068790112989071755975,1444008182767627372571177162430,637326101492944450087951211597,1579932468517510834653464592813,1218356092766842928350676811741,616373838927665300412366251629;\
89014135681139541260964720671,690122898762324525042735803268,522140109024532860963990796729,224061429642179411910563327579,197743675644313714697808975355,881651597620891861433589619931,450354273311447165724430439281,398246652538986478339168491193,1197625913216836443767783659622,199952415343702064855825214718,581167918381201630980713375097;\
1244136318199305013175146057393,517922712487028930681509476257,1088538463983918611320815860707,123233910158539212789403290985,1010992766103817872161962877306,90036941235036668986693453698,1529385298509803992407459642630,1358745699596540936683855896450,542215109679034418031554337793,687603055491591304745137166643,1345704209116747354851151914541;\
7178676015907282613148193407,1451215580049128510528661704919,496677897740702133220740095699,1017344351503845058571591521401,622751533017983865854973424271,232148978184302992715473775666,840883539575187657004712320724,46419866914717576621109610270,1189763774289751127701897070276,731777033918308657385532386994,1469689093220902800562077699036;\
844697540612780541455642628359,1574040592679724512234642140327,1188285304537500743131715332806,288185439457952733016691176520,1028798516499535395419222051536,1072037164457468622320937589274,1526100330895843893507191084430,778475078460711152351676900582,920363023236167615889285760061,1559554040352837014180517089432,1389118625768174766736086140061;\
151682712614576546733579123745,184841781224323067849164975754,576944048154964906003077632708,1442525853477274597949432264970,1328057829806082769615364869297,590821212667876658229138940475,1144097605436563638840968238459,704098957045929683135459216072,1030636118275397753662799153106,1069766725466243034151383475453,536721711265075181563408882378;\
159194969442078876619993599346,1458460212327077640161230273105,525025151506597596893851553768,800907231061780524303458355838,401053467359473075600854243337,278005730026036892217977055120,703297418135179375969536417991,552426585233545605376784136575,1158654557660697319168147884276,1068327202177250093662232018832,275819451151061147519525135294]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
