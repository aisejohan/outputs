/* Comments begin... 
Coefficient of   x^21 * y^1               = 0
Coefficient of   x^10 * y^2 * z^6         = 5
Coefficient of   x^8 * y^5 * z^5         = 4
Coefficient of   x^6 * y^8 * z^4         = 5
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = -2
Coefficient of   x^1 * z^13               = 2
Coefficient of   y^17 * z^1               = 5

Here is the polynomial we're using this time:

5*x^10*y^2*z^6 + 4*x^8*y^5*z^5 + 5*x^6*y^8*z^4 + -2*x^2*y^14*z^2 + 2*x^1*z^13 + 5*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Not smooth!
Coefficient of   x^21 * y^1               = 4
Coefficient of   x^10 * y^2 * z^6         = 5
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = -4
Coefficient of   x^4 * y^11 * z^3         = 3
Coefficient of   x^2 * y^14 * z^2         = -3
Coefficient of   x^1 * z^13               = -5
Coefficient of   y^17 * z^1               = -5

Here is the polynomial we're using this time:

4*x^21*y^1 + 5*x^10*y^2*z^6 + 2*x^8*y^5*z^5 + -4*x^6*y^8*z^4 + 3*x^4*y^11*z^3 + -3*x^2*y^14*z^2 + -5*x^1*z^13 + -5*y^17*z^1

Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 164
[10, 2, 5, 0]  	391	7 
[21, 0, 0, 0]  	399	7  <--- 1
[20, 1, 0, 0]  	403	7 
[8, 5, 5, 0]  	422	6 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	12 
[18, 8, 3, 0]  	619	11 
[11, 0, 14, 0]  	643	10 
[16, 11, 3, 0]  	650	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	8 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[4, 23, 7, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[14, 11, 3, 1]  	612	11 
[16, 20, 0, 1]  	764	7 
[5, 17, 10, 1]  	796	6 
[3, 17, 12, 1]  	820	5 
[2, 31, 4, 1]  	875	5 
[2, 26, 8, 1]  	884	3 
[1, 18, 16, 1]  	929	3 
[6, 26, 1, 2]  	743	7 
[5, 12, 12, 28]  	743	6 
[12, 14, 2, 29]  	612	9 
[5, 21, 6, 29]  	764	5 
[4, 24, 5, 29]  	783	3 
[4, 3, 21, 29]  	796	5 
[2, 34, 0, 29]  	820	4 
[2, 0, 27, 29]  	875	4 
[1, 12, 19, 29]  	884	2 
[0, 35, 4, 29]  	929	2 
------
The gap is between 3 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[316333080793122890100035288351,652316546694620944555622636469,264506708414968141362070902569,1367999617650524537598222972856,1403358404145429608830968909444,1108127490724791413791827697378,34973688643700423514722834152,1167563530027519756307592347547,156044398483838426859667953583,169479185626801867659709898108,208628744305880599685158034652;\
734502603534419217108857370569,233836524220680124520235808026,1134600513713035070202712651674,1075794587167761287039790293486,1088058862284054435302291749216,393609745188207321583996584189,1294911282310260016517143696932,1009260590665614337075492534386,86461049753392192760600038936,299878703975824202016339536039,588909973632020282541422136068;\
944234292579683891533422200707,1473574158986893678151449209894,1041031272337466211682769088257,514907072461703967573911193492,689610737304242801418011143327,1021429818983152693795990116379,624855170570317776173673019893,1221823849974750347420466194461,1463933850783326014168690807193,829156843814841881093057858401,1257054834682061772926115169810;\
606198672894526774186868271596,1440237008146519876029511760982,1460501441469477672043430449554,584310846459961284291070968800,79657263198600289559055599868,244864855858097292279624161241,292494601759938517266777427175,917142201990051629083517631221,1218956789120464832882083594361,870403638020663586277145763374,411198687195528071962736033640;\
924645412534110593251598963675,154011640918466550950533938219,1400226648411159999726070183594,176870805657109940895601911829,625967430118155713508060302668,846698562635628625026511191455,671927949825794250785362486782,574928284783773778973411993807,1006144578262034724474641110849,191272754381042834892607637752,88989569409544235468895454783;\
343777194280149629547934220031,868892051193051518365005245881,1489080422621539458620738794064,1568048657207231505238598847555,1211493341160488525366694858061,1421966110384036148475339885815,1583228386910920972478874084918,256285087863224888695125189434,1381196685908722250061850100701,1484388029661423765932529657918,233542957275619550140739959384;\
93962530973601893176908091026,1039615098695926750470099264055,1332781235535468673789327871142,534637842947684265599571117840,519427332551276456030492201510,43078427269058396599757823208,792416044947381070681178519949,836375178537155973092317614784,288196941497156846115561396236,154016470971851422109840789036,938485467792312066321355195975;\
960814363243183648795872850759,292314226174155011471165605738,418470663682790580868301525116,1366143685325565150345531750703,1462723656611993692425516057666,1390687714051531548166681807574,1495897744722140874417028065890,1248502346694239733798337138481,882094976452166258974115823119,346621625496750768182897356742,1159465346110280468036329778952;\
933246315982132426058985484308,294444237802332023723847122555,593124693636527029740650297309,518138674388065625804904405840,542909625619525080101439634105,449424081337451533372369765642,500426374973236102391239298345,1420067314677888435604654326443,595455297798486303577495706885,124786494648439010957279479968,598785581100927155391975115344;\
1200885010147195918538679950756,203345307966688533389133597554,287447805455956204013310947352,1574898869962998444458750263162,840392577693142685027698644686,1315816927996615737778009676785,1231731290592611874782552366465,749321507048475721404405628113,1266702132224154294156360694690,1037154719623336038716701655088,1139647247174094384074671087920;\
881772841280979155491805366646,1335667158311498885368122619750,717949579658181874614493235121,1474702462548279337528720413387,119094139688644983889577860793,1023648153950570236489956059967,1466557336770074287700020372731,88593717168537445959953034319,1237151222076894986057404476202,79972201467616667277134506209,298748481868226103021450792870]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
