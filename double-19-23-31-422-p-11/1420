/* Comments begin... 
Coefficient of   x^21 * y^1               = -1
Coefficient of   x^10 * y^2 * z^6         = -2
Coefficient of   x^8 * y^5 * z^5         = -3
Coefficient of   x^6 * y^8 * z^4         = 2
Coefficient of   x^4 * y^11 * z^3         = -5
Coefficient of   x^2 * y^14 * z^2         = 1
Coefficient of   x^1 * z^13               = 3
Coefficient of   y^17 * z^1               = 5

Here is the polynomial we're using this time:

-1*x^21*y^1 + -2*x^10*y^2*z^6 + -3*x^8*y^5*z^5 + 2*x^6*y^8*z^4 + -5*x^4*y^11*z^3 + 1*x^2*y^14*z^2 + 3*x^1*z^13 + 5*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 174
[10, 2, 5, 0]  	391	7 
[21, 0, 0, 0]  	399	7  <--- 1
[20, 1, 0, 0]  	403	7 
[8, 5, 5, 0]  	422	6 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	12 
[14, 11, 3, 0]  	612	11 
[18, 8, 3, 0]  	619	11 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[13, 0, 14, 0]  	681	9 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	8 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	7 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[4, 23, 7, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[4, 25, 6, 0]  	837	5 
[3, 11, 17, 0]  	837	5 
[3, 3, 23, 0]  	839	4 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 7, 22, 0]  	881	3 
[3, 9, 20, 0]  	884	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 38, 0, 0]  	893	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[2, 0, 29, 0]  	937	4 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[1, 18, 17, 0]  	960	2 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[11, 0, 14, 1]  	643	10 
[8, 23, 1, 1]  	712	8 
[5, 9, 14, 1]  	736	7 
[16, 20, 0, 1]  	764	7 
[5, 24, 4, 1]  	771	6 
[4, 25, 5, 1]  	806	6 
[4, 24, 6, 1]  	814	5 
[3, 17, 12, 1]  	820	5 
[4, 7, 19, 1]  	826	5 
[3, 7, 20, 1]  	838	4 
[4, 9, 18, 1]  	841	5 
[3, 9, 19, 1]  	853	4 
[2, 29, 5, 1]  	860	4 
[3, 23, 9, 1]  	865	4 
[2, 15, 16, 1]  	879	4 
[1, 15, 17, 1]  	891	3 
[2, 13, 18, 1]  	895	3 
[2, 12, 19, 1]  	903	3 
[2, 0, 28, 1]  	906	4 
[1, 18, 16, 1]  	929	3 
[0, 41, 3, 1]  	1036	2 
[4, 21, 8, 2]  	807	5 
[10, 17, 2, 29]  	643	8 
[7, 9, 12, 29]  	712	6 
[7, 26, 0, 29]  	731	5 
[4, 26, 2, 29]  	736	6 
[5, 21, 6, 29]  	764	6 
[4, 10, 15, 29]  	771	4 
[3, 10, 16, 29]  	783	4 
[3, 7, 19, 29]  	807	4 
[2, 24, 7, 29]  	807	3 
[2, 34, 0, 29]  	820	4 
[3, 26, 6, 29]  	841	4 
[0, 32, 4, 29]  	860	2 
[2, 9, 20, 29]  	865	3 
[1, 29, 6, 29]  	872	2 
[0, 10, 26, 29]  	1036	1 
------
The gap is between 3 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[328022114499071646889406011807,1212763175489805929856979392466,515295729893128450667258881601,935754960586615836811815237413,408586733728950195683935846714,206154283529923965557126105531,1491236005781107012182323418862,627566332235533563363204059654,1211756776657523012003448322434,752426219507847120546867429664,1540953276577383395634192560605;\
1180573557350293900411904105847,1114622967844384456277707574287,1550523806781971594956113215949,472158259999904613604083559637,1158162041613418871612654925799,1554678656150397966113909695217,1419059964633903374294355532425,188903637845528662365656734365,329136220442695525313607435623,377489329137691652906331771695,261265884031021191551935535060;\
1282004705502233675812585102744,783174030500810464274277963809,1492961316964095792413524449207,747694612638555181778640879736,310911416017421699297027949563,1127063010987834456585891286610,437606318324590487437875881690,1052167515162181187282197073565,17634990361550048201672012594,291064684934626669775683437628,663258568604066450844584727026;\
625101373290977595657848299147,671701104327549731273930020777,807177858527291513742512757123,1192590723909084077716823223396,897259488663855954933760189220,180105735225729595859824434814,1237455013263798512003237306538,1115146426301319494535662685267,1538105730161516604186217983952,275779851581643285356360462571,203966735994252071054954811225;\
1500631087358819648017502144714,1017324715218157894472426613838,1032452290725754669787158612249,916251766757332141362659973056,659314904831239342943798068847,511848780491999904669499777334,483664598656002063466447819252,397529712259686566687418298700,1050482129545239418374702282895,139332132274056464816097004046,38541924365138117358204066682;\
804823353728905079801166620512,1133559529597600727404147950125,332587357031603887485011645294,1195036112160002428476261834315,918554263119691769165955576018,1279976771098693587340369263964,1306974773415939615813543307425,872242809424256653501510526585,1505888308151111248378869484553,909512795261710753665402343306,724385798499174036334799522613;\
963765021627761207588152007119,1540427733166653330463563250991,150788753750152017475209057106,1574086351290359565582267673285,351409986873084003948049085900,126706556850144714661879130195,774295162572225051464477994674,1558830151971160090705137969789,1426587542393006716303728655431,1203116073025731483823983637408,672870426274530676287438148927;\
1026609839704504727637563193192,1189715213472824258010721386125,326780595205821928419249513646,1313695267296356636444659459817,234228683227403680062057427518,793662281321321364143455155001,1029466528253794940469322099762,969430080644874695954011340161,1324130493784782504055668960868,1166827595095574706967703974856,658235854648315189791598843020;\
1078643610364575444772633258488,1203094155621461846291646732331,1194426825076328636595199364536,81459977626698679581524839547,1018723975399063890711194128524,662832418112821168400284031727,19733236483927524649499859473,569776293873083185072514412676,446501390722044702815087058456,1217663878707735380792609574385,1532952912507763529884197931560;\
186028573431572193166601036648,670908242115614295235708403037,14479815754099266453271671660,19711212064460239085521582241,1031803796486642215209501221718,561948869963757859526278711959,392441038450711362956612620676,1048337920880072825131111455924,1573322298169775675373117041589,1548507310898265983875209549048,1282043847352203195417098881643;\
878930288067738872822926977667,464364311224922815785469939329,1430929693168509886554502354603,59915029138020181150925536021,1411876080896571968965820796010,140554017292947399850023588658,395711076115044318698523181431,996684829380045231721244523904,683187154069913087914622322085,325517466724110726008747605648,164024524878853741801251796738]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
