/* Comments begin... 
Coefficient of   x^21 * y^1               = -5
Coefficient of   x^10 * y^2 * z^6         = 2
Coefficient of   x^8 * y^5 * z^5         = 4
Coefficient of   x^6 * y^8 * z^4         = -2
Coefficient of   x^4 * y^11 * z^3         = 3
Coefficient of   x^2 * y^14 * z^2         = 5
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = 0

Here is the polynomial we're using this time:

-5*x^21*y^1 + 2*x^10*y^2*z^6 + 4*x^8*y^5*z^5 + -2*x^6*y^8*z^4 + 3*x^4*y^11*z^3 + 5*x^2*y^14*z^2

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^21 * y^1               = -3
Coefficient of   x^10 * y^2 * z^6         = -2
Coefficient of   x^8 * y^5 * z^5         = -4
Coefficient of   x^6 * y^8 * z^4         = 1
Coefficient of   x^4 * y^11 * z^3         = -1
Coefficient of   x^2 * y^14 * z^2         = -4
Coefficient of   x^1 * z^13               = -1
Coefficient of   y^17 * z^1               = -1

Here is the polynomial we're using this time:

-3*x^21*y^1 + -2*x^10*y^2*z^6 + -4*x^8*y^5*z^5 + 1*x^6*y^8*z^4 + -1*x^4*y^11*z^3 + -4*x^2*y^14*z^2 + -1*x^1*z^13 + -1*y^17*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 164
[10, 2, 5, 0]  	391	7 
[21, 0, 0, 0]  	399	7  <--- 1
[20, 1, 0, 0]  	403	7 
[8, 5, 5, 0]  	422	6 
[8, 8, 4, 0]  	460	7 
[4, 14, 3, 0]  	491	5 
[18, 5, 4, 0]  	581	12 
[7, 0, 15, 0]  	598	7 
[14, 11, 3, 0]  	612	11 
[18, 8, 3, 0]  	619	11 
[11, 0, 14, 0]  	643	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[12, 17, 2, 0]  	681	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[12, 20, 1, 0]  	719	8 
[6, 9, 13, 0]  	724	7 
[17, 0, 13, 0]  	726	8 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	8 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[7, 11, 12, 0]  	758	7 
[4, 11, 14, 0]  	763	6 
[6, 0, 21, 0]  	765	6 
[5, 28, 1, 0]  	770	6 
[6, 7, 16, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[7, 28, 0, 0]  	777	6 
[18, 19, 0, 0]  	779	7 
[6, 29, 0, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[5, 3, 20, 0]  	784	5 
[3, 29, 2, 0]  	786	5 
[3, 32, 0, 0]  	793	5 
[6, 4, 19, 0]  	795	6 
[5, 1, 22, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[5, 8, 17, 0]  	806	6 
[5, 31, 0, 0]  	808	5 
[5, 0, 23, 0]  	808	5 
[6, 6, 18, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[5, 7, 18, 0]  	814	5 
[4, 4, 21, 0]  	819	5 
[5, 6, 19, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[4, 10, 17, 0]  	833	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[15, 0, 13, 1]  	688	9 
[8, 23, 1, 1]  	712	8 
[7, 8, 13, 1]  	720	8 
[6, 12, 12, 1]  	762	6 
[16, 20, 0, 1]  	764	7 
[4, 31, 0, 1]  	789	6 
[3, 17, 12, 1]  	820	5 
[3, 4, 22, 1]  	831	4 
[4, 6, 20, 1]  	834	5 
[3, 11, 17, 1]  	837	5 
[1, 13, 19, 1]  	907	2 
[1, 21, 15, 1]  	967	3 
[14, 17, 1, 29]  	688	7 
[7, 9, 12, 29]  	712	7 
[6, 25, 1, 29]  	720	7 
[7, 26, 0, 29]  	731	6 
[5, 29, 0, 29]  	762	4 
[6, 4, 18, 29]  	764	6 
[5, 7, 17, 29]  	783	5 
[4, 0, 23, 29]  	789	5 
[2, 34, 0, 29]  	820	3 
[2, 21, 10, 29]  	831	3 
[3, 23, 8, 29]  	834	4 
[2, 28, 5, 29]  	837	4 
[0, 30, 7, 29]  	907	1 
[0, 38, 3, 29]  	967	2 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^5*z^15
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[442202955322709739863276771538,1208440306643823559679097659194,1197088998648351049960299064186,1333177873919040269662754186414,319497304208035161807095489806,1012062745291728103104341775631,229298452476602503022015134763,1384474256784629358608096930808,645680638071487966490866477968,1299656071409240611964177103769,1071974590558462015907915507481;\
1364009066465401433482336557341,107937930782621744210039287064,1037203190889072218091086178437,661616076440939070932695879115,1452736973194506791273699951976,1382848423659365603474889942323,1139234119724434458417883437918,459047767737657256442688148041,1157119883949753128064492914444,1356689728388151192392903855848,247250550058067897484251717202;\
929828226896900002088639704988,666753663342509557945911661697,121429203410246311809460797498,924523889136487065744631156679,549601088557554722629579075514,1392671636809469737305562678921,1297223589115867101831566156986,1102073689878070633898375946459,1402997307665089717435656982543,445291804006112932281687013927,681852716595838354476767184844;\
1510979664065552897268658645648,550961514320146017289384584109,145177851337240196929036537504,1362761123533646163923690890455,1194324617226310233994606123529,705649750765789218188006962898,892011472965379877383934571449,945220100065817010496668951784,429130088001292396181620533838,340153903601182167301742042446,264787059943107594701480918037;\
1371751111537479941167525931237,906001297658703342876108209288,720703687810815016835838867177,748858824841764957987240143790,66738011676018252183028098057,1541103185845157132716065209442,751293374364264097134210823480,1580448659047975962368349726654,1265762840700920227612911480274,521885463757743300481715510105,218814342889398096251073460853;\
866016261090735842106080447806,1031020357554360452433309789638,782436026652751829574127906865,201892416965778085683589814636,1485541130820559547509878253271,524443367500485564334957599571,674805593874877595855944571517,1448315879605226628176480603611,873059663497594250708560633983,930309247333947273885079734219,1078189145177869814444898845973;\
1504859616476599895252456997577,517453310839678410958089191656,1224801294347020814766141370989,1387909224059790763693413502363,191964329184586788700457976301,1377699461423190110608559728473,1314211253903811350140135349476,93222140723937126678566873380,510578432291359402109802220041,636217421279107444713965126615,21780913546994722676138497376;\
978593377231879471519078284745,40829861058416380507936459957,1094535994881064304649049667781,1134183794489499858201124108862,1338561520883527202095388989181,1410082207431155711255305838500,1564375294436190532779523466371,752810052791184270718151753558,378946720532785145214689958424,1035876818568572556646824519832,1066721142170701647702994698293;\
581293576036339697674297947641,524033728105309532633065179197,236367586547221550937492081285,662588876851447216240511298005,123864432589222713532349848280,872808856206353604762747279713,120868080935219438334406898654,103734263229326649762975032505,1127711610519579819790025039257,163687243084145230607827282228,354166637280305506054862437369;\
1453907044080608132031164171257,268854342894763399850690260958,1004244169906657540465830835101,1570672018308552179006809124577,401450229256265315406062803515,145737212692855315830618387408,234804372343442436952691702934,1582545915386500014140541162075,541692348647574825447056598805,63855910170084803787351794239,702217085880995688427273824810;\
834957903049837579927618262292,658879712124278043702788433416,1263177091401297598762146681977,1080313670224091708785393842246,262810461587696282298737401593,446287873730372438254604928176,429100584712651896991217206210,610748544305789005045117990901,979941573614594735772218305330,1290915596655943623833491494053,1320667175351713619199250421974]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
