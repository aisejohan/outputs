/* Comments begin... 
Coefficient of   x^21 * y^1               = 0
Coefficient of   x^10 * y^2 * z^6         = 2
Coefficient of   x^8 * y^5 * z^5         = 1
Coefficient of   x^6 * y^8 * z^4         = -4
Coefficient of   x^4 * y^11 * z^3         = 4
Coefficient of   x^2 * y^14 * z^2         = 2
Coefficient of   x^1 * z^13               = -3
Coefficient of   y^17 * z^1               = -2

Here is the polynomial we're using this time:

2*x^10*y^2*z^6 + 1*x^8*y^5*z^5 + -4*x^6*y^8*z^4 + 4*x^4*y^11*z^3 + 2*x^2*y^14*z^2 + -3*x^1*z^13 + -2*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Not smooth!
Coefficient of   x^21 * y^1               = 5
Coefficient of   x^10 * y^2 * z^6         = -3
Coefficient of   x^8 * y^5 * z^5         = -3
Coefficient of   x^6 * y^8 * z^4         = -4
Coefficient of   x^4 * y^11 * z^3         = 5
Coefficient of   x^2 * y^14 * z^2         = 4
Coefficient of   x^1 * z^13               = -2
Coefficient of   y^17 * z^1               = 2

Here is the polynomial we're using this time:

5*x^21*y^1 + -3*x^10*y^2*z^6 + -3*x^8*y^5*z^5 + -4*x^6*y^8*z^4 + 5*x^4*y^11*z^3 + 4*x^2*y^14*z^2 + -2*x^1*z^13 + 2*y^17*z^1

Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 171
[10, 2, 5, 0]  	391	7 
[21, 0, 0, 0]  	399	7  <--- 1
[20, 1, 0, 0]  	403	7 
[8, 5, 5, 0]  	422	6 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	12 
[16, 8, 4, 0]  	612	11 
[14, 11, 3, 0]  	612	11 
[18, 8, 3, 0]  	619	11 
[11, 0, 14, 0]  	643	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	8 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[4, 28, 2, 0]  	782	7 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[3, 15, 13, 0]  	805	5 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	5 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 0, 31, 0]  	961	1  <--- 3
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[8, 8, 4, 1]  	460	7 
[16, 20, 0, 1]  	764	7 
[5, 15, 11, 1]  	781	6 
[3, 14, 13, 1]  	782	6 
[2, 18, 12, 1]  	824	4 
[3, 7, 20, 1]  	838	4 
[3, 10, 18, 1]  	845	4 
[2, 21, 11, 1]  	862	3 
[2, 23, 10, 1]  	877	3 
[1, 31, 6, 1]  	918	3 
[1, 18, 16, 1]  	929	3 
[0, 35, 5, 1]  	960	2 
[1, 21, 15, 1]  	967	3 
[2, 15, 16, 2]  	879	4 
[1, 32, 4, 28]  	879	3 
[6, 11, 3, 29]  	460	6 
[5, 21, 6, 29]  	764	5 
[4, 1, 22, 29]  	781	5 
[2, 31, 1, 29]  	782	5 
[4, 24, 5, 29]  	783	5 
[1, 35, 0, 29]  	824	3 
[2, 24, 8, 29]  	838	3 
[2, 27, 6, 29]  	845	3 
[1, 7, 22, 29]  	862	2 
[1, 9, 21, 29]  	877	2 
[1, 0, 29, 29]  	918	2 
[0, 4, 27, 29]  	929	1 
[0, 38, 3, 29]  	967	2 
[0, 24, 15, 29]  	1017	1 
------
The gap is between 3 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[1074980290241656847749271655285,658149973208425754014208933375,917682790164652687823899270194,728784856165650925388543433605,1333829763792333550981423025159,1080002217323476454784213485323,213875960333636682427761275234,744065326911652648517728889391,480694251957797974433860306102,88602955966158316427086523445,1428363140467889110410671609050;\
343814595800114260790851628355,681046563618226604618432131265,621680599326160050478492217943,1185333234568149238715285472286,812554114305794233979431848803,141239369797935181226024009747,50686384435220022894932151383,1244514366989596030999990594880,1026191046611238868323141034593,1278728483221945514820684657958,745313898947635547338071424909;\
1504079059552643056496133322663,1480123925974979554912461947671,314147592908329879227135633489,1235710116294968000058918097211,778924524542450741132147272209,1268289816389253512722098523193,1247595958800849204613298994300,1502269925273338747036097221558,1502625847312226230205259510852,1072342007995237114081659285342,1141952359821048965469882167940;\
1512010215022841677485962891845,842297629028035258832043172976,1144385785171149766340239654231,1311912131335312359467384139172,1019167753811670123195967272555,822171135042865969534975765194,1116893400779961574632845714952,1119397580429966055956699725126,1575728111990011688968965792383,1253216080391043157357658098475,1528364851969831436161584745399;\
1117207400688005349770051593319,136323127855124589091127243173,525469465218993720301691349236,1541420104724716313153649927070,6080618530917986813323381123,1213422295116872668550302563951,1359989891792888525528443399590,705993953302383365887274290602,1170896976587683453496432801251,1441174594313179193575232901314,146724418856227594587425162492;\
1562333097465420925180289434230,114833493240502019198789568533,1409069736626014114920639449671,1014167663454612943302054977630,1013750243332811546474032505935,93799940861969836960811577221,757890839402748261206702626745,133246446489581122215166682770,11163785947695567272975936344,1191665584532347996629269291250,1147743344555974819357656034677;\
407175442721407697520334376013,998891969915825151323853927242,637686698293826870911892824452,968695766162549119085580015695,212656751983049140361802938225,1397365848629630494941696437727,226270510007307688319612060747,503620948866265429510782863073,305749841143403178642154936462,435908372441204960499404846886,768855030142086306203320498523;\
950330624687932563478260251315,1174602263865818665363678555661,1302816942911026933450554021783,686144634792682256581838493705,1038992755508434505930042532619,84074217286596635471614971543,1293694471707325251604584040486,851593483429190854702198548458,964856889745386691242592117055,169233398601384910159588390323,1218777572337047541754292266426;\
1418487771275230580993912852738,1423466039386390542286873076331,1142514447024965561651245265274,827787424322893674877727799727,1010087525399897826134177230570,930204747254199690660861009316,1497301664657131592174189282932,388759376002473737592111702625,162989441564363433305256891118,296088774960345493015080787090,1311854223260128032366760840533;\
616845434092347103225589039172,1459545427622295217086107080927,206803076359349784698278581582,719224253417032042770946727443,1466077506043140618449147808009,758938829572087982441615366199,794014784467486260839985591844,223267426962102670879692527732,1221200203759117142811095765568,1278913864352152628377702732599,1495467259142675357034299627681;\
1507228789470821509552098526000,1363260060045801979813912290477,1547145382316640181571851808394,104027208102123418472097646216,116515183442653099515448717163,164080956587666818570071019819,974233720866550855881599098010,820986323447004871638524257699,1052312556238467311004085752675,882718676675130046970814583130,1273312829612519491178446893973]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 167 lists. */
