/* Comments begin... 
Coefficient of   x^21 * y^1               = 1
Coefficient of   x^10 * y^2 * z^6         = 1
Coefficient of   x^8 * y^5 * z^5         = -2
Coefficient of   x^6 * y^8 * z^4         = -5
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = 0
Coefficient of   x^1 * z^13               = -3
Coefficient of   y^17 * z^1               = 0

Here is the polynomial we're using this time:

1*x^21*y^1 + 1*x^10*y^2*z^6 + -2*x^8*y^5*z^5 + -5*x^6*y^8*z^4 + -3*x^1*z^13

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Not smooth!
Coefficient of   x^21 * y^1               = 3
Coefficient of   x^10 * y^2 * z^6         = -1
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = 5
Coefficient of   x^4 * y^11 * z^3         = -3
Coefficient of   x^2 * y^14 * z^2         = -2
Coefficient of   x^1 * z^13               = -3
Coefficient of   y^17 * z^1               = -4

Here is the polynomial we're using this time:

3*x^21*y^1 + -1*x^10*y^2*z^6 + 2*x^8*y^5*z^5 + 5*x^6*y^8*z^4 + -3*x^4*y^11*z^3 + -2*x^2*y^14*z^2 + -3*x^1*z^13 + -4*y^17*z^1

Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 163
[10, 2, 5, 0]  	391	7 
[21, 0, 0, 0]  	399	7  <--- 1
[20, 1, 0, 0]  	403	7 
[8, 5, 5, 0]  	422	6 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	12 
[14, 11, 3, 0]  	612	11 
[18, 8, 3, 0]  	619	11 
[11, 0, 14, 0]  	643	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[14, 19, 1, 1]  	734	8 
[8, 26, 0, 1]  	750	7 
[16, 20, 0, 1]  	764	7 
[2, 35, 0, 1]  	843	4 
[3, 20, 11, 1]  	858	4 
[2, 10, 20, 1]  	888	3 
[1, 35, 4, 1]  	948	3 
[12, 22, 0, 29]  	734	6 
[5, 15, 10, 29]  	750	6 
[5, 21, 6, 29]  	764	6 
[4, 18, 9, 29]  	769	5 
[4, 24, 5, 29]  	783	4 
[2, 4, 23, 29]  	843	3 
[2, 6, 22, 29]  	858	3 
[1, 27, 8, 29]  	888	2 
[1, 4, 27, 29]  	948	2 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[714350329910951528246050014388,863509186071425633502408100574,1578820547132120008706028529401,90649662820877104775070759222,818560812930706571788344816721,860207294349159261803514750897,421686118667640924433856673703,1390847084822150552181773933910,872038439584938268034363720199,1393182460361932042156306380252,1405985802818153674066147344014;\
1482321731061951838844910663235,425158328546952999720864833838,1566832812877625916603402006924,504422309257267340147074647836,1029680757585781394060487394204,11983425063817692411344889768,802875215147867687872297065595,125146034558758632110464800995,1150519010271546472802516825785,570575438916383490471709093530,1018691571673837683855251028109;\
635058400043222335380035527076,490155804068141753759929433349,963990907050289725401715618860,451659002855902496605620797919,1039385130024921057778526110963,1150446380227602967166114142983,418926940981671337216259257802,727437907454087368359941986954,737000415905344765209174615751,550417190094778803903831342398,415037859939659927316615112536;\
1491933555134496714592080477036,992595997917329408207738765932,884159220731273755488585581952,203715402613316039562950800648,817491366601821396994374246920,394202494316367164258834020259,514992795334747021288203634625,1500792551646882011560318799809,877638801058461026778338456168,979586686697739925160458452768,102550583786103359100151132329;\
548939984192049301683512082175,1099204703531366027252459809125,1107914835927724416526368167049,84009899310523454049976501494,177118271525363714389694223857,122230101166981882504838405492,1062710129373155479720966313962,844391837850556612817351559012,855347330488569853662765688607,1376273786444316803340866815543,300331637113283128587727159458;\
247952323143274523714443934485,42176503820043440998807748889,926371306116354207336930082075,1528008434157773042745583977741,1090636620495979982723888423438,1381519385809128835716549583558,725094651169792863777457664849,912970340313952604520355584813,988193616350005571464173807680,1529722420583418868489714776635,111226406086295249446891449046;\
679253019525623243789460040874,1210802681808094397201805069292,662411215282275404336726828319,768740212858619167275776557055,435912073253873503895457622124,1300416710010799523985278343193,810405250909245724794592893835,1502886433412140292688439753607,1190533497741552042925096704322,528195716242712593519502603974,1356481838320480564971634233482;\
192697842055814311085118472433,702711487320904681576671756034,1220313404426737884900082671292,716615631613465365215357033814,413007507594810980131574238329,1109815559831783344973923318642,235722105500930745678205304619,262409266853288384050779039713,1333859410868771765653376407453,394583160006316766589683985769,714584063177355928690583385386;\
229989480768299888631255217649,340450606799185724636144002498,81962896368646682887553775537,309785396270726866051150106265,834349747296664306294407636893,881061675504876770114896075731,1404875049633785023618391899183,1535655468582415544046241946376,706308360975350081252603312497,362392370085597609119436890750,920669648575880817022201674805;\
679395573876248140678270620853,1484847310421139719034296633035,333853104066038503436272753519,1385671643237651577905390204516,485721249844491969264849288165,1230265091720430092651752696697,893558004529797334118917286948,993848124812363174232382480812,1270411990289360858169546753184,756988046388677453300011556616,1045387380548447601588324220259;\
659045904024159347012553157923,1327487381479521600483664386501,821942661889963988161638221945,1480884532282153175993809116893,1148239230047128259144154683974,1437185747511010714071564988960,241070040547166848860165736138,1530082640040668027635358677068,832108914728262072932052063437,1303245416945574710424703996043,907204488371440573373667522871]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
