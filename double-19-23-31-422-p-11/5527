/* Comments begin... 
Coefficient of   x^21 * y^1               = 2
Coefficient of   x^10 * y^2 * z^6         = -4
Coefficient of   x^8 * y^5 * z^5         = 0
Coefficient of   x^6 * y^8 * z^4         = -2
Coefficient of   x^4 * y^11 * z^3         = -4
Coefficient of   x^2 * y^14 * z^2         = 0
Coefficient of   x^1 * z^13               = 2
Coefficient of   y^17 * z^1               = 5

Here is the polynomial we're using this time:

2*x^21*y^1 + -4*x^10*y^2*z^6 + -2*x^6*y^8*z^4 + -4*x^4*y^11*z^3 + 2*x^1*z^13 + 5*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 155
[10, 2, 5, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[20, 1, 0, 0]  	403	5 
[6, 8, 4, 0]  	422	4 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[16, 8, 3, 0]  	581	8 
[14, 11, 3, 0]  	612	7 
[11, 0, 14, 0]  	643	9 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	9 
[9, 3, 14, 0]  	674	8 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	8 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	7 
[17, 0, 12, 0]  	695	8 
[8, 5, 14, 0]  	701	7 
[7, 6, 14, 0]  	705	7 
[9, 6, 13, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[8, 22, 2, 0]  	720	8 
[7, 23, 2, 0]  	724	6 
[10, 22, 1, 0]  	727	8 
[9, 23, 1, 0]  	731	7 
[5, 25, 2, 0]  	732	7 
[14, 19, 1, 0]  	734	7 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[16, 19, 0, 0]  	741	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[5, 20, 7, 0]  	772	6 
[19, 18, 0, 0]  	775	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[4, 23, 6, 0]  	791	5 
[3, 32, 0, 0]  	793	5 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[15, 24, 0, 0]  	837	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[16, 17, 1, 1]  	726	7 
[12, 23, 0, 1]  	757	7 
[4, 29, 1, 1]  	774	6 
[3, 12, 16, 1]  	829	5 
[3, 23, 9, 1]  	865	4 
[1, 32, 5, 1]  	910	3 
[0, 31, 7, 1]  	930	2 
[5, 18, 7, 29]  	726	6 
[4, 21, 6, 29]  	745	4 
[3, 15, 12, 29]  	774	5 
[4, 24, 5, 29]  	783	5 
[4, 7, 18, 29]  	795	5 
[3, 10, 17, 29]  	814	4 
[2, 29, 4, 29]  	829	4 
[2, 9, 20, 29]  	865	3 
[1, 1, 28, 29]  	910	2 
[0, 0, 30, 29]  	930	1 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[188948314220114078455963367568,381347235330893056277236730447,1566636565580111344891211616300,137767930398037540077017600895,558707085867512577344240968241,196067547427947391167898234000,1194195246485954650813138405615,1247408145413648567091471930278,1158444087039965770361071617324,210554884939649901252695205574,1376102412858396538472219535605;\
176135417148334125406730083665,1529001949394150890242315515528,1052949847385634773989926450384,1053175433033529108373858002699,853141586260776919240838921536,560433467875095214825852532578,1154143340914926758071699907697,1462747714669341445922442550971,1301899195562040767193421328607,1479212377564071759311598008861,502905381842853390309168519424;\
993476032370296249165198180455,510835071480294069366943322717,508378583910825334758379325126,603610461191602383157205742362,508243776385284072299092776751,590899083322943368303800696644,1084115407249670507940051154342,342601924986390061734523591733,489798372724534100924992660167,396481078164186914638107763109,1049194733482431577195206854890;\
1289641262621639940999343923186,1137274373025578009496808717357,71128856796269321017170464186,851780622554007254068455822228,1215612579928503402557474299330,643030597863632906196187420579,51074070791108485599929424282,1015924212628693616142163981041,964699306972931644313803693958,756947762400236246665255697278,1343495095617023102776650729079;\
36844532718347010477935875512,318606345683168822046587331457,71263390025643444815540955123,1202942806696343947504902701949,1095687609031608489183619881329,914420876568955665694548638886,359542638189033866931872973861,179711793743954731501509514731,990048674315288175336776644452,90199434551187306358980823747,1463623575335918190025727569355;\
1162116908642400273905332143482,225570442634141944146834070277,426239422390715934304117209322,1414872772884002080296224011974,698470265932403100992114789849,846748085204338297528500203581,449631357262803816857304054661,360101452047860659754937182710,783060329553837851900817848184,1077825341373699587890361364917,325732096034455819783372445103;\
906731507675825470576688759189,55076892709565596848507725070,431677181567251716481714149934,882558451639550067683601275910,1289561916211578201911009964541,369131362979856180654197603279,485700558389154668058782004920,156139853542287400134511253069,1421900027065898568649662901249,46324835116173684542107263771,779047387906179822578043448696;\
1495134007535409706818592588889,516465409025882402655862062041,1466242208233570028460506329712,671921790791574662006932870166,1255940767750411341630109731213,628052995824194247380612700546,1334551802842191661015335671140,1330467185216977654240171129704,1528823193930095493292214515537,1190984167198730099075807955435,1280736007787641918982063794859;\
1218247545634603140673462463704,1472100368612934689578452107043,1381850200305764346895554111050,905405302795866162654575758811,1434531299232504660040323664513,735035681435587443974385097467,1222591071448579666188004891901,1440518264730189010793005294793,761554020796548078453267001660,1021659749401022669222883960604,252632842591052623086695735031;\
1426033841879831731953583581090,325485588642757191688196859397,467256691257286086197637828727,1167779661159918542948937031901,532680226888825231916633428242,675835587232020470996720936220,40691318411673592373208461986,499648980805440900780342611230,687983340215185383064703490835,1322232041154743391767201367128,948141605575832637182413771736;\
1527377911254462238891608007631,1284078704648640171468933606751,14358253580383195956823721615,58652853050779341094924036722,409121603541324380935913347377,470113374582119895433375906733,531804056811651904479562961576,1013401724602901405252482550549,794785487514622454922864802460,949722600024268255959996104850,622770164708190063416939921801]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
