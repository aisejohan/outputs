/* Comments begin... 
Coefficient of   x^21 * y^1               = 1
Coefficient of   x^10 * y^2 * z^6         = 3
Coefficient of   x^8 * y^5 * z^5         = 0
Coefficient of   x^6 * y^8 * z^4         = 3
Coefficient of   x^4 * y^11 * z^3         = 1
Coefficient of   x^2 * y^14 * z^2         = 5
Coefficient of   x^1 * z^13               = -5
Coefficient of   y^17 * z^1               = -5

Here is the polynomial we're using this time:

1*x^21*y^1 + 3*x^10*y^2*z^6 + 3*x^6*y^8*z^4 + 1*x^4*y^11*z^3 + 5*x^2*y^14*z^2 + -5*x^1*z^13 + -5*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 157
[10, 2, 5, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[6, 8, 4, 0]  	422	5 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[16, 8, 3, 0]  	581	10 
[14, 11, 3, 0]  	612	9 
[11, 0, 14, 0]  	643	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[8, 5, 14, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[9, 6, 13, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[8, 22, 2, 0]  	720	8 
[7, 23, 2, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[9, 23, 1, 0]  	731	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[14, 19, 1, 1]  	734	8 
[16, 20, 0, 1]  	764	7 
[4, 29, 1, 1]  	774	6 
[4, 23, 7, 1]  	822	5 
[1, 30, 7, 1]  	926	2 
[1, 0, 30, 1]  	949	2 
[12, 22, 0, 29]  	734	5 
[5, 21, 6, 29]  	764	6 
[3, 15, 12, 29]  	774	4 
[4, 24, 5, 29]  	783	5 
[3, 9, 18, 29]  	822	3 
[0, 16, 18, 29]  	926	1 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[1579287928573629068871060441914,195841765682938019980377908279,1285254588565805181913785349958,1139021516892084833496602932335,259692792114604838260440619582,1322953179820798443235898450618,1075803706154944811140355838381,985005197007374221305980546567,1124791387316085655842669165634,1155959770125750882469044094865,21618848889816825437342967558;\
411578434372877970879950496222,192652318933753148600652074668,74953008604244243870028389332,1579599388049310185557606218436,1199250287648851424581284570419,1422827132156605960195583071119,694314161279103299167083020335,1129929159349002592163461218935,1439858691206604359445106678590,571442686393809835016148863313,49061779442958898162448295218;\
1193072219461888786166194009512,389187583133370029246783569493,472740789362826179932039829689,526660458767373872589180268714,925995762546209566744438680808,650530631501091220738936668503,812818501604034808329176876872,762852979130983298812531743840,607672535897171224947200716609,661677850539110990879887829291,350693251766864776437582902889;\
1316914433105797781173946580352,562495006059703527208626117726,1148831940334690321150634822732,123083522796736560429552312769,522210685097707425004776986923,88338820639404263754900041066,804361532124833156456451468505,236877866509017384452987272945,1385036877950366278936446579739,1176883790231544717785236510957,190428610087886705664039716102;\
1061415679822604891951381033518,840601446025860235670790673785,828578694903228239933957967483,999884459575178708885842110029,384747940807693698581707529828,806789380462353916390255107945,644309269555889170980097433445,312278731605911540126356347945,177171001706244149707509655898,394667424856328786997296608696,801403675955657868362407724179;\
253273268506504084140380314945,1054766634554708466967519811416,1136480636981395342014326693680,396707943825512155785770491208,1280773038372390506518435819123,1586228934702031332387580180440,814915343519282075145194761301,274422413609547856674895703742,262493730099322488558062647893,242505672954385860308880809009,723817117631722319625668177688;\
1495525631043761450823734139933,746529326576460159708785997937,950281506399723084928407040032,1009193507650673104624874166432,966033717933870958658046666917,804813308600389729172014836826,1409003724177409066097058980620,849338325260562670961178559710,1033865047620447153879872980524,783961511542436588724974665736,268085682216713408107596214206;\
1449436979914826712739437574565,1108845513284970045677804817250,667491566644609777122427863966,492764150696757067561584440553,666987681135270631195552709117,1007364424002285255325209515428,1531539641748265236493666609206,417034119014287951367132251233,332844991793902371518174795179,1099786172825808007289749058917,412101002728044146667363420394;\
131446295130244357050400661657,495038256436866718092881653278,864011572009246391428470288291,1332661913560347628190747035199,103407234067817585710426951692,1041618315852189599808966044077,669845929945391061916895277447,1513066307048448741388371059730,580300538013621352967357747385,811658624538952438273456621674,1194711549108529764213671987107;\
858518608490718405006441720550,1573032172578627915005000085534,281991130698065714128804407243,263092539727673744768101875222,1261507794758719714340845982436,274055147891024001314343131876,1569246807098481662387177203658,1515583595815555730577491766553,485053236777301505982406058409,1096364318674868971572009317416,582582293794649426196817626871;\
1310802054381543652881066824148,470424068920220405373116838788,774393951427210947805532986862,590533621225392592828363011322,422695868701482785210163127601,294500234613212584030098824206,1008512534286083223966987896269,455631393550034332895945079839,1512801324314074657797319278234,1045300324845408822258090515691,786011737872181728154548568993]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
