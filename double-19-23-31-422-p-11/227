/* Comments begin... 
Coefficient of   x^21 * y^1               = 0
Coefficient of   x^10 * y^2 * z^6         = 4
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = 3
Coefficient of   x^4 * y^11 * z^3         = 2
Coefficient of   x^2 * y^14 * z^2         = 4
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = -1

Here is the polynomial we're using this time:

4*x^10*y^2*z^6 + 2*x^8*y^5*z^5 + 3*x^6*y^8*z^4 + 2*x^4*y^11*z^3 + 4*x^2*y^14*z^2 + -1*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Not smooth!
Coefficient of   x^21 * y^1               = -2
Coefficient of   x^10 * y^2 * z^6         = -3
Coefficient of   x^8 * y^5 * z^5         = 5
Coefficient of   x^6 * y^8 * z^4         = 5
Coefficient of   x^4 * y^11 * z^3         = -1
Coefficient of   x^2 * y^14 * z^2         = 3
Coefficient of   x^1 * z^13               = 3
Coefficient of   y^17 * z^1               = 2

Here is the polynomial we're using this time:

-2*x^21*y^1 + -3*x^10*y^2*z^6 + 5*x^8*y^5*z^5 + 5*x^6*y^8*z^4 + -1*x^4*y^11*z^3 + 3*x^2*y^14*z^2 + 3*x^1*z^13 + 2*y^17*z^1

Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 164
[10, 2, 5, 0]  	391	7 
[21, 0, 0, 0]  	399	7  <--- 1
[20, 1, 0, 0]  	403	7 
[8, 5, 5, 0]  	422	6 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	12 
[14, 11, 3, 0]  	612	11 
[18, 8, 3, 0]  	619	11 
[11, 0, 14, 0]  	643	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[12, 17, 2, 0]  	681	9 
[16, 14, 2, 0]  	688	9 
[15, 0, 13, 0]  	688	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	8 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 17, 10, 0]  	796	6 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[14, 14, 2, 1]  	650	10 
[16, 20, 0, 1]  	764	7 
[5, 21, 7, 1]  	795	6 
[4, 18, 10, 1]  	800	5 
[5, 23, 6, 1]  	810	6 
[4, 23, 7, 1]  	822	5 
[2, 12, 19, 1]  	903	3 
[4, 6, 20, 2]  	834	5 
[3, 23, 8, 28]  	834	4 
[13, 0, 13, 29]  	650	8 
[12, 19, 1, 29]  	696	8 
[4, 7, 17, 29]  	764	5 
[4, 24, 5, 29]  	783	5 
[3, 4, 21, 29]  	800	4 
[3, 9, 18, 29]  	822	3 
[3, 26, 6, 29]  	841	4 
[1, 29, 7, 29]  	903	2 
------
The gap is between 3 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[502522038889594307695028426865,548034211359730545234776379448,1503215347389728245351037207681,1507635034435553065846319831986,93353619395993153697240372984,1467887490862616803936057568753,61818174548092135423727312660,1380530353555024243400231899507,1317650643139106425600447915215,899444767146755622471876534436,1234136313118593307927697668805;\
1064390576446465159740646423740,789076323166399936916230453120,1173988728965070318134126908357,471118299092657450081417567701,157063513092988309493748894722,742098116491107121512172391436,1329572301452836487095154510218,980344333505733625720725378670,824309857262957638871213246969,1216860341767935170265372577670,459008795479846572409990754004;\
1163256482639989094383553055353,1121578059442014192697555730216,372331185612516137057623681195,1216034493418234926733256031292,118982801856663342048956179532,1460081018629811865327921915463,1163238207131441138597087934702,1140593380433999595593453633901,1513335646793794606305011604258,1281835148355296397191265510640,869698059409215603450377963832;\
1407264726222241178190190543099,1332514208936484451742522368729,473771077360342962650842243547,416388115775223633456350087009,1270603748869194595898027110367,1456922410631007473241399458818,1249539485894409147946854358485,1125852415756039029833335789723,249436908124023044059228625405,1239164256273277273278347670673,778189135744035774113361307730;\
315579908010774033430003704916,426618906366582386159330808378,1430012828942133115727755123435,75260253039802801863896815141,97988909219168497717952329312,710183404807669814470975918326,1562091340400349154445025846837,669189141066075515995091641208,129601573680182532133399716632,898238471125635578611659431610,1461565740802911127616274780595;\
1225819531075985274606380028752,1088780670156049683916203789220,1562725873890167717320333438319,363802059050515570161709185054,1486823603511889470679638901895,815829183773044919112453386964,1557807008266220221946787050953,950548447813072592174403286112,1354864936880826140214434431739,429776164743728370180974883478,534737716127215253298652856531;\
308748523932096787142691381343,1228606085626621182336644261352,1177298496346687197359463952093,120893877395799778926153445772,969393187231239614028289165226,1373300941765337552706107921200,1042313760012128127635992930390,997779905378401380771714816121,1281192208060910337148563456773,888667985961177063651481441310,924172758831348279508763702458;\
594183714858324780748705756703,594633039786500769766559590056,938406937529071662852131676416,408486083541458095777155412168,1064768853838644628557157679196,1060079158644460931527711930275,1474150014325777289528033102569,504917470822398572778801165963,235933157687808791473934718256,1000809907048498967314818693121,1579133890077990492441190486271;\
1310769474988356878386912807650,966822213618506234554895568148,807931690100600488296186497647,1233018004608817572943464306002,792551469831352152542782181537,1573444302268975828907138335863,40259064911821602397761253406,567805064810702961792615799536,685399945910429796359133878563,531688793654258494354176011474,7671061391831365154189781251;\
949441895258390631659082469004,175382299890295430950256246817,1532220588340229779466884194557,1209735362663844139395697655010,567954330817918518684490476823,311113210649047290550054035883,481615736527219127186579731780,1352848805522750314466809251614,1498345718723208721147225193981,1429870755491033893412237847633,1166492323588902986180803599059;\
1171953830990822985357357528425,36668117663905134825845361605,827364274060890266323496647849,444722919247888184165902286482,1448378848733596444618581203158,1432999660459431734972266991268,1005559695077482429677538008120,1358493830563697294982354623971,686867982540212098418615744449,213556659071313469111804776447,1065242793182468832497953542749]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
