/* Comments begin... 
Coefficient of   x^21 * y^1               = -5
Coefficient of   x^10 * y^2 * z^6         = -2
Coefficient of   x^8 * y^5 * z^5         = 0
Coefficient of   x^6 * y^8 * z^4         = 1
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = -2
Coefficient of   x^1 * z^13               = 1
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

-5*x^21*y^1 + -2*x^10*y^2*z^6 + 1*x^6*y^8*z^4 + -2*x^2*y^14*z^2 + 1*x^1*z^13 + 3*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 158
[10, 2, 5, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[20, 1, 0, 0]  	403	5 
[6, 8, 4, 0]  	422	4 
[5, 0, 15, 0]  	560	5 
[16, 8, 3, 0]  	581	8 
[12, 14, 2, 0]  	612	7 
[11, 0, 14, 0]  	643	9 
[16, 14, 1, 0]  	657	8 
[9, 3, 14, 0]  	674	8 
[15, 0, 13, 0]  	688	7 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	7 
[9, 19, 3, 0]  	701	6 
[8, 5, 14, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[12, 20, 1, 0]  	719	8 
[7, 23, 2, 0]  	724	7 
[10, 22, 1, 0]  	727	8 
[9, 23, 1, 0]  	731	7 
[7, 22, 3, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	7 
[6, 23, 3, 0]  	736	7 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	5 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[4, 23, 7, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[6, 14, 3, 1]  	529	6 
[9, 6, 13, 1]  	712	8 
[8, 22, 2, 1]  	720	8 
[16, 20, 0, 1]  	764	7 
[3, 14, 13, 1]  	782	6 
[4, 31, 0, 1]  	789	6 
[3, 17, 12, 1]  	820	5 
[2, 31, 4, 1]  	875	5 
[5, 0, 14, 29]  	529	5 
[9, 19, 2, 29]  	670	6 
[6, 23, 1, 29]  	674	5 
[5, 21, 6, 29]  	764	5 
[2, 0, 24, 29]  	782	4 
[4, 24, 5, 29]  	783	4 
[4, 0, 23, 29]  	789	5 
[2, 34, 0, 29]  	820	4 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[370749298031345900037513167484,3905415553508552940266477946,1312842793723930145273816500500,434933606035037472922073979453,521675782580742574762890660319,373571117760831715803872543783,686264916620697675862136543150,1432350317412038637515382763954,1520725257763277996735329616317,416531066340605518535002884774,698789903650857046957636539425;\
395482734185698649687947612435,1336323480084196104901946850598,823373537634132499161386222041,1235339129175077610584307775995,779821299705280964827844417071,252169805542575180972844575751,1070521674740383842457834650473,235132122302044928898999737071,214774689624432221156713335231,223317744443591778944671908552,27777338399852393564477568952;\
1020359817436935105714913757454,1489021166321808758411729000834,93558398724364189610529144602,572122613917223971019283984910,549835073943673527053549999175,585845229413173918961625162585,1571566066968045535395758553661,1394411783620866273153051966035,325422606564157649655232061894,1198854989018561092758767605763,126419309612360174617520448135;\
416371113030528248837509082462,126591032610048181094898588586,734423605306051190071514515751,808730749091291549734893337315,1359291930928564116773167348162,874424587841917793254015668567,797928394367573094137893534043,518452231159373338847637851772,1425835712408741054507307090298,1479432443196964070384429006730,940218953438303899264655151445;\
1444119633376479167286968212004,384421504375149553599738425517,149166769546470081247813541097,1408074594936419976002212660412,717474334233585051900743508223,450954168189415567369313283465,1368984450896258407823657311255,47040433937959401733327127011,1457874655418969553135536748131,1561505243283034303163275618252,974501900600900424933105379377;\
63090998104020965652904401244,158041779674873130327149915980,378584051093119713983873863998,80381250830134998627539324427,1238549679471153340778141657596,71209095797644280270620179310,999403508566032859089217970212,187414053061237956229940996596,1404159336923531014137432129305,1163202538265050450506030383516,157870197156902535161586934061;\
588582087322617205648693538512,209007642909533239520149913512,750440487329505618771860844653,736855309219626323061633323641,237650692191249032530659021285,1180579616623717430480511691023,635720743043436024839803449269,201533882726630146050505934831,1286158430714148269866704635255,172948555506836936091322839397,1013074849400146194323618853622;\
382996531575072874783571305840,947042557395719973893670679653,1118195668000799526473337649098,1438617152486680107003175927957,1435451775296077736182470114927,207299278449236874926914394242,212494099523425934323811701153,1425279054778666253654090379073,1537886362044380437176066510300,2147442628981406393638596320,229403088584528680192596975442;\
1056113419399843629995621889756,103814603890848897619075410173,1309104245998580481465109976502,1549324168834484974549560513956,862392213766780478853884032803,917572549285003035390926183873,685047544181035645204315300481,266087633786955989665616378122,604373804329323152304722823160,779035652312870099117600550019,1508725195754350852474652599935;\
358697847683505420175770400032,469058433773665032051872165703,174414602766137813294911276399,1230288609668112635082130075354,312698386201759330503591552549,415951468547127073877520264841,630883205291151506669353593556,1508275380611392435722539282764,937614935161407896134728579010,1324739537931408411666409680223,487572264302744385052353627474;\
285781901312656446072784287203,1028542665230103985795452843106,1412722090469528530741106074620,338295386729055760797910255534,1408806005617004041558882176025,186186485210811688738784362879,585510907905103218353424624570,47934911532498243084922875620,1491257389253283971159843176229,1487862489488048713083370722781,1040614020995070803267159348120]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
