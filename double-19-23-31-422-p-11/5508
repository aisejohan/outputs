/* Comments begin... 
Coefficient of   x^21 * y^1               = -2
Coefficient of   x^10 * y^2 * z^6         = 3
Coefficient of   x^8 * y^5 * z^5         = 1
Coefficient of   x^6 * y^8 * z^4         = 3
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = -2
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = -4

Here is the polynomial we're using this time:

-2*x^21*y^1 + 3*x^10*y^2*z^6 + 1*x^8*y^5*z^5 + 3*x^6*y^8*z^4 + -2*x^2*y^14*z^2 + -4*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Not smooth!
Coefficient of   x^21 * y^1               = -1
Coefficient of   x^10 * y^2 * z^6         = -4
Coefficient of   x^8 * y^5 * z^5         = 0
Coefficient of   x^6 * y^8 * z^4         = -2
Coefficient of   x^4 * y^11 * z^3         = -1
Coefficient of   x^2 * y^14 * z^2         = 5
Coefficient of   x^1 * z^13               = -4
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

-1*x^21*y^1 + -4*x^10*y^2*z^6 + -2*x^6*y^8*z^4 + -1*x^4*y^11*z^3 + 5*x^2*y^14*z^2 + -4*x^1*z^13 + 3*y^17*z^1

Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 159
[10, 2, 5, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[6, 8, 4, 0]  	422	5 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[16, 8, 3, 0]  	581	10 
[14, 11, 3, 0]  	612	9 
[11, 0, 14, 0]  	643	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[8, 5, 14, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[9, 6, 13, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[8, 22, 2, 0]  	720	8 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[9, 23, 1, 0]  	731	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	8 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	5 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 10, 21, 0]  	900	2 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[7, 23, 2, 1]  	724	7 
[16, 20, 0, 1]  	764	7 
[5, 23, 6, 1]  	810	6 
[4, 20, 9, 1]  	815	5 
[2, 18, 12, 1]  	824	4 
[1, 14, 18, 1]  	899	3 
[2, 12, 19, 1]  	903	3 
[5, 21, 7, 2]  	795	6 
[4, 7, 18, 28]  	795	5 
[5, 26, 1, 29]  	724	6 
[4, 7, 17, 29]  	764	5 
[4, 24, 5, 29]  	783	5 
[3, 6, 20, 29]  	815	4 
[1, 35, 0, 29]  	824	3 
[0, 31, 6, 29]  	899	2 
[1, 29, 7, 29]  	903	2 
------
The gap is between 3 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[1516709475692430537411746765609,177579727546393348296267609953,1370310837992633863153515914478,1427380082020330449265511548379,1416752861485144884273239585721,573615848110871132523762727196,481503148323146648773394709312,877872412508852019406430157787,192068922776204286749717741444,515707664185756725435191050513,507800985294580014467423415026;\
456524588653329233013306739019,1178326602116154881945606106154,1185100499216756670340421034134,1401262923760668870295470095701,769978468408714779890533928015,358907961569677605944018919968,1567867527820545476012433754523,1156789476951067283575048003371,1435009939714943035591728442367,1275098286602473826831496308194,1295231029292149221444544085593;\
531935772587751917627410200147,466365296833843911848291838932,1234321961967579028213413974852,155182245574406135460151163926,514277816786943764133095927707,1510586101162494504152783440684,652749917270252623346560995597,105459463720383253497572374588,1495457596564468327010632207466,1562245622638425300601928319362,52558581976785787789835918618;\
1586136798266461856326217254103,1295116838862704270890356066970,877467269813427095516808148875,1455208998281750084850873963215,585125739474855647533119639259,897330845667024720726619781156,1496627948885098268012877501662,121060903641395698753768120092,696129677380760188595733320155,1490289703480124010454332504426,774414452515304142323090812173;\
1053982518811362176255696244539,1507170517927684195928439161673,237581857669553645175894107815,1433070335361497654030732913489,834857052921017016684619763245,1496977084562260955952262587293,889844481103884733596475740566,606383616972000676107352450815,1162986567894210390495111052105,152585298789922770031438470567,102853425503042541348942591759;\
1336822833044073346367704142009,1126937820097476011044335754359,997946700468941377261990679694,1149605533688179768427422712022,174372335509507128004908241983,800113519123761015658559612615,167535392374053426759920385458,196938753074994847961153141725,1342795117663551703214977130184,1296898796055767086692988989511,334949352342585634381688083717;\
81914036231377359235923730561,92118983534584669633798749700,854566891605800608299348576533,64223695568563191000808213460,390596422017661280040964454627,555831261812182261631573091629,1143427871254121345678582151542,316825270712439385612266792978,1011301762232732233450225616479,325976250789819424360462009839,135829014167723703497571522754;\
1461036749056054584229281522003,775974631867789101444580928515,1500190895566340157654891245666,978291178602229145699059889919,311687530001493509521356215385,277550174165314979993705301573,1256811723396106255409158244150,95009246766398218175593117941,313426889706389647240446798030,855764057505476763737932587881,21791221206582555299486726746;\
1542584692950171852083096474448,767956496920600476525861227810,716974969178911308400723828798,190127983633029742426250555530,611585941462765870543003640546,1043047843719957014046792788422,582465454274724072376494413199,945431955546926805750138452249,621603670188858990076554064735,470630757242723599798402243920,827114190933409330699041852492;\
533573732505343652282791230561,888883397644328493591724329509,382337024774164552580712613957,963574214778123925352354808005,1191751229488698572594212727415,200670716295922898833302711766,66069589866468920643934866327,1303202320605403155383995547515,1290371253766816825614269647267,171612494688258474404724232106,778044218957649079916035420832;\
919809361281558475184970475576,1569273109872320200698703273820,766778574972531360482226686829,534469526362241077874045099243,1089784300055548762775813339186,750521228603038809901870635860,1284338698794573534973132113820,197797906469004104731721887986,1558785994018478428723543773002,440724282049723902118106212841,1456764013343596443283794651666]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
