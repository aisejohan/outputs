/* Comments begin... 
Coefficient of   x^21 * y^1               = 5
Coefficient of   x^10 * y^2 * z^6         = -3
Coefficient of   x^8 * y^5 * z^5         = -1
Coefficient of   x^6 * y^8 * z^4         = -1
Coefficient of   x^4 * y^11 * z^3         = -2
Coefficient of   x^2 * y^14 * z^2         = 0
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = 1

Here is the polynomial we're using this time:

5*x^21*y^1 + -3*x^10*y^2*z^6 + -1*x^8*y^5*z^5 + -1*x^6*y^8*z^4 + -2*x^4*y^11*z^3 + 1*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Not smooth!
Coefficient of   x^21 * y^1               = -5
Coefficient of   x^10 * y^2 * z^6         = 4
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = 0
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = -1
Coefficient of   x^1 * z^13               = -1
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

-5*x^21*y^1 + 4*x^10*y^2*z^6 + 2*x^8*y^5*z^5 + -1*x^2*y^14*z^2 + -1*x^1*z^13 + 3*y^17*z^1

Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 151
[10, 2, 5, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[20, 1, 0, 0]  	403	5 
[8, 5, 5, 0]  	422	4 
[8, 8, 4, 0]  	460	6 
[4, 14, 3, 0]  	491	5 
[18, 5, 4, 0]  	581	8 
[7, 0, 15, 0]  	598	7 
[12, 14, 2, 0]  	612	7 
[14, 14, 1, 0]  	619	8 
[11, 0, 14, 0]  	643	7 
[13, 0, 13, 0]  	650	7 
[9, 3, 14, 0]  	674	8 
[10, 19, 2, 0]  	689	7 
[9, 20, 2, 0]  	693	7 
[12, 19, 1, 0]  	696	7 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[8, 23, 1, 0]  	712	7 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[10, 22, 1, 0]  	727	7 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[12, 22, 0, 0]  	734	7 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[7, 11, 12, 0]  	758	7 
[4, 11, 14, 0]  	763	6 
[6, 0, 21, 0]  	765	6 
[5, 28, 1, 0]  	770	6 
[6, 7, 16, 0]  	771	6 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[7, 28, 0, 0]  	777	6 
[18, 19, 0, 0]  	779	7 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[4, 31, 0, 0]  	789	6 
[6, 4, 19, 0]  	795	6 
[5, 1, 22, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[17, 21, 0, 0]  	806	6 
[5, 8, 17, 0]  	806	6 
[6, 6, 18, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[5, 7, 18, 0]  	814	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[5, 6, 19, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 34, 0, 0]  	839	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[6, 12, 12, 1]  	762	6 
[16, 20, 0, 1]  	764	7 
[6, 29, 0, 1]  	781	6 
[5, 3, 20, 1]  	784	5 
[2, 32, 1, 1]  	805	5 
[5, 0, 23, 1]  	808	5 
[2, 24, 9, 1]  	869	3 
[0, 32, 6, 1]  	922	2 
[3, 32, 0, 2]  	793	5 
[2, 14, 17, 2]  	887	4 
[3, 1, 23, 28]  	793	4 
[1, 31, 5, 28]  	887	3 
[3, 1, 22, 29]  	762	3 
[6, 4, 18, 29]  	764	5 
[5, 7, 17, 29]  	783	5 
[3, 6, 19, 29]  	784	4 
[2, 1, 24, 29]  	805	4 
[1, 10, 20, 29]  	869	2 
[0, 1, 29, 29]  	922	1 
------
The gap is between 3 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^5*z^15
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[219111809269195717349468811825,969003920552725686896161650082,1383228279600047727890242388966,60038231156406236723732875528,310891087418665748832996827592,1575534042072827385958881539518,883823784090507153233118257798,53821927952148950117610382802,1421333666703998979541638161298,707549042511853078725816290322,628193253224087524102804410637;\
338426884095819893058384165580,1017561884054767110063918631385,931985194902724106157009142756,804844926563113508297069278071,602554710309566943585079484941,697689762517188656412857369754,319290673781994398989745049546,108578473829208507529986523613,602804980263419031933299896717,205511039758059037636424239086,1544541965688971903122533318562;\
869419521452928398748411346197,1179401723633041667148816081287,1073878009157640631096720286796,49773450703253206296519095207,1548932387814160238043977467348,1304373561947756700293692074914,1393934821209154561554334753922,117852729776015724982612244311,71739088802091544398321204217,472230938314845817092231001613,137088391977901603225380003280;\
1029872793222703478969791641447,488482693717582406249621162625,1454204694702738651383116938627,395994001180150666337662299286,381723719240555675270311434960,1485485060447641523075789888069,1483161557463602609592172640346,134687491689236349261363359460,1382860504000434028860761172768,293227087409084171167798559366,803724441830752403318803453293;\
665795779632467406740354840564,801118995253507463407529586580,994551960433724777943716740627,1149352943503230939720593493059,1110659991477609203343118963601,1380269899505749056931949596884,1401160517196003774572062946047,777895691094069664474805005339,251232621011503827320127675832,1059281384991290944894136036377,571902537662792564853864933540;\
1368693356554224837649189595101,1258780625684169333057058435710,233478217508735576210607271494,699308704923375883139491388602,640345844072585715072520358891,289599997072378100365354861467,196117591198992125474510838216,1302639498382860180567993138170,142155022774551084529674847316,1209017534060983454023327971541,778135411466754836627476566002;\
336509126424292020221638733015,451541827188709956306771009739,839664905965872243517199374455,746740575375943197684671380894,294034456397432682328062850118,1140306876615539593360153784591,630303026448665017500422087652,390940286144487999664592941335,1283934279790190264351243213195,973278735678633735428314448497,1219269932626827267166548343688;\
13786591539693349768541720752,4821623509040269922973238989,193914087229739296289465859749,137483806956854614710178428803,781991187599225576357108422193,234638640224336444343579434531,131062627797903284699685822881,120688378589976730054224320794,854466481499991820959903480593,327990402046646473706483018371,895667485754575969220946769895;\
280968192126651551706945089929,115506882827817447902917589647,1225955819595503187573806023122,893612658320731540362592596076,995673123340563622143432057936,920334730541361865277021706045,1484078098268852554682572625069,1132338718287685785042231083766,579097055918140210136231419148,518890089423679150580586663194,890430519037779089899390040663;\
1020267916746832611477143879996,1464861862689277473717781405212,442274325489237135446194639774,991297718258649211284527594788,1357179102142673253625796023464,1292767015142075679107126577440,455850046499489601885699101053,898369874375820286193893017208,583720781247197348538852316666,466001949659046674123787999308,438819145232318246714886154730;\
1193477499311285880126078828148,193740556053521508101847131511,1383046874489435755095646614638,298546716573730758019132525510,574804318614055478073993945099,992596738572032428009008163814,92563635560690825639560721060,1008040552583893745232379557439,870484283669030889231291464524,260242627370280541205646439078,1559279441390723744601879609398]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
