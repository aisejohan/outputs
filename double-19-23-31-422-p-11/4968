/* Comments begin... 
Coefficient of   x^21 * y^1               = -4
Coefficient of   x^10 * y^2 * z^6         = -3
Coefficient of   x^8 * y^5 * z^5         = -2
Coefficient of   x^6 * y^8 * z^4         = 2
Coefficient of   x^4 * y^11 * z^3         = 2
Coefficient of   x^2 * y^14 * z^2         = 4
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = -1

Here is the polynomial we're using this time:

-4*x^21*y^1 + -3*x^10*y^2*z^6 + -2*x^8*y^5*z^5 + 2*x^6*y^8*z^4 + 2*x^4*y^11*z^3 + 4*x^2*y^14*z^2 + -1*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Not smooth!
Coefficient of   x^21 * y^1               = -5
Coefficient of   x^10 * y^2 * z^6         = -3
Coefficient of   x^8 * y^5 * z^5         = 0
Coefficient of   x^6 * y^8 * z^4         = 2
Coefficient of   x^4 * y^11 * z^3         = 3
Coefficient of   x^2 * y^14 * z^2         = 4
Coefficient of   x^1 * z^13               = -2
Coefficient of   y^17 * z^1               = 4

Here is the polynomial we're using this time:

-5*x^21*y^1 + -3*x^10*y^2*z^6 + 2*x^6*y^8*z^4 + 3*x^4*y^11*z^3 + 4*x^2*y^14*z^2 + -2*x^1*z^13 + 4*y^17*z^1

Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 162
[10, 2, 5, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[6, 8, 4, 0]  	422	5 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[16, 8, 3, 0]  	581	10 
[14, 11, 3, 0]  	612	9 
[11, 0, 14, 0]  	643	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[12, 17, 2, 0]  	681	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[8, 5, 14, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[9, 6, 13, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[8, 22, 2, 0]  	720	8 
[7, 23, 2, 0]  	724	7 
[17, 0, 13, 0]  	726	8 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[9, 23, 1, 0]  	731	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	8 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[5, 17, 9, 0]  	765	6 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[4, 20, 8, 0]  	784	5 
[3, 29, 2, 0]  	786	5 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 7, 19, 0]  	826	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 35, 4, 0]  	948	3 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[15, 0, 13, 1]  	688	9 
[16, 20, 0, 1]  	764	7 
[4, 23, 7, 1]  	822	5 
[2, 18, 12, 1]  	824	4 
[4, 3, 22, 1]  	827	5 
[3, 11, 17, 1]  	837	5 
[3, 6, 21, 1]  	846	4 
[3, 26, 7, 1]  	872	4 
[2, 10, 20, 1]  	888	3 
[1, 15, 17, 1]  	891	3 
[1, 30, 7, 1]  	926	2 
[1, 24, 12, 1]  	943	3 
[1, 0, 30, 1]  	949	2 
[0, 38, 4, 4]  	998	2 
[0, 7, 27, 26]  	998	1 
[14, 17, 1, 29]  	688	8 
[5, 21, 6, 29]  	764	5 
[4, 24, 5, 29]  	783	5 
[3, 9, 18, 29]  	822	4 
[1, 35, 0, 29]  	824	2 
[3, 20, 10, 29]  	827	4 
[2, 28, 5, 29]  	837	4 
[2, 23, 9, 29]  	846	3 
[2, 12, 18, 29]  	872	3 
[1, 27, 8, 29]  	888	2 
[0, 32, 5, 29]  	891	2 
[0, 16, 18, 29]  	926	1 
[0, 41, 0, 29]  	943	2 
------
The gap is between 5 and 25.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[1044925292998344455930543940408,585294539724432482182251222387,22116827626676386633260492233,270808660377154260110703132322,400682283811983042111089381259,352464198196153419725119576069,110627901550712144068047310040,1348087661720644524246159077606,912908760713771369750404079724,327297784254989329521024534645,373888253375266922201942140867;\
1309857327934070881015732606525,89118028449159206157374140437,305131804165450103222234523758,519149951537438594666879080385,1170124510419447369976429514252,2113778926579288911677285375,488187839588418938151967379354,1310900299808843305171808345279,1117310093234931161648088473038,872758692819990417699861683828,351663527640866320751488627901;\
538056336487936691561178809345,522521294966849350369612878399,149644940389049527074377704281,1311338661285282111456535705496,852349638532243403132801438097,140992880719220204989097335057,361490791191984186773747255010,1559185117772325729512355300695,303979502684911078706045258476,1583912291676636993026927715139,1167167354944647688693862469592;\
416697951790654819856972522498,834646977504024105148935039655,1463871371160755300542346360136,141155958860788323196044306391,28625592996822267726575588788,429754858505655374747573584055,64784961122720252663456423733,1575923684249011222620553315180,98941414215852724781914049753,476601033762286068626292866553,72720743502474259433450358501;\
689720508170747544247597052080,1480143509983503052187477669859,124648753349101379062851636796,832209235772169896311751108963,39188055909187299083411877952,372954794854242747820164988728,1271902368531548252550848177491,177901824629376474753000490902,740256972829908002550525712609,90161209285240435278668273080,574330547988264966882436617197;\
832885589141398789440912682635,418999907234802724373931089056,848868809022490218239824972179,208545804437803065859132641475,1384542279211006367320698615159,1138518813631880038209501595605,24928109678696087929089101979,100030645787527842686601080922,1030216212495541921653074074474,1003561868603383070120069812530,1525989509123081442907159753874;\
448625241825300318301097650968,585634503971038687532840019331,47415272853745312003820781071,218278060961479848933892326313,322065816921741939904294871159,762404815344686138797194200728,663577683459981162024000663166,510413360788720965802456269886,23150630484439829573643473241,1534595224257165711006623795362,236005612809630135501050115160;\
513093862959342255412547558462,1498757816390273581570658665894,1168981841055883474945051304863,501145033155253988073368037583,946770486715570801195931364774,1565471272803434244349904865975,389080928240841680693869768353,633230771644332613850982558983,1368885554478373514816217327530,1309639157144454831642840675101,599839147058015082381809440168;\
348334828704004025673105431761,1438812154298519236044954776621,27592357085508556896465654074,1150643681618111454432750481390,1424106757856740440063496256275,299403574254354817249849728376,1364901152742160623062426621833,1089578921976149777104624389940,931923091305563117108218477530,934767758601738483002630430568,1562062685398180865209470421602;\
1236365488548121977245983768953,1037325207752400437731943323583,483800831553654087457084733899,1004979006570626592932262979715,839821573493432590758271988051,637100812324816514841743522803,412139186738737075548129868174,899192183665669407390448489599,797562062226632218109409777401,229905178946242785125091401868,1258075029658261625556091474711;\
390669327395987702806434330773,501245246444675260158760460893,988035618150572403769949711226,234554624743844452488859394526,1275689841252871067799597857101,1381950451442317354033360653399,28706781305304744094095569498,665579955577533096624798174252,859525700907460142544156687442,392338458072717319807022661645,1160852732462425643947607809024]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
