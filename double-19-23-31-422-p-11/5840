/* Comments begin... 
Coefficient of   x^21 * y^1               = 4
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = -5
Coefficient of   x^6 * y^8 * z^4         = -2
Coefficient of   x^4 * y^11 * z^3         = -4
Coefficient of   x^2 * y^14 * z^2         = 1
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = 4

Here is the polynomial we're using this time:

4*x^21*y^1 + -5*x^8*y^5*z^5 + -2*x^6*y^8*z^4 + -4*x^4*y^11*z^3 + 1*x^2*y^14*z^2 + 4*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^21 * y^1               = 5
Coefficient of   x^10 * y^2 * z^6         = 3
Coefficient of   x^8 * y^5 * z^5         = 4
Coefficient of   x^6 * y^8 * z^4         = 5
Coefficient of   x^4 * y^11 * z^3         = -4
Coefficient of   x^2 * y^14 * z^2         = 1
Coefficient of   x^1 * z^13               = 1
Coefficient of   y^17 * z^1               = -1

Here is the polynomial we're using this time:

5*x^21*y^1 + 3*x^10*y^2*z^6 + 4*x^8*y^5*z^5 + 5*x^6*y^8*z^4 + -4*x^4*y^11*z^3 + 1*x^2*y^14*z^2 + 1*x^1*z^13 + -1*y^17*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 173
[10, 2, 5, 0]  	391	7 
[21, 0, 0, 0]  	399	7  <--- 1
[20, 1, 0, 0]  	403	7 
[8, 5, 5, 0]  	422	6 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	12 
[14, 11, 3, 0]  	612	11 
[18, 8, 3, 0]  	619	11 
[11, 0, 14, 0]  	643	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	8 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[3, 32, 0, 0]  	793	5 
[5, 17, 10, 0]  	796	6 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	5 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[4, 9, 18, 0]  	841	5 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[2, 29, 5, 0]  	860	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[5, 9, 14, 1]  	736	7 
[16, 20, 0, 1]  	764	7 
[4, 29, 1, 1]  	774	6 
[4, 31, 0, 1]  	789	6 
[5, 21, 7, 1]  	795	6 
[4, 18, 10, 1]  	800	5 
[5, 23, 6, 1]  	810	6 
[2, 18, 12, 1]  	824	4 
[3, 3, 23, 1]  	839	4 
[2, 21, 11, 1]  	862	3 
[2, 24, 9, 1]  	869	3 
[2, 23, 10, 1]  	877	3 
[2, 26, 8, 1]  	884	3 
[1, 24, 12, 1]  	943	3 
[1, 35, 4, 1]  	948	3 
[1, 21, 15, 1]  	967	3 
[2, 35, 0, 2]  	843	4 
[3, 20, 11, 2]  	858	4 
[3, 27, 6, 3]  	864	4 
[2, 13, 17, 27]  	864	3 
[2, 4, 23, 28]  	843	3 
[2, 6, 22, 28]  	858	3 
[4, 26, 2, 29]  	736	6 
[4, 7, 17, 29]  	764	5 
[3, 15, 12, 29]  	774	5 
[4, 24, 5, 29]  	783	5 
[4, 0, 23, 29]  	789	5 
[3, 4, 21, 29]  	800	4 
[1, 4, 23, 29]  	824	2 
[1, 6, 22, 29]  	839	2 
[1, 10, 20, 29]  	869	2 
[1, 9, 21, 29]  	877	2 
[1, 12, 19, 29]  	884	2 
[0, 27, 9, 29]  	900	1 
[0, 29, 8, 29]  	915	1 
[0, 41, 0, 29]  	943	2 
[0, 38, 3, 29]  	967	2 
[0, 10, 26, 29]  	1036	1 
------
The gap is between 4 and 26.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[706916160354638951892138641323,814474346286023737294896569303,1145751885124346746124527075784,692852558403447454297395930248,1531274216663220456840564328881,201835885526913252367383561623,1015353185130448549972488888151,1231688923217423053271623539167,353946885585909104782397552888,434185240096417220427523702239,1455032574420083957847731832144;\
1452605956809858148485258397195,330289906583638804128750566518,110023874766324725156610197663,162046769688584735577735567334,334359858275172665868365199327,633687682888027792187527149907,1193271073999126762319338783927,1087824161808210297854040940964,6357447688149106207841946544,561131216326268662965863794129,495638818185603704709758793638;\
1469547455825657122723229891159,283583731156488186516186323506,948176768446123921485856823588,492391809308349418788485307142,339566877648061861063844608833,981619176062944917225655583183,605483999260381804715167144855,339166030006934500342425191310,1040685071272147567659146631493,401482654680787682165531934357,395679963055830156193226731643;\
74665945513520243608036767319,1390379174160850826842238471324,891841207711830472926976951104,1316456048812437716977367107050,625612905168533686885514941941,125623252244059724849109334073,47448557066951574304162996329,696418089091686181724396459028,21011989526678665244109032664,1445959414540027164610384927826,382506985464239995135663099532;\
529423997426125536554136157301,685291070406469059457950268364,737971122984115442804135637456,1488002331714919466679037304643,494212722371019651665162459688,1266496620833518840921218767154,1371117829074863114092347500550,1418338094087295776980772469634,486484367221054751680711128186,1398600279263905820247450517025,589205310101005580082985670555;\
1400575244860110354968963702069,54711044756860679568150597142,1070986070661191531788621550146,965452816884010572167169522029,348683674280679081941650654447,1022894012161322756307412848277,1246114374976635111864140353613,843082711258891546347339603223,211663398945499694897672853346,390899517347002126640095218597,696716309584359381534250835725;\
308182775138197561286175690191,274397045387334903550530303478,1126264207490570448208546476425,718442429335487096714872675200,1383003068407187704970026152454,1548656907368968781352792048412,740263793014736958423097388065,463596009180167711548007957507,215263402439957868838615423694,77286014857971680456045301402,1390435998618552513159716332071;\
722549477420663237691432053758,1264340678531608180769709246279,754249092846153325601721938235,1330339883298665182173070596173,367468716175247685065976476788,1341572266042479183852069369197,809318248407592377084033849248,1004690746375902666972496879967,505132310546777045104606153201,1064987068425644988919823091685,748839561786333645290348332526;\
1215352758628083722328602438514,119324669027058802496267978834,1235771823734855930256795627142,1557724740548044509694660710589,1288269843580319619051233833467,762237851235247463910844071842,1131169098213995099143268629377,1002855199029163160060177480144,341818650595999597569576784427,1353752267240731655683163759355,825780640088043930938800126392;\
69658428083937166531054669407,1506283590238725461084067405837,964722648554808818580910321242,821219429978733403709640661332,946368125453067151894734299581,403702996840664868160734234633,254605429667165293149373145920,1019476891167835655691313538163,1205552415815668818436913371426,1393169303521463824636213445017,1162802765882630652761754467563;\
666442992043740967456989622456,855642003706485685744306289259,636930611858941237685307146700,1245788499885577297232603001102,1329606202499431051481270145403,1058180247631028227864971133563,717198621668872000819812482381,837945892906899787714756906601,54205383485948975933768448146,1277588597393246654389224077331,1278626674992477343335945667239]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 167 lists. */
