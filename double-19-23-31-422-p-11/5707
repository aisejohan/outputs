/* Comments begin... 
Coefficient of   x^21 * y^1               = 0
Coefficient of   x^10 * y^2 * z^6         = -4
Coefficient of   x^8 * y^5 * z^5         = 4
Coefficient of   x^6 * y^8 * z^4         = 5
Coefficient of   x^4 * y^11 * z^3         = -5
Coefficient of   x^2 * y^14 * z^2         = 3
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = -5

Here is the polynomial we're using this time:

-4*x^10*y^2*z^6 + 4*x^8*y^5*z^5 + 5*x^6*y^8*z^4 + -5*x^4*y^11*z^3 + 3*x^2*y^14*z^2 + -5*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Not smooth!
Coefficient of   x^21 * y^1               = 3
Coefficient of   x^10 * y^2 * z^6         = -4
Coefficient of   x^8 * y^5 * z^5         = 5
Coefficient of   x^6 * y^8 * z^4         = 2
Coefficient of   x^4 * y^11 * z^3         = 4
Coefficient of   x^2 * y^14 * z^2         = -4
Coefficient of   x^1 * z^13               = -4
Coefficient of   y^17 * z^1               = 2

Here is the polynomial we're using this time:

3*x^21*y^1 + -4*x^10*y^2*z^6 + 5*x^8*y^5*z^5 + 2*x^6*y^8*z^4 + 4*x^4*y^11*z^3 + -4*x^2*y^14*z^2 + -4*x^1*z^13 + 2*y^17*z^1

Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 163
[10, 2, 5, 0]  	391	7 
[21, 0, 0, 0]  	399	7  <--- 1
[20, 1, 0, 0]  	403	7 
[8, 5, 5, 0]  	422	6 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	12 
[14, 11, 3, 0]  	612	11 
[18, 8, 3, 0]  	619	11 
[11, 0, 14, 0]  	643	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[12, 17, 2, 0]  	681	9 
[16, 14, 2, 0]  	688	9 
[15, 0, 13, 0]  	688	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	8 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[14, 14, 2, 1]  	650	10 
[16, 20, 0, 1]  	764	7 
[4, 29, 1, 1]  	774	6 
[3, 21, 10, 1]  	850	4 
[3, 24, 8, 1]  	857	4 
[2, 31, 4, 1]  	875	5 
[13, 0, 13, 29]  	650	9 
[12, 19, 1, 29]  	696	8 
[5, 21, 6, 29]  	764	6 
[3, 15, 12, 29]  	774	5 
[4, 24, 5, 29]  	783	5 
[2, 7, 21, 29]  	850	3 
[2, 10, 19, 29]  	857	3 
[2, 0, 27, 29]  	875	4 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[776574619052649707404580615298,1239685196573302968824400710123,1342552277362546394444383344416,1150939795366218823488950737365,1553491481965569361647669715247,1090668640272735305121894738503,191399788282974808717777517294,103426660975618387842051019249,1370625724231319383107514452988,40920742376608116873569663043,1190089459242156920599535574235;\
417312619667717306014844835040,656889127381044048222092090141,706818095989591601761581517274,909124396047325762796052654797,1114066348666263177467787203336,448790207423724659573482202713,717260414689194555425728354829,242994229475343022127714028370,1495566857507764879522104721125,1273307084849046259694631682524,616271472463399221656324210051;\
1571319542962445890812434719648,618469785263474332507383624924,1177832252399529665332329092322,1538103396389823079215587544136,1011400961954558569334851599260,1411800404694564611271415709432,680413574287590377708807188669,408200903399890082259280502604,1049099528572038039951067710409,138947156192678039811242622699,1447338286689802537912017920190;\
1119922678270705157556738794695,928345375736630024770282180336,206277269419445433943502532233,1249981529701564291397054646357,1319356613511663719533450516321,754300357944917139322007632899,1434597886173466293821301950399,774311224188479991949164627761,861132278786788616053685278523,704323331108983053359813927412,1012236415950061618880933987002;\
1167481868706666881410069523217,941237374556902368568406211292,1158028395086210238657669643717,1018818687098164695312250415504,559800258149925169518633870818,1500512511796749655805044851671,116621988194526759873317012173,263628546847085912942212214166,1466106213085689443229040417987,801990965658236858961970252784,367096335715912996228200235851;\
1214905587115883501544542129710,855105334091115834715354830702,718536150665152557099576051689,1413689717434398053208487014768,111855730798828007899709023629,895699908362354459317614799611,1284195131189136797235063966980,903123452907435007860530115373,1491522176160442561732104438920,253367905485776026028672740503,469461648001981043502325040963;\
43865872988336025366264667074,913877897137142288997872250859,1443042066512496167606951925714,1336517340867367252248384273379,1416407258373332726170335864528,1490172428909440712669838528616,758638831223777990864205742618,448010550800809500650667020214,389809049624594223860967722233,695562034956283542188557161460,876835672182883334896150057794;\
682295966676432933732707630676,1575581259226433302141324325052,1097186660651017649409893221063,1136994045761082734533518984290,86245962901446528643094816008,240869242151061154736290213996,905348679565617578086740989011,227314464164269321146028927403,920328618788375347525971120443,1385583863943741568382672442761,1314748577383848633258036795639;\
1305408518367449204512726617591,747227827023905426065278734835,719729580829982567996399563350,569079753857605385080565789041,1328792761305445538319510174629,180271662584605304819133815656,882470366238404787509799080992,912292879728983933138421501016,170634990636113384607297067436,1229093214032184207105402128092,282503837975001612270827476698;\
707943806744802547405409043836,386145938678743030284934827532,1488437173444201253640096219682,571822187767581990026370629728,1580061854366600175726950997862,1434151928433731979632107593217,640270820375802720444887591847,986194529382177282388210511709,1503366441476068874501138369522,581691268825142679026533795613,912899738289740895002010662774;\
698109233366501593917053966670,261137231123669404710653023251,90715377091713091130991216536,550581284751798168453907210031,338802090230795187111432398202,958789925855826442175305676685,909406389073719565806228898689,449359565494711964642212931433,228904198544932636306808430280,1160981287956711739270884975635,756470034158798322301093536513]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
