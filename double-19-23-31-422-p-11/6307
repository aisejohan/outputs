/* Comments begin... 
Coefficient of   x^21 * y^1               = 2
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 3
Coefficient of   x^6 * y^8 * z^4         = -1
Coefficient of   x^4 * y^11 * z^3         = -4
Coefficient of   x^2 * y^14 * z^2         = -5
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

2*x^21*y^1 + 3*x^8*y^5*z^5 + -1*x^6*y^8*z^4 + -4*x^4*y^11*z^3 + -5*x^2*y^14*z^2 + 3*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^21 * y^1               = 5
Coefficient of   x^10 * y^2 * z^6         = 4
Coefficient of   x^8 * y^5 * z^5         = -2
Coefficient of   x^6 * y^8 * z^4         = 1
Coefficient of   x^4 * y^11 * z^3         = 1
Coefficient of   x^2 * y^14 * z^2         = 0
Coefficient of   x^1 * z^13               = 2
Coefficient of   y^17 * z^1               = 4

Here is the polynomial we're using this time:

5*x^21*y^1 + 4*x^10*y^2*z^6 + -2*x^8*y^5*z^5 + 1*x^6*y^8*z^4 + 1*x^4*y^11*z^3 + 2*x^1*z^13 + 4*y^17*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 160
[10, 2, 5, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[8, 5, 5, 0]  	422	5 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	10 
[14, 11, 3, 0]  	612	10 
[18, 8, 3, 0]  	619	10 
[11, 0, 14, 0]  	643	9 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	9 
[9, 3, 14, 0]  	674	8 
[15, 0, 13, 0]  	688	8 
[10, 19, 2, 0]  	689	9 
[17, 0, 12, 0]  	695	8 
[7, 22, 2, 0]  	701	7 
[7, 6, 14, 0]  	705	7 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	6 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[14, 19, 1, 0]  	734	7 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[16, 19, 0, 0]  	741	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[19, 18, 0, 0]  	775	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[4, 31, 0, 0]  	789	6 
[4, 23, 6, 0]  	791	5 
[3, 32, 0, 0]  	793	5 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[4, 20, 9, 0]  	815	5 
[3, 17, 12, 0]  	820	5 
[3, 12, 16, 0]  	829	5 
[4, 10, 17, 0]  	833	5 
[15, 24, 0, 0]  	837	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[12, 17, 2, 1]  	681	9 
[9, 20, 2, 1]  	693	7 
[16, 17, 1, 1]  	726	6 
[12, 23, 0, 1]  	757	7 
[5, 20, 7, 1]  	772	6 
[4, 29, 1, 1]  	774	6 
[5, 18, 9, 1]  	788	6 
[4, 4, 21, 1]  	819	5 
[2, 18, 12, 1]  	824	4 
[4, 7, 19, 1]  	826	5 
[4, 3, 22, 1]  	827	5 
[4, 6, 20, 1]  	834	5 
[4, 9, 18, 1]  	841	5 
[2, 7, 22, 1]  	881	3 
[2, 9, 21, 1]  	896	3 
[2, 12, 19, 1]  	903	3 
[3, 4, 22, 2]  	831	4 
[2, 21, 10, 28]  	831	3 
[10, 20, 1, 29]  	681	6 
[7, 23, 1, 29]  	693	5 
[3, 21, 6, 29]  	726	4 
[3, 15, 12, 29]  	774	5 
[4, 24, 5, 29]  	783	4 
[4, 7, 18, 29]  	795	5 
[3, 10, 17, 29]  	814	4 
[1, 35, 0, 29]  	824	3 
[3, 20, 10, 29]  	827	4 
[1, 24, 9, 29]  	850	2 
[1, 29, 7, 29]  	903	2 
------
The gap is between 3 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[816314565640831734120097025467,319415613516738216425711156615,1517104534426913356285958387211,278761300469807842347929244812,152404568276737010125875249310,1560006761147477866966762561872,528449506112326915644860644829,508388079811387126947846675810,781232959453450011482864544754,495974435436813030209877078714,172997366376843821016692327763;\
695055705998198375386053937249,1068991116099296093136248092648,1035870263482254049209484101507,38600735681918757986510129610,574547616242498445737458247287,169593209571090539618349035807,1392924178924823499026020843422,735116880194279121145616943780,547163770936741920084491667057,1022517852994180797733975968296,346773149436432134973536676851;\
1063830646661804822622401276147,1173323239247109193901624865507,665417622792104809816777136756,231188283133948555240736775568,1225585916201895871492206130904,960967087393375166645166117503,101860306349089979306329499214,407636213895045441511289414374,318005208315022258535284392668,1326932395884031929656450742406,902448779807292092273784374159;\
231403730156042881473589230503,1561784913614978303906493010997,575094700391528786553847406835,1366768546622089220378503985019,454456863833869854193055981887,1546308443116423570659315028646,1319608910242956730229211388152,289993822632210423028838867749,117157010650404865448442240887,88265640684080572595399639980,409509257942220985546405170796;\
697889649893358366532713914248,1203412096340168826974406617889,1313038863537500506362172538555,1565444343266611471165494685946,861494760504691352638086248112,244826958469498558668721615838,966132863936578806540739909429,682699636411078361761779216519,452306518537254108668352247418,317451883400224318313414181280,49166313664048624399958216835;\
187090661330508844358317763679,119160565953324036362637402394,657823018751820434851080418428,945437419416807533020295574160,1106586302259630866543585306932,714878889537983962745674633979,979732258506510461662071033133,1314785493625750350599802293711,1261566476800037205485968667937,557105213085395226474948945835,101053712066033830679943683734;\
1146842317424732229779600795981,870531502581609720040627781463,1095271910652120166150043719016,657070877353267741874233076023,1409822158497269735239095528212,228197162933364905326531298088,778748580962284814678909689027,1059583882152057538864874774169,207437292096518059340466349263,240322618118889216519960318165,598155910558659927188763824831;\
133189040186683380059285436079,137341907380435934138755646728,843507508520556102983119864032,745606517658688610493483175690,1527539577464441721789153464139,874827214381794877012295396229,6578723156667483372091774475,273174438875333490253990193699,1361315649071678237124959359808,1446367790200142792413868491395,1202199320966297627002446515802;\
660867493016688781521475986275,322954200234871778963312121140,701948987149258194112387131372,476222200851657867259106852717,635186360848247672005860867725,1065022346234704522014746863082,408820380233093882553704136790,1465921331348377328512422968677,756522344193812123221252473537,572178209185821282438370589525,712166682919184122204607047367;\
593112222587281159268039732194,1353092442449112763818418607661,1330161248741899763130315137885,435604664364386100671283143123,482373075834092226503087920431,1032120079234659055498775098709,321824067992332059631574070996,1221782440734228716169777192407,431705505941556535619504837098,582433741256373544995515755994,633536199519686550508597461032;\
946343884783552739024599941316,564633678465944989770869387897,1339105220569945329703702785545,398402340439215917048571936642,587296733565913500683572207046,953955445632934750750577724397,120397345830049275199343688051,1541935711286871656071580625900,358925857848694671913659918604,799772434986422688512890731453,1019437402607996995352441399094]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
