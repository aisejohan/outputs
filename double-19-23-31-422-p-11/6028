/* Comments begin... 
Coefficient of   x^21 * y^1               = 4
Coefficient of   x^10 * y^2 * z^6         = 1
Coefficient of   x^8 * y^5 * z^5         = -1
Coefficient of   x^6 * y^8 * z^4         = -4
Coefficient of   x^4 * y^11 * z^3         = -3
Coefficient of   x^2 * y^14 * z^2         = 2
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

4*x^21*y^1 + 1*x^10*y^2*z^6 + -1*x^8*y^5*z^5 + -4*x^6*y^8*z^4 + -3*x^4*y^11*z^3 + 2*x^2*y^14*z^2 + 3*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Not smooth!
Coefficient of   x^21 * y^1               = 2
Coefficient of   x^10 * y^2 * z^6         = -1
Coefficient of   x^8 * y^5 * z^5         = 0
Coefficient of   x^6 * y^8 * z^4         = 0
Coefficient of   x^4 * y^11 * z^3         = 5
Coefficient of   x^2 * y^14 * z^2         = 2
Coefficient of   x^1 * z^13               = 2
Coefficient of   y^17 * z^1               = -3

Here is the polynomial we're using this time:

2*x^21*y^1 + -1*x^10*y^2*z^6 + 5*x^4*y^11*z^3 + 2*x^2*y^14*z^2 + 2*x^1*z^13 + -3*y^17*z^1

Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
The final length of G is 151
[10, 2, 5, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[20, 1, 0, 0]  	403	5 
[4, 11, 3, 0]  	422	4 
[14, 11, 2, 0]  	581	8 
[7, 0, 15, 0]  	598	7 
[12, 14, 2, 0]  	612	7 
[11, 0, 14, 0]  	643	7 
[13, 0, 13, 0]  	650	8 
[9, 3, 14, 0]  	674	9 
[10, 19, 2, 0]  	689	7 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[12, 19, 1, 0]  	696	8 
[8, 5, 14, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[9, 6, 13, 0]  	712	8 
[8, 22, 2, 0]  	720	8 
[7, 23, 2, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	7 
[9, 23, 1, 0]  	731	7 
[6, 8, 14, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[5, 9, 14, 0]  	736	7 
[8, 8, 13, 0]  	739	7 
[7, 9, 13, 0]  	743	7 
[9, 9, 12, 0]  	750	7 
[6, 25, 2, 0]  	751	7 
[5, 26, 2, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[8, 25, 1, 0]  	758	7 
[7, 26, 1, 0]  	762	6 
[10, 25, 0, 0]  	765	7 
[9, 26, 0, 0]  	769	6 
[5, 28, 1, 0]  	770	6 
[6, 7, 16, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[7, 28, 0, 0]  	777	6 
[18, 19, 0, 0]  	779	7 
[6, 29, 0, 0]  	781	6 
[4, 28, 2, 0]  	782	4 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[6, 1, 21, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[6, 4, 19, 0]  	795	6 
[6, 0, 22, 0]  	796	6 
[5, 1, 22, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[6, 3, 20, 0]  	803	6 
[17, 21, 0, 0]  	806	6 
[5, 8, 17, 0]  	806	6 
[5, 4, 20, 0]  	807	5 
[5, 0, 23, 0]  	808	5 
[6, 6, 18, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[5, 7, 18, 0]  	814	5 
[5, 3, 21, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[5, 6, 19, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 21, 10, 0]  	850	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[16, 20, 0, 1]  	764	7 
[2, 32, 1, 1]  	805	5 
[3, 6, 21, 1]  	846	4 
[3, 9, 19, 1]  	853	4 
[2, 12, 19, 1]  	903	3 
[6, 4, 18, 29]  	764	6 
[5, 7, 17, 29]  	783	5 
[2, 1, 24, 29]  	805	4 
[2, 23, 9, 29]  	846	3 
[2, 26, 7, 29]  	853	3 
[1, 29, 7, 29]  	903	2 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^5*z^15
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[69544592373995635223920491625,345947724937611553357493109563,1066317973093132283469503681833,238866788017280104064316361714,717729970137341989010301555085,1046495994664148353844475873873,65567523423039856952056457420,873598587377726400859074026269,742113983493293767892979189406,1534153257803521281765593754538,890603538937524394850670790636;\
512650725970526413006506593863,615556977237689603561284839113,697246764739066166858999099088,698295242831847255529932024775,1346569215808005255238339700137,223963876263460619549494805684,148264100287336799145343464974,654877414956149013000015159461,1277089777722331001672246663011,1410493165410337650964639541675,187839927597378859316497427829;\
1528836963480073590828675783392,100740851397453113729345377968,101365734034315117497681206863,1356610406545315822330563446170,617281780917835781510310458471,466096319066754891083725798565,875846907580837574741307698497,1303435405985402256193336830791,1001826270279367408614112668503,1001582267389563552956548586455,1220044270509880768622892967371;\
440622724289797804965854857696,716610536708364161634339055450,261317203797955085980734679503,930490884715437908546582029032,1525921632981359251016796898294,517915697086895257177813535662,1434810205365159527599347181573,577080367349159001306987427881,1576209911481276335679418479476,456142242133392540420672455181,616736250159126182977002449580;\
89791366060953012739447571889,853519376967847029972091534597,251003057536493728927597113088,656344685607975824811602764282,1542820962392534605394964077849,711793990789265410739592564795,360722936267236670505682489152,95340216475377655504172714451,541963719344974636812073683052,1400370364145552717449913439773,1508728410389422359812168758869;\
973170689742222439882641270624,1510030401795049269856696831263,761919370948803479854098493692,932881489594569697728291090873,117981136858251978778460459917,600707363859779154740357887478,1086628682677519866523210078331,389686535480801626875108117806,1383489779463762172479174749918,823667288112924120485548954267,129036619050587903562785769925;\
1467961989096697931071479996902,100034661579625433623469186917,413630406436042935875694100738,541356395477205199683644686537,156401408466939512050350974897,1574050022253036697215078263053,1170251782753682102686202042987,253318411016495374964533478513,771659086517222593834445217587,110489576729840547383771719037,428730208566081933031292884497;\
766229467726679640755338055864,985001416837438219994402047897,1270602664600683803724780493611,600526052995686992330161124768,1489117278563713080183815574276,394652087008846551797641282785,56517248382379853330015178326,912174619013883426048351366269,734813429666642014574181659176,1208054348393906242584841880449,463766977734903293015840558492;\
407408040035915715889781116898,309246003571269814392831011059,505059591566893657624031866844,374030551767780154952280767466,889382531063420111367376315842,1576655297719288650157986693870,335294074385309208396356321434,908881445688053429264591741713,868232573223789299724802556183,943360097737859324624609618968,366555752232803196892357578071;\
1198362446239301687923318136169,457716268202398019343211310740,996546816382381920264102537382,738889719219681395752205005120,293198935628015696494632957980,43673004040804724161856899476,1203015813794602922992544105516,1077592520772669606069646702113,878360915807771242135314050289,804629822946102734106229110550,1276917041800254112239072560029;\
645230350391050501947087653309,45732054186687277091426116375,266131019915104143694051836914,845148874055916575839563107117,1311494539752752654617297461449,202684606226272486348304448693,772871546393065807834479775101,1209789751805999091276682320682,260098196507087241363013791321,812445251189583090855520399490,788011200656762133998574313070]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
