/* Comments begin... 
Coefficient of   x^21 * y^1               = 4
Coefficient of   x^10 * y^2 * z^6         = 2
Coefficient of   x^8 * y^5 * z^5         = -3
Coefficient of   x^6 * y^8 * z^4         = 4
Coefficient of   x^4 * y^11 * z^3         = -4
Coefficient of   x^2 * y^14 * z^2         = 0
Coefficient of   x^1 * z^13               = 3
Coefficient of   y^17 * z^1               = -1

Here is the polynomial we're using this time:

4*x^21*y^1 + 2*x^10*y^2*z^6 + -3*x^8*y^5*z^5 + 4*x^6*y^8*z^4 + -4*x^4*y^11*z^3 + 3*x^1*z^13 + -1*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 158
[10, 2, 5, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[8, 5, 5, 0]  	422	5 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	10 
[14, 11, 3, 0]  	612	10 
[18, 8, 3, 0]  	619	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	9 
[9, 3, 14, 0]  	674	8 
[13, 0, 14, 0]  	681	10 
[15, 0, 13, 0]  	688	8 
[8, 22, 1, 0]  	689	7 
[9, 20, 2, 0]  	693	7 
[17, 0, 12, 0]  	695	8 
[7, 22, 2, 0]  	701	7 
[7, 6, 14, 0]  	705	7 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	6 
[12, 19, 2, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[14, 19, 1, 0]  	734	7 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[16, 19, 0, 0]  	741	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[5, 20, 7, 0]  	772	6 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[4, 23, 6, 0]  	791	5 
[3, 32, 0, 0]  	793	5 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[15, 24, 0, 0]  	837	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[11, 0, 14, 1]  	643	7 
[12, 17, 2, 1]  	681	9 
[16, 17, 1, 1]  	726	7 
[12, 23, 0, 1]  	757	7 
[4, 17, 11, 1]  	808	5 
[4, 1, 23, 1]  	812	5 
[3, 17, 12, 1]  	820	5 
[9, 3, 13, 29]  	643	6 
[9, 20, 1, 29]  	662	4 
[5, 18, 7, 29]  	726	6 
[4, 21, 6, 29]  	745	4 
[4, 24, 5, 29]  	783	4 
[4, 7, 18, 29]  	795	4 
[3, 3, 22, 29]  	808	4 
[3, 18, 11, 29]  	812	3 
[3, 10, 17, 29]  	814	4 
[2, 34, 0, 29]  	820	4 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[1201575969737115065360381463807,779814317388360397999397159132,630891301381914526181375134626,1078564235889897723204071983468,675197741935307676350541462274,521684880837555508895549965556,126026402619164728810524281678,1261221383507116044770008061546,1139942392566799754044992056529,790758722309266622031690062086,927386331031855658223896167928;\
379265339012260680196792575950,213990238362339058853816993504,603090552501566975017836291668,692261602446976686605068517281,175493243424146833576057042926,1002839060573531535519215311932,1504504945423031395278208741550,63549451810073269848756347839,1162144218918277392105050367526,1288592808283566321901683804574,745629077989064338814092724772;\
495267601201766094676746801572,157006702160998184799403457000,661603568964928559406076230883,1358259206370893543948975587800,329771066023355821055032377140,653312557984385844998812617346,766168293355667623587621279495,1006885205189813190156333191169,21512159648120143642925031021,178228328729324791036269428839,683131260407830695911009889208;\
493206503546819343238499604993,528204700040135896434165768470,1542015022369288569601260504993,324677997175645302553529909755,248178174122904812889704890827,838468627323551843199969236046,340219159664399691497120542474,929766111283192467950482107676,1099452189066339537333169698191,1324712775331337110782413874502,973796892439931041310846012710;\
693438842734670327103870727134,604730238257540040965342079457,1470177060714602833773679677881,334710576153384919999005238469,1043921664144028188945059840525,802421759305483312276186394654,241838018757010032723750014928,693245233971195770477304814441,1182618292484187682372840247756,686648806697126366174321184769,530375667314755213218101506859;\
1170887285178242402497207590429,1520568802587340230675946917703,401801239935698224331174155365,244455977626128365628422456015,466832992375405619848263098324,1039619515924562439582984392124,363539054859397141079103525920,995712566672351307453190633897,747922070739163976166580937582,588467768887042142662667116629,896814726330779678418001690773;\
152310174904854739430351785371,912222356712231668992821823196,1163965546845373356954287239714,282045717637550248188540202381,1483249058554356771546366394996,295869090208772415172350408863,572407647077651245540553319490,667077345947312015629387726945,271217591581634532884094644016,1392208267852616597585818584859,362082460426165020988208744685;\
1468592413663119480962055391462,958638494036547793589062938173,82694105638742369101747681075,1283135248128726774369901666947,1120102680781968923577289229258,695918447304717058373898091629,34237583252332705828524645055,140560807501698646306331765942,1335524580582818440996916540663,188488806737767322582705488117,606242902954201840630347115720;\
1231913772703158685721373238569,1548720970907035235826252547849,470768718627451829854739072009,555595858917278402133194959972,1140280198603726114356627157392,491347444388201872415743235668,909330311963165545376651452505,1126861133461193636954217212586,514457803952994052687686380384,629060604756791192099076381375,1095485380599487721039989157013;\
990951401900685699448852459422,457394786851266286284338283171,1084028070894162866022377842500,1187633989470040100556671877356,1537650125179412350890088782664,515568320458876498140354945984,1535236685815213162596723526981,557938237012504426445703378823,620798502550223163851042529809,340733431826447567359378635291,805506565111037902928256217634;\
1421131954757725900703692254114,1135016499191661420657524345474,1450929308252717444986050079386,772676567107155367463002120342,397853855501187841211777651,679091899071823236100888973747,1241558355743058722000816630523,940556361602648442400919873736,1181037930618885876940996815827,198357887910258908123618744979,75746826686039674376545124978]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
