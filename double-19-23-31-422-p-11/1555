/* Comments begin... 
Coefficient of   x^21 * y^1               = -1
Coefficient of   x^10 * y^2 * z^6         = 5
Coefficient of   x^8 * y^5 * z^5         = 0
Coefficient of   x^6 * y^8 * z^4         = 4
Coefficient of   x^4 * y^11 * z^3         = 4
Coefficient of   x^2 * y^14 * z^2         = 3
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = -3

Here is the polynomial we're using this time:

-1*x^21*y^1 + 5*x^10*y^2*z^6 + 4*x^6*y^8*z^4 + 4*x^4*y^11*z^3 + 3*x^2*y^14*z^2 + -3*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Not smooth!
Coefficient of   x^21 * y^1               = 3
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 1
Coefficient of   x^6 * y^8 * z^4         = 5
Coefficient of   x^4 * y^11 * z^3         = -2
Coefficient of   x^2 * y^14 * z^2         = 4
Coefficient of   x^1 * z^13               = 2
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

3*x^21*y^1 + 1*x^8*y^5*z^5 + 5*x^6*y^8*z^4 + -2*x^4*y^11*z^3 + 4*x^2*y^14*z^2 + 2*x^1*z^13 + 3*y^17*z^1

Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
The final length of G is 136
[8, 5, 4, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[6, 8, 4, 0]  	422	5 
[6, 11, 3, 0]  	460	6 
[4, 14, 3, 0]  	491	5 
[5, 0, 14, 0]  	529	6 
[18, 8, 3, 0]  	619	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	9 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	9 
[18, 14, 1, 0]  	695	8 
[7, 22, 2, 0]  	701	7 
[10, 20, 2, 0]  	712	8 
[13, 3, 13, 0]  	719	8 
[16, 17, 1, 0]  	726	8 
[5, 25, 2, 0]  	732	6 
[4, 11, 13, 0]  	732	6 
[19, 0, 12, 0]  	733	7 
[6, 26, 1, 0]  	743	7 
[10, 23, 1, 0]  	750	7 
[14, 20, 1, 0]  	757	7 
[8, 25, 1, 0]  	758	7 
[3, 28, 2, 0]  	763	5 
[12, 22, 1, 0]  	765	7 
[5, 28, 1, 0]  	770	6 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	6 
[3, 14, 13, 0]  	782	5 
[10, 26, 0, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[8, 28, 0, 0]  	796	6 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[12, 25, 0, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[18, 4, 12, 0]  	806	6 
[3, 11, 16, 0]  	806	5 
[4, 1, 23, 0]  	812	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[17, 22, 0, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[17, 3, 12, 1]  	764	7 
[6, 29, 0, 1]  	781	6 
[16, 22, 0, 1]  	810	6 
[15, 24, 0, 1]  	837	5 
[2, 31, 4, 1]  	875	5 
[2, 12, 19, 1]  	903	3 
[1, 35, 4, 1]  	948	3 
[0, 41, 3, 1]  	1036	2 
[14, 23, 0, 2]  	795	6 
[4, 7, 18, 28]  	795	5 
[3, 10, 17, 28]  	814	4 
[4, 7, 17, 29]  	764	5 
[4, 1, 22, 29]  	781	5 
[3, 10, 16, 29]  	783	4 
[3, 4, 21, 29]  	800	4 
[3, 27, 5, 29]  	833	4 
[2, 28, 5, 29]  	837	4 
[2, 14, 16, 29]  	856	4 
[2, 0, 27, 29]  	875	3 
[1, 29, 7, 29]  	903	2 
[1, 4, 27, 29]  	948	2 
[0, 10, 26, 29]  	1036	1 
------
The gap is between 3 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[306136665282272366802321824621,915099962614381823054715511726,320013881140711682232854408413,82600145153273123191895518032,1038644523004269792134516823314,1091431875833655218178819753932,876782568639568220215156853161,232429687332602318121881649837,633405097238042026076972870924,922868837998693115400887861977,996070341639063105702564612929;\
918454132503340446969847757203,1495147816174625029722626514749,1076481131474376335087010657637,63730520956032768950495018988,375224325759947894690292065046,825131368315803184714582906512,52997313407091936291189700568,667784410181737643077387335011,1516709368680584271518891053367,504872012408805203979547120456,1024717605629559808164785930310;\
316015814069920054063513845996,647415042387845987924654826771,1076654888544045447992222332837,998136437935480589960002808778,144611173871670807178181870533,1248847066551481705539337451928,1126141937208105167910576290406,1298230511872693885076041045243,200980336416024367312527528727,1096928272776937624944258880751,926663588325160033440692832661;\
629423148973518046728576742832,605112091697997064599313383882,815275726482245008199264388803,1306186306726062954828874029880,1065759348369236518280538383106,1324036106903855279076125655210,1528338352674445792022561305375,912700604164773298887570315186,424241762829518252809879893897,590330799424942547742136774408,1545130468747047303459050582991;\
1488529811512901729908013537954,212936159030201860181782384611,1195916627286601979502121094845,128758887656856091366129395888,708691537130821922796952731546,180008550171879485347372002075,1233353965453530659191215182266,1257925601979461558535896757517,1144305562895703772161548382267,975201514636432830757199258828,546690735566325914381764386154;\
702465722627313439537000164694,1097369875458716038517369973443,609968106400845477338285585847,1363873987523097011069870110327,15329377982124701057199802352,342340757935887046715147976812,1544578712441768088508074759910,179379251639638801348037610742,1578398287524909445793927791326,236174248757322281964967889040,532874061364550827140708410768;\
935039660033007000529327554711,894426065722833315651754852941,737431756171574979689003436358,1110373757135050344074753376399,849940473695540421624613373883,940464756806306061212432382008,392715547978064972490403084753,36424436310953053497049958823,1327982816278769015920667623016,295505945852181908868935352332,1448404694662187031965263479444;\
841039363301524796149988246928,343429801943827110791067535048,1366148225273845930299490821858,1084101123367656928072915532970,485209309160500360661003795005,715750585336623713100961681120,1024498076988415091055618159249,1523647931359679520243268060212,435661592937247464055532323873,1112636467370035409824142221684,681641378033250993974974500593;\
154566267372578372079259451698,585024056906554657331930676531,1274639393108390868477176948707,1150143464251777816933073885407,400554049123297496734125368022,907925279640370197373571475621,1480765058027747089324219625627,1281811038815059959775445532689,1388138027520955866835072425241,301249909091268715491775465329,1513180305025924323075687879380;\
1441730114008802618784446653415,1135985085928219910444683531250,9357219583615798829348260853,1572943207947824609318740390094,462930395142869453741175180111,638660679002076300917548330283,712082307288630419347749786188,110490292522448800258966958179,661490070593328807281620325376,1404238091701587044677295557597,1483622770663719198951148067038;\
338957781670061410390392485496,904455240489144429796087511810,1552144781133625903543356359103,1019138260752036037225916387073,1073197139450254966461903766881,1033140199754886638947122971534,1540137147826135405816219848920,1371961371916609420008334126272,1459284075094767117622903659215,351578709325345533207863608812,189249570140808606813814527449]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 165 lists. */
