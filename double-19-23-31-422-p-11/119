/* Comments begin... 
Coefficient of   x^21 * y^1               = 3
Coefficient of   x^10 * y^2 * z^6         = 1
Coefficient of   x^8 * y^5 * z^5         = -2
Coefficient of   x^6 * y^8 * z^4         = -2
Coefficient of   x^4 * y^11 * z^3         = -5
Coefficient of   x^2 * y^14 * z^2         = -5
Coefficient of   x^1 * z^13               = -1
Coefficient of   y^17 * z^1               = 0

Here is the polynomial we're using this time:

3*x^21*y^1 + 1*x^10*y^2*z^6 + -2*x^8*y^5*z^5 + -2*x^6*y^8*z^4 + -5*x^4*y^11*z^3 + -5*x^2*y^14*z^2 + -1*x^1*z^13

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Not smooth!
Coefficient of   x^21 * y^1               = -5
Coefficient of   x^10 * y^2 * z^6         = 2
Coefficient of   x^8 * y^5 * z^5         = 1
Coefficient of   x^6 * y^8 * z^4         = 4
Coefficient of   x^4 * y^11 * z^3         = 2
Coefficient of   x^2 * y^14 * z^2         = 0
Coefficient of   x^1 * z^13               = 3
Coefficient of   y^17 * z^1               = 2

Here is the polynomial we're using this time:

-5*x^21*y^1 + 2*x^10*y^2*z^6 + 1*x^8*y^5*z^5 + 4*x^6*y^8*z^4 + 2*x^4*y^11*z^3 + 3*x^1*z^13 + 2*y^17*z^1

Allocate G_len 320 elements and old = 160.
The final length of G is 164
[10, 2, 5, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[8, 5, 5, 0]  	422	5 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	10 
[14, 11, 3, 0]  	612	10 
[18, 8, 3, 0]  	619	10 
[11, 0, 14, 0]  	643	9 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	9 
[9, 3, 14, 0]  	674	8 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	8 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	7 
[17, 0, 12, 0]  	695	8 
[7, 22, 2, 0]  	701	7 
[7, 6, 14, 0]  	705	7 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	6 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[14, 19, 1, 0]  	734	7 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[16, 19, 0, 0]  	741	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[5, 20, 7, 0]  	772	6 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[4, 23, 6, 0]  	791	5 
[3, 32, 0, 0]  	793	5 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 6, 20, 0]  	834	5 
[15, 24, 0, 0]  	837	6 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 6, 21, 0]  	846	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[3, 11, 18, 0]  	868	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 1, 27, 0]  	898	4 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 47, 0, 0]  	1081	1  <--- 2
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[16, 17, 1, 1]  	726	7 
[12, 23, 0, 1]  	757	7 
[2, 18, 12, 1]  	824	4 
[3, 11, 17, 1]  	837	5 
[3, 10, 18, 1]  	845	4 
[3, 21, 10, 1]  	850	4 
[2, 7, 22, 1]  	881	3 
[2, 10, 20, 1]  	888	3 
[2, 9, 21, 1]  	896	3 
[1, 14, 18, 1]  	899	3 
[1, 10, 21, 1]  	900	2 
[2, 12, 19, 1]  	903	3 
[1, 12, 20, 1]  	915	2 
[1, 30, 7, 1]  	926	2 
[1, 0, 30, 1]  	949	2 
[0, 44, 0, 1]  	1012	2 
[4, 10, 17, 2]  	833	5 
[3, 27, 5, 28]  	833	4 
[5, 18, 7, 29]  	726	6 
[4, 21, 6, 29]  	745	5 
[4, 24, 5, 29]  	783	3 
[4, 7, 18, 29]  	795	5 
[2, 27, 5, 29]  	814	3 
[1, 35, 0, 29]  	824	3 
[1, 24, 9, 29]  	850	2 
[1, 27, 8, 29]  	888	2 
[0, 31, 6, 29]  	899	2 
[0, 27, 9, 29]  	900	1 
[0, 15, 18, 29]  	903	1 
[0, 29, 8, 29]  	915	1 
[0, 13, 20, 29]  	919	1 
------
The gap is between 3 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[145532830763471100546557512217,377469506109984264429747270373,58243017910908919305645721393,624329650227639373297742601799,1547394952388365980767498278120,924970907045891012320442042779,489427382310013172144701015588,974698768404265622941872459756,935779021244724233426589489398,580509806554960487484834126506,404526377575659346755361772510;\
172563449264664679150184404768,1123940561950531996579384498501,1144312673645784108997318114047,1517639355081161281181772635493,597811111149385978104406928529,1518615616040498727948140906346,33307945078226660476004840283,996998010325480144729485291609,1184636609041328145144542648812,498100224996844230938793779999,117278243805032547200194366729;\
272092155048728880354506631780,1221725685936862376332940069086,662352662964000671083235732173,464136605978551928704359288530,671514212785413519187915915435,1487762302450492954171608794296,1047144335558444296494606164,507536829960124102092949567903,568859884187992868952812165054,1459404363941673280598647426554,46887467881921965503732902584;\
887817823152041583140858432855,522626740332563727098199600537,494848548456866780659053277790,238306394487557443580609114137,896469808529530815889797307468,890629652496163424734560955460,352035788920723460052725000567,1161901056131719170658750405959,906929125245475006406045473984,487768223031964974794704560661,415434715816650878787647260305;\
1109293382710203361544212619110,1230468310305485909874710635235,1253752395362537977056976592897,669189634218521188552979011725,802550165513023030718008969531,177244129530908523796458761125,1278350021134519112964712626274,1393165987726040526944872091561,275481994925025344403732283587,880042102060361559446989309800,808645694244712902515241390141;\
1566466507135501952515818576542,374206633504908871703645003788,973452266952832553161923263379,1280048001727977255245134167340,452437546741739075885120375458,111329991316987341256653736111,984075477906527042771081618315,1441231626409017291900965472889,1236152405716969627806422946949,58761898971653125387715480014,1509879121365151894069520680147;\
419402607860913455568159339176,1453338551229290944723641619614,1132113004058050443954804848421,678138729681647779191374071300,1019783675831048734831495246911,1024223013097745825318801534424,1359085019976576880211292518142,1053670672501322650141033802806,1494641447760742987978535992003,639965699804535695882818128624,235772213966788607942285814120;\
778067681177845472070776919420,1347505218187799442718010800447,582162827059719105120286703646,425629440314913533393419321399,586393647663556935081394323919,297563913736599548664547382890,1396486824583316047530783575895,706725627473018946686593759290,284667120568751761882315250779,516777053005879106182185465890,326704731820112826998212936453;\
965995792779132856677223820013,1137007819799106846201218285033,653057244520413175090044637381,505124677768566380348803630981,32377493989857221092751071274,398011771930312124384074579843,330250316672043424378892472709,792908843762483996180483034987,589537014491749749611555660918,568468346530137170890732409912,661991614652410862965478671932;\
1307645444141404768403972786525,15602143585759851332841316992,811589785926389222825820051702,854192347482020180370373057663,848070226787399311615007062821,614109887742597786460914429601,621945104127026195047982594903,569702998132770388367903727404,1200550749019611521084958292536,164583009127453074346841587616,1149443880967220051707566079766;\
1322419558733060546102235795535,34713502085163463069521156257,724103365379544114786307543516,477740207823715298769078658381,472083524056639927877804516421,1326629515054288393162504824578,1525853357103390789538114780169,78898659014635698583016529341,1185238683712862473483893398778,74791920888707126644415035182,1170250240842677801846950498841]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
