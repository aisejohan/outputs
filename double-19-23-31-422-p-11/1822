/* Comments begin... 
Coefficient of   x^21 * y^1               = 0
Coefficient of   x^10 * y^2 * z^6         = -3
Coefficient of   x^8 * y^5 * z^5         = 3
Coefficient of   x^6 * y^8 * z^4         = 1
Coefficient of   x^4 * y^11 * z^3         = -3
Coefficient of   x^2 * y^14 * z^2         = 1
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = -2

Here is the polynomial we're using this time:

-3*x^10*y^2*z^6 + 3*x^8*y^5*z^5 + 1*x^6*y^8*z^4 + -3*x^4*y^11*z^3 + 1*x^2*y^14*z^2 + -2*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Not smooth!
Coefficient of   x^21 * y^1               = -4
Coefficient of   x^10 * y^2 * z^6         = 2
Coefficient of   x^8 * y^5 * z^5         = 0
Coefficient of   x^6 * y^8 * z^4         = -5
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = -4
Coefficient of   x^1 * z^13               = 3
Coefficient of   y^17 * z^1               = 1

Here is the polynomial we're using this time:

-4*x^21*y^1 + 2*x^10*y^2*z^6 + -5*x^6*y^8*z^4 + -4*x^2*y^14*z^2 + 3*x^1*z^13 + 1*y^17*z^1

Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 160
[10, 2, 5, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[20, 1, 0, 0]  	403	5 
[6, 8, 4, 0]  	422	4 
[6, 14, 3, 0]  	529	6 
[5, 0, 15, 0]  	560	5 
[16, 8, 3, 0]  	581	8 
[12, 14, 2, 0]  	612	7 
[11, 0, 14, 0]  	643	9 
[16, 14, 1, 0]  	657	8 
[9, 3, 14, 0]  	674	8 
[15, 0, 13, 0]  	688	7 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	7 
[8, 5, 14, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[9, 6, 13, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[8, 22, 2, 0]  	720	8 
[7, 23, 2, 0]  	724	7 
[10, 22, 1, 0]  	727	8 
[9, 23, 1, 0]  	731	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	7 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	5 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[16, 20, 0, 1]  	764	7 
[5, 18, 9, 1]  	788	6 
[5, 21, 7, 1]  	795	6 
[5, 17, 10, 1]  	796	6 
[4, 18, 10, 1]  	800	5 
[2, 32, 1, 1]  	805	5 
[5, 23, 6, 1]  	810	6 
[2, 31, 4, 1]  	875	5 
[1, 32, 5, 1]  	910	3 
[1, 35, 4, 1]  	948	3 
[0, 35, 5, 1]  	960	2 
[2, 15, 16, 2]  	879	4 
[4, 7, 17, 29]  	764	4 
[4, 24, 5, 29]  	783	4 
[4, 4, 20, 29]  	788	5 
[4, 3, 21, 29]  	796	5 
[3, 4, 21, 29]  	800	4 
[2, 1, 24, 29]  	805	3 
[3, 21, 9, 29]  	819	3 
[2, 0, 27, 29]  	875	3 
[1, 32, 4, 29]  	879	3 
[1, 1, 27, 29]  	879	2 
[1, 18, 15, 29]  	898	2 
[0, 4, 28, 29]  	960	1 
[0, 21, 16, 29]  	979	1 
------
The gap is between 3 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[1194336240376885583757467779530,1317506253654811230945228788699,180877529886911041980780900333,921779810095847704269778237915,1014409201787404950364747564336,934105824848682592956119291835,1044614032782625551418152462977,342098339693858772108118602260,981648754978574462033129824190,477700035333995437294621323099,148972611856569614270833885022;\
791438311750099887356282147067,941265775821796380961418813979,411562812859628043562231595024,389872927392047853364696851491,585851286707430049299321382978,893965323296491897456351899476,250513920117763282810838641215,1407941484995967339704257594634,1021529108963456070330554655432,1439074219563201315148751951441,899473626582768007792007818381;\
815561081619343944626873420447,754837392991473884374835535699,1137222123244161267616442849873,959601280164033585726518368234,226910898567271303191036289268,413089643154825967636147571015,907264428694025478740261874430,896660542017784442788179467826,808769659234735417923435477900,1340307877622984331490961126804,653661409142879142517842759638;\
1385272227988915755330843964753,417368043519747664149825140433,1529578679760144199500792658891,1503355490155016555671410219764,1305225397949109660966492185416,1566829142667952231561068720782,986546525394385298032326062943,88331983480949987369182165255,783784860657585955467981697246,1294862679320515058715812856357,1008262138031351456277157284074;\
304177302282985791106174102076,462123181465659800697290086814,1163630365004507300104223195329,954355227362231082951620136013,66175695460653882387652381783,1425449736878867374056675054421,1365658023335282421602408916497,880329803454731989431218048914,453795121367805830504412734224,991887345520543479995741245305,324180033619717893112898174772;\
1162368542419794547726349812783,863778795647673194949240098557,98940433897047781364814010719,771073544716965225882043431226,758185196213874292386442976496,780623512924670326398514640822,684786885105949781305627105453,1246954392972989258683597561144,1074921106448225722198133831782,668416516425206531484716085245,802379389151495832583131360014;\
1152710124472384637368807255305,1103749110099491126402146138279,1025822750297197804817424424446,980850080667490795465997612946,213142097527597792188437465564,1577797095001071764112228155330,322523373776873540847642284482,10332958334021580648128461482,1421240093550348623203431840720,716760520567746062573158325233,450360393301252415951654124814;\
96340235140606021372436327095,1116022327927617774819788722414,671270904582305415820963369501,643753493704277772866368067585,582247425602412612194495226554,80441938085640879317432107498,461440254924180731531237332097,1490376617554468139052284180288,1085963999577319331029070579047,1302368697283865820402421706837,20576272751650906807591026315;\
790683344008948344487223398596,205857985892674565318480251543,355660043181933943652655406164,1352742815813367068917998134909,805191742089868811715836731900,1002183692716470581175095279174,1372499505164218538956770505771,375200129856949370951910177322,655905809620475117550878477765,843937401784926078700577881605,57124405692508743071367805789;\
1449618092343076259462770696858,404535977048644600606509788483,1429909710107383495662762475523,442363248015035793643807947392,1138728693686020135798874236473,202921259772688101258425280535,48909696184120894084614961012,860157174751764701528344334157,289958295295663743442261818305,421347847639937963530767772956,954460790932754877355350796524;\
1065461508977332170823958315019,1276617437185929609006620569736,169956314716558996234672259279,1365329076492614918510209437537,1105771526662413115806499901362,663644434265752063703675132619,819991713504683483714752115787,1242975078631568493799181965481,889636731887853418500440545719,1157215552910095502297423577375,584171555019477887076229529530]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
