/* Comments begin... 
Coefficient of   x^21 * y^1               = 1
Coefficient of   x^10 * y^2 * z^6         = -3
Coefficient of   x^8 * y^5 * z^5         = -3
Coefficient of   x^6 * y^8 * z^4         = 0
Coefficient of   x^4 * y^11 * z^3         = 3
Coefficient of   x^2 * y^14 * z^2         = -1
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

1*x^21*y^1 + -3*x^10*y^2*z^6 + -3*x^8*y^5*z^5 + 3*x^4*y^11*z^3 + -1*x^2*y^14*z^2 + 3*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Not smooth!
Coefficient of   x^21 * y^1               = -5
Coefficient of   x^10 * y^2 * z^6         = 1
Coefficient of   x^8 * y^5 * z^5         = 0
Coefficient of   x^6 * y^8 * z^4         = 5
Coefficient of   x^4 * y^11 * z^3         = -5
Coefficient of   x^2 * y^14 * z^2         = 3
Coefficient of   x^1 * z^13               = 3
Coefficient of   y^17 * z^1               = 5

Here is the polynomial we're using this time:

-5*x^21*y^1 + 1*x^10*y^2*z^6 + 5*x^6*y^8*z^4 + -5*x^4*y^11*z^3 + 3*x^2*y^14*z^2 + 3*x^1*z^13 + 5*y^17*z^1

Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 173
[10, 2, 5, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[6, 8, 4, 0]  	422	5 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[16, 8, 3, 0]  	581	10 
[14, 11, 3, 0]  	612	9 
[11, 0, 14, 0]  	643	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[8, 5, 14, 0]  	701	8 
[9, 6, 13, 0]  	712	8 
[8, 22, 2, 0]  	720	8 
[7, 23, 2, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[9, 23, 1, 0]  	731	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	8 
[5, 9, 14, 0]  	736	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[8, 25, 1, 0]  	758	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	7 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	6 
[5, 20, 8, 0]  	803	6 
[3, 15, 13, 0]  	805	5 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[4, 0, 24, 0]  	820	6 
[4, 23, 7, 0]  	822	5 
[3, 1, 24, 0]  	824	5 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 24, 8, 0]  	857	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[2, 12, 19, 0]  	903	3 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[2, 0, 29, 0]  	937	3 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[7, 6, 14, 1]  	705	8 
[7, 25, 1, 1]  	739	7 
[4, 11, 14, 1]  	763	6 
[16, 20, 0, 1]  	764	7 
[3, 14, 13, 1]  	782	6 
[3, 29, 2, 1]  	786	5 
[3, 0, 24, 1]  	801	5 
[4, 1, 23, 1]  	812	5 
[4, 6, 20, 1]  	834	5 
[3, 18, 12, 1]  	843	4 
[3, 28, 5, 1]  	856	5 
[3, 20, 11, 1]  	858	4 
[2, 29, 5, 1]  	860	4 
[2, 14, 17, 1]  	887	4 
[1, 10, 21, 1]  	900	2 
[2, 0, 28, 1]  	906	4 
[1, 12, 20, 1]  	915	2 
[1, 24, 12, 1]  	943	3 
[0, 35, 5, 1]  	960	2 
[12, 20, 1, 2]  	719	8 
[3, 17, 12, 2]  	820	5 
[2, 18, 12, 2]  	824	4 
[10, 23, 0, 28]  	719	7 
[2, 34, 0, 28]  	820	4 
[1, 35, 0, 28]  	824	3 
[6, 23, 2, 29]  	705	6 
[5, 28, 0, 29]  	739	6 
[1, 31, 1, 29]  	763	3 
[5, 21, 6, 29]  	764	5 
[4, 24, 5, 29]  	783	5 
[1, 34, 0, 29]  	801	3 
[2, 4, 22, 29]  	812	3 
[3, 23, 8, 29]  	834	4 
[1, 15, 16, 29]  	860	3 
[0, 27, 9, 29]  	900	1 
[0, 29, 8, 29]  	915	1 
[0, 41, 0, 29]  	943	2 
[0, 4, 28, 29]  	960	1 
------
The gap is between 3 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[625835061922194788437599370633,1109101310365507793589800490930,201248173626399523088946708504,1350493622734568387775064931379,981319332118819333596789182339,1069963016527029086009513161438,285919472203060605137943703076,239843625763263461012623606419,1425469492537684407087286799963,186423294861846911059597374606,688996120685899516543550028169;\
577521770383425780664262173491,375578878064031353274238168966,938028346086807223299689735390,1329515035855018613820373501721,214126549736521610402799003100,1291842164579920178118413026276,832590493171884521034746340874,1275582799188534544933207745389,1128977305802045946174555711425,277639668945120205346640076103,1456559826791175644202636505908;\
1402386788371186079069594750412,97228997378228552310498129639,651600460944681323978418612345,477780240391880569664992178939,593651146543068288712769476162,1354031542293613902135394145399,1499678254329080946278517873272,185583414854640625437033554861,344214243152263550249135147140,1068844322694979701263490711834,1399308112988506885239552210910;\
1269446443290021416003923515756,1253375657839787043191521398691,779878315984977775464298098159,50118848075712862739928656956,226552212922770754287240845125,756494778713003844550869721757,947713873194283211626269293084,1030680330899749587729184465865,662855370680113598124852317053,761153103444991811760501819106,562004781140454560770751647835;\
1524285897703380340351231907832,889903736704380426459501257581,1172538022191506999084447952743,602881047385077634980163686747,591777243244382522752943093081,1083714514047586277800663600166,1050434202068261019419880623461,473199513505986813997416937510,1378782412546207012744739229946,1192529618890658053715986638428,292181631493959453291965923795;\
325021909015304357728106839106,1537822230228094385064657083472,593945110730710601606174067393,709950603773001723264627119218,1450147761478227414822976980520,887094963997868952045193761364,715690838958356375002905792941,845172417050706431750176791447,1469639372604922138561408507854,855827604711577153932107807756,871580518473668690311899665028;\
551792348021465349936054877022,1407872900575169000608965415095,310370492685364707505460620688,507987680679768399084894844507,48498677050508175863154394315,201931119872754620893041622466,1107795024632651470385816120883,1326452854251774638259975061892,702061347141054191945966292629,240324934068932603445523984290,506713214084208742911542814407;\
1095773723360516451329836750979,610540099234463941860621867432,889988453186055428346575322403,109519992259789283288320238760,464921235588495439901417287831,807748816342090848629458597939,1180689012931061878660285842181,17776764407796647954145633298,1152476540919921858172219183221,293306680893596857524540411084,131376848975383991017814548927;\
1305211558864341059174478311161,1184223248916457357668619372281,1458452471571522354286635580682,1490425348324396385638313933268,357525011306950089256528559630,979541016049538016049458960202,1432302207102931054217478396883,472532236415856032192479120968,451778267096761388846649014593,1072537395474687395962400594826,1481503171232373107067038049909;\
1580594064026584786138233600701,1156195227797594686856341171955,689932884453647448138519800382,1015508685541841085778686773391,714417857053855723949951323069,266198241501379462021395357247,1012982716150597166131277016017,1440665988271804475783727056558,1516246242334037475722493464168,649844463106084036467871339178,1370970483118787715632222167556;\
443816513835114799598219883416,993187366862460676808244926071,378257858876713401317390307680,631816193926270929213660720027,51664414836548515704370501911,1524599686496209412627105961283,785892307503805931375433573295,1175660397683818654647002006538,113485171558181715681670785691,656475056689551527394705788720,1538653497899745956068440537657]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 167 lists. */
