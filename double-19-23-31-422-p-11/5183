/* Comments begin... 
Coefficient of   x^21 * y^1               = -3
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 3
Coefficient of   x^6 * y^8 * z^4         = -3
Coefficient of   x^4 * y^11 * z^3         = 1
Coefficient of   x^2 * y^14 * z^2         = 3
Coefficient of   x^1 * z^13               = -3
Coefficient of   y^17 * z^1               = 0

Here is the polynomial we're using this time:

-3*x^21*y^1 + 3*x^8*y^5*z^5 + -3*x^6*y^8*z^4 + 1*x^4*y^11*z^3 + 3*x^2*y^14*z^2 + -3*x^1*z^13

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Not smooth!
Coefficient of   x^21 * y^1               = 2
Coefficient of   x^10 * y^2 * z^6         = -5
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = -1
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = 2
Coefficient of   x^1 * z^13               = -3
Coefficient of   y^17 * z^1               = 2

Here is the polynomial we're using this time:

2*x^21*y^1 + -5*x^10*y^2*z^6 + 2*x^8*y^5*z^5 + -1*x^6*y^8*z^4 + 2*x^2*y^14*z^2 + -3*x^1*z^13 + 2*y^17*z^1

Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 165
[10, 2, 5, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[8, 5, 5, 0]  	422	5 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	5 
[18, 5, 4, 0]  	581	10 
[14, 11, 3, 0]  	612	9 
[18, 8, 3, 0]  	619	10 
[11, 0, 14, 0]  	643	9 
[14, 14, 2, 0]  	650	9 
[16, 14, 1, 0]  	657	9 
[9, 3, 14, 0]  	674	8 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	8 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	7 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	7 
[5, 9, 14, 0]  	736	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	7 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[4, 25, 6, 0]  	837	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 1, 27, 0]  	898	4 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[2, 0, 29, 0]  	937	3 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[7, 25, 1, 1]  	739	7 
[5, 11, 13, 1]  	751	7 
[16, 20, 0, 1]  	764	7 
[5, 24, 4, 1]  	771	6 
[4, 18, 10, 1]  	800	5 
[4, 25, 5, 1]  	806	6 
[4, 24, 6, 1]  	814	5 
[2, 29, 5, 1]  	860	4 
[2, 7, 22, 1]  	881	3 
[2, 9, 21, 1]  	896	3 
[1, 14, 18, 1]  	899	3 
[2, 0, 28, 1]  	906	4 
[1, 4, 28, 1]  	979	2 
[5, 28, 0, 29]  	739	6 
[4, 28, 1, 29]  	751	4 
[5, 21, 6, 29]  	764	6 
[4, 10, 15, 29]  	771	4 
[3, 10, 16, 29]  	783	4 
[3, 4, 21, 29]  	800	4 
[1, 15, 16, 29]  	860	3 
[1, 24, 10, 29]  	881	2 
[1, 26, 9, 29]  	896	2 
[0, 31, 6, 29]  	899	2 
[0, 21, 16, 29]  	979	1 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[667036675025580818649317224440,1336371123717156352580574050461,1213234327050223684285073547213,1249881501806433915196380339935,1465270745631022786382797141733,920481390271799101363466327039,442804691853440482265081785722,148651794175190763256695671061,537920399950536213036995472112,330244929944107043038383389333,652982360390130754477933506155;\
678567991894036735470275860172,1275985902500711478532075567941,1448623629105408899067068243044,933859713212160046352554618280,848414516177673171563461113709,879772657094116857423466565099,1223644493395612516220608559053,944689060889728053304265684021,1336442704582393785412566693745,1449540736267114009000388426817,943725231754917550118946970501;\
1441024342828765054903885083802,1381324880454817670076673173839,598869685405254658933514709586,1582251786655419139259841259572,142461315396468525234208347719,929642427858520283577783228038,520743138303353535330867643493,664780779835779480400796895120,859788726474152980423732606177,564683245407662543517451377996,940595128093636409653059273880;\
1197712485313357762276516018989,988867053229759858889763250992,1113137911503634394866515063204,550723100035027079940366216223,289293726286125843200370857042,1293163648270513884945238715315,713107006339875272930983663859,414069418941836254614674759465,579969673591220178243146834038,1309796163758944199468227998142,729003201978091272311625767551;\
105705351290476100096859150470,1284348222052193237664393643448,1178116152567234870390205680985,1090476982345087956606044044702,103689076919415664442658020117,1071596251405103124402675199512,1420549303406066443283648730206,1055459535169916137007883767917,700439952514721562271867495559,795380038764735842381659998566,745741790157546609308989632492;\
967782580140228956345744823687,734089906316089256887307381271,165751147950870501253651698039,468361014972053364707456988110,914870162660094768246261323412,724203699155514026348616493953,1174870837463250147714407181015,1421407235242529560773570149536,133961800191739533107144468737,740895729053445483387004047088,941940489882983416879415218131;\
403165825670827266010952835207,31431818285443015425229115722,943267441949879411179669040509,1521306592919444082583946330447,1350032145447850045155478345842,1327041589891282854793584755925,583439292801600937294769624745,614880507220703928832299050775,671657742508173763680671896794,1226660096010369495444812550862,1071049888316682360236938110136;\
758882984794830164649882960599,1079468046179883080313187423978,876096593040847908783580865149,353928767982732147691998886605,327733013004310702685948557704,231460342881264163948506958128,292587628562134641333020682292,81338516382974880102358211905,541397279598921941632426191807,1503973621426652382432401765768,698357379835231121006387254275;\
251258750521244874976572407228,1562992986120066637884696195835,647893950702798917469097127106,324899016226128091271834084093,1180003637317186731611686863684,579743746896674187932481375625,775031234016120483671565397552,1095802855005843031474635582429,504197951259050126907125689392,436971766301327120088940072160,1432993645619134593980940889792;\
277104731451103365190463409220,392619967053865303565781260478,837503186720577504219068053140,779419126569722672132070619890,635447073751926973047305906254,900980397788039075544163087137,775736949931018478425278415918,1285960432350925859896327737283,1450535814178098381083989885719,1565912638294768629184934234686,928698561070547279455522295865;\
798999515865794727446260088921,1435699809339185303677482604462,1045710296747602002992867053524,454712175756479423192742017521,625217949813520205830595291934,447139040930663398747022419794,1472930532539882503392720170844,880542078581798152519909666405,928860584345741033549575762585,309992741280987723019014800506,1175750891000239716335497763879]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
