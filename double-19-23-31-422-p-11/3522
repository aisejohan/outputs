/* Comments begin... 
Coefficient of   x^21 * y^1               = 1
Coefficient of   x^10 * y^2 * z^6         = 3
Coefficient of   x^8 * y^5 * z^5         = 4
Coefficient of   x^6 * y^8 * z^4         = 0
Coefficient of   x^4 * y^11 * z^3         = -3
Coefficient of   x^2 * y^14 * z^2         = 0
Coefficient of   x^1 * z^13               = -1
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

1*x^21*y^1 + 3*x^10*y^2*z^6 + 4*x^8*y^5*z^5 + -3*x^4*y^11*z^3 + -1*x^1*z^13 + 3*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 160
[10, 2, 5, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[20, 1, 0, 0]  	403	5 
[8, 5, 5, 0]  	422	4 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	8 
[14, 11, 3, 0]  	612	7 
[16, 11, 2, 0]  	619	9 
[11, 0, 14, 0]  	643	8 
[13, 0, 13, 0]  	650	8 
[9, 3, 14, 0]  	674	8 
[12, 17, 2, 0]  	681	9 
[9, 20, 2, 0]  	693	7 
[17, 0, 12, 0]  	695	8 
[12, 19, 1, 0]  	696	7 
[7, 22, 2, 0]  	701	7 
[7, 6, 14, 0]  	705	7 
[8, 23, 1, 0]  	712	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	6 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	8 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[16, 19, 0, 0]  	741	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[6, 25, 2, 0]  	751	7 
[5, 11, 13, 0]  	751	7 
[5, 26, 2, 0]  	755	6 
[4, 12, 13, 0]  	755	6 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[5, 25, 3, 0]  	763	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[5, 20, 7, 0]  	772	6 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[4, 23, 6, 0]  	791	5 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[4, 20, 9, 0]  	815	5 
[3, 17, 12, 0]  	820	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 6, 20, 0]  	834	5 
[15, 24, 0, 0]  	837	6 
[3, 7, 20, 0]  	838	4 
[3, 34, 0, 0]  	839	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[3, 11, 18, 0]  	868	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[10, 19, 2, 1]  	689	9 
[16, 17, 1, 1]  	726	7 
[5, 25, 2, 1]  	732	7 
[12, 23, 0, 1]  	757	7 
[3, 32, 0, 1]  	793	5 
[4, 4, 21, 1]  	819	5 
[4, 10, 17, 1]  	833	5 
[3, 11, 17, 1]  	837	5 
[3, 10, 18, 1]  	845	4 
[1, 13, 19, 1]  	907	2 
[8, 22, 1, 29]  	689	7 
[5, 18, 7, 29]  	726	6 
[4, 11, 13, 29]  	732	4 
[4, 21, 6, 29]  	745	5 
[4, 24, 5, 29]  	783	3 
[3, 1, 23, 29]  	793	3 
[4, 7, 18, 29]  	795	5 
[2, 27, 5, 29]  	814	3 
[3, 21, 9, 29]  	819	3 
[0, 30, 7, 29]  	907	1 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[1293350199767041313123525881842,1022394583775986683900923120255,1143833706548226743970523670050,298501800738138250076610063959,1287256088392729966571527431767,566735618820575698985318092551,718726180557730359809999586206,703318877161161553159379684293,110348734192483218907532955810,462654707084894318215744408534,408808106447771078585190117750;\
1199487377651868550902344039107,1454898493197284612074629227163,1556766809085436506319367262391,1499616037570331585655182951926,1542611230441552222072582124576,181759755624932214331713810831,1560465555304678871270974013737,91585485685627970379620407933,1430665132583547501939879795599,1097112728787668991384618681940,25510721766722175596081439674;\
921511312492416008683165893933,1576272857346488468447431786300,977934191927046722547150662178,884990425382546444858562899728,104586732476841536314600577986,1406823402609907561033299779289,468061605564282672012714585018,562493408041648933834340677585,7355542241060215443831214493,1111442018121986392354353408205,723891981889369532516664299748;\
652535429216304233198612062428,1360574894641754933522644050138,523524255690260304642562048055,1364312182163719335217796745554,1376944621561914826699673790263,632430600021670466257243405150,1139028123133175220993828626098,1186423034233040686758322302634,1301574582039826448817675149146,745664612322439858170155045881,123005426770183568163266693166;\
770287631623618945741352466149,1507424690852808628993860019934,258370083182732950015048712615,534999388434585287740653977686,55349043941761787050310548665,678520716189545602380778513523,1208188593595262976750704854456,1579313046045158817414436142739,695440401635614216818323746747,318666535993148869860705444656,177893040515705049578718713599;\
1545959603209216309803703998556,1275639169453957412807883037186,248171154743053166944100002578,336015056381280154895674353751,994131715219820003952688081288,614734354503290525362542699862,698399768688590392097652560252,1405077918846397641675095986885,793271542357555934139913525013,1128952136957897479499949562149,1049059882131473936478508247186;\
494287721249441956894101771898,108296905231884117741277121114,347955061392440223564043019897,379318234763833532693913274844,1287227559671507490541784078349,1046033092964610564469909494516,265077579507816390788596416073,904243654432651351511304606324,365270378821642445647946607047,1334660541223053745707451202956,516031633132659280887683782536;\
268127140799110540563225412834,1330459427762832708522585966244,301661850923298400754473843081,1557864707991630300434044506029,265105874319946192318080418772,972549089126246252821236955116,474313173040509633487945899688,558179252045979626971102257360,472378755264123323297603595322,1055697844190498737400969710474,122917961499422356574129982434;\
241065406979908191855916477181,817936966562430528068202721322,891081962326500017246136179387,845714659634225608334546329638,459526073199425017303027863177,548328172869975144943301143105,557009428349031808835180733259,975582785617267673931608555417,1489548184301548788883062665552,618104525148926648890417840579,871590757530711183833052066596;\
1159023207931685648929604406892,230442488148451083745465513388,1336106103234124551963518195629,1262930789832112064903983208388,1409671323579722514959398101835,1484400512652328642168643595684,1438285428608369834781409904035,599743913030045967818727400264,291566180679813310313959068977,640722706861328108610354042226,170169301233902594434212314066;\
574738452614872220134416431675,1447183895974928689182333171634,998315916666811821537663932683,694548251003637614391982851083,688193761053882795470682079442,39846565240708739095042217725,477763135662523816325784224199,515602571170409547374707311374,44554077628201697699176535568,968625004327593426751988460190,1387860994348760873279851017747]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 165 lists. */
