/* Comments begin... 
Coefficient of   x^21 * y^1               = 4
Coefficient of   x^10 * y^2 * z^6         = 4
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = 4
Coefficient of   x^4 * y^11 * z^3         = -3
Coefficient of   x^2 * y^14 * z^2         = 2
Coefficient of   x^1 * z^13               = 3
Coefficient of   y^17 * z^1               = 4

Here is the polynomial we're using this time:

4*x^21*y^1 + 4*x^10*y^2*z^6 + 2*x^8*y^5*z^5 + 4*x^6*y^8*z^4 + -3*x^4*y^11*z^3 + 2*x^2*y^14*z^2 + 3*x^1*z^13 + 4*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 176
[10, 2, 5, 0]  	391	7 
[21, 0, 0, 0]  	399	7  <--- 1
[20, 1, 0, 0]  	403	7 
[8, 5, 5, 0]  	422	6 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	12 
[14, 11, 3, 0]  	612	11 
[18, 8, 3, 0]  	619	11 
[11, 0, 14, 0]  	643	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[12, 17, 2, 0]  	681	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[7, 6, 14, 0]  	705	8 
[12, 20, 1, 0]  	719	8 
[8, 22, 2, 0]  	720	8 
[7, 8, 13, 0]  	720	8 
[7, 23, 2, 0]  	724	7 
[6, 9, 13, 0]  	724	7 
[17, 0, 13, 0]  	726	8 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	8 
[5, 9, 14, 0]  	736	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[6, 25, 2, 0]  	751	7 
[5, 11, 13, 0]  	751	7 
[5, 26, 2, 0]  	755	6 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[5, 25, 3, 0]  	763	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[15, 0, 13, 1]  	688	9 
[7, 22, 2, 1]  	701	8 
[8, 23, 1, 1]  	712	8 
[5, 25, 2, 1]  	732	7 
[7, 25, 1, 1]  	739	7 
[16, 20, 0, 1]  	764	7 
[5, 18, 9, 1]  	788	6 
[4, 21, 8, 1]  	807	5 
[3, 12, 16, 1]  	829	5 
[2, 27, 7, 1]  	876	3 
[2, 10, 20, 1]  	888	3 
[0, 31, 7, 1]  	930	2 
[14, 17, 1, 29]  	688	6 
[6, 8, 13, 29]  	701	6 
[7, 9, 12, 29]  	712	5 
[7, 26, 0, 29]  	731	6 
[4, 11, 13, 29]  	732	6 
[5, 28, 0, 29]  	739	6 
[5, 14, 11, 29]  	758	5 
[5, 21, 6, 29]  	764	6 
[4, 17, 10, 29]  	777	5 
[4, 24, 5, 29]  	783	4 
[4, 4, 20, 29]  	788	5 
[3, 7, 19, 29]  	807	4 
[2, 29, 4, 29]  	829	4 
[1, 13, 18, 29]  	876	2 
[1, 27, 8, 29]  	888	2 
[0, 0, 30, 29]  	930	1 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[135182476081729650512191201260,234240242180089471118222681355,135808229386059659838569310719,782318110816182445060479815650,775760751975254847432265255544,73242262152897668567255966502,1396141913294800532064242539908,1391626635659559552248060147665,815200464994375141973139670019,530654748302750620536298407712,1465098061742594386710195209309;\
1470568242771826499954637803096,1577240166155604923562983405475,1151720922053386296265253518497,1037846408677505399824390748847,664807156202210369726290893607,109916930802310169669652979326,9995985252233094924776851786,781072268912278415198196559511,733105885721213843269762023737,216508390666034580614954686409,504353195715169848564644162013;\
584869128333839529570274854255,489593665705149418118576000381,309471937132182072210925528222,794214907001136627908755123435,618462099934919028171844576863,1457097319038385493864640622993,1040111010166794319438101402370,275773903246265149113863125321,255001809348129525034695160390,187064512858459309495397163848,1569156490470026595159167441835;\
803699518648745041874067075803,435796699283647871828842514536,60357951405365536477808249598,558256999510512479785474423568,1313140992264247438856133949071,868119022539381258883371106599,1579645026326893075937236054986,87891497766718707822422470655,1114884002464791710187262610054,343937594181806019261074885193,223643335983434143512683050158;\
726951961187743274774746820307,447441809159650306167424366093,1085156207221720039298848120209,284607660051634831915376346281,629427117614098352207691419156,830888947102027816399401643661,701761167652773555671390637503,282461733958681469515240390506,827040520982633750205956049947,239124046892910720619688640580,836483089554082815451648808470;\
197032409330476350219147095313,445223115267775963760695236363,1201599434513071383605553568317,254379546007785607255960595482,939756513884304389833040100323,1398904038413791371804849028830,924907168056323459461203489421,548322281580222633901541394083,1539118007775925836616613709409,779258896563041453365037752950,191612825435673005264531433143;\
138291506975016923491528023253,1240679707378911539078220356255,7227355830827180814688800862,559691279381298386046967734448,1141171549586981980527041788668,432969576683030149501560336317,624790807504677262300709189299,124594168828933218160485707946,319499635835863113105911848049,253079645561958197967454411722,517714716755555029672608075495;\
375103608287873065098638697499,1394109838560174669490153013468,227848768793633651216722734638,604634454458211050172216509933,1428942636124009127367548900488,1055733838843831354159068179558,194919601734532714439093338634,1117085039061823510053193916713,335414085476780622152873490029,1216995610457147675491275758809,666660918168410851336849194865;\
893115036074341667398451242621,21003552905865388137211715394,260259581306552469617805075677,575862791621301760892342827977,641225804110634787594606817574,1138527306973108281110280318920,536587314784435485829607833176,674700948000794026562322824884,274477406727157156208231172561,418437255615715653752075516546,898915709951970775035333339230;\
814744509554440184598651452632,435799456788585595918693917268,901906119156192106741271566349,9958392840309863859817473324,314143074235508285587750741789,339949672229367638213380813439,51458463551300538633530189670,346920171227117224765220933169,781706220949340029336397684082,487454012849977722190707015159,616376703237784536566597625558;\
1000716997803519894123944070159,205558840273833804895906436933,231149314498224489055065393541,1214398024203573608492252234383,1165074531501635543375030442812,755130449919971555465991843239,926356491488797355174601611814,1243642800533628464325029702677,1360808287660566541608566340190,1041080832584827463332293403233,13325010037500951202384208413]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 167 lists. */
