/* Comments begin... 
Coefficient of   x^21 * y^1               = -2
Coefficient of   x^10 * y^2 * z^6         = 5
Coefficient of   x^8 * y^5 * z^5         = -5
Coefficient of   x^6 * y^8 * z^4         = -5
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = -3
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

-2*x^21*y^1 + 5*x^10*y^2*z^6 + -5*x^8*y^5*z^5 + -5*x^6*y^8*z^4 + -3*x^2*y^14*z^2 + 3*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Not smooth!
Coefficient of   x^21 * y^1               = 1
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = -3
Coefficient of   x^6 * y^8 * z^4         = -3
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = 5
Coefficient of   x^1 * z^13               = -3
Coefficient of   y^17 * z^1               = 4

Here is the polynomial we're using this time:

1*x^21*y^1 + -3*x^8*y^5*z^5 + -3*x^6*y^8*z^4 + 5*x^2*y^14*z^2 + -3*x^1*z^13 + 4*y^17*z^1

Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
The final length of G is 135
[8, 5, 4, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[20, 1, 0, 0]  	403	5 
[6, 8, 4, 0]  	422	4 
[6, 11, 3, 0]  	460	6 
[4, 14, 3, 0]  	491	5 
[5, 0, 14, 0]  	529	6 
[18, 8, 3, 0]  	619	9 
[14, 14, 2, 0]  	650	8 
[16, 14, 1, 0]  	657	8 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	7 
[7, 22, 2, 0]  	701	7 
[10, 20, 2, 0]  	712	8 
[13, 3, 13, 0]  	719	8 
[5, 25, 2, 0]  	732	6 
[4, 11, 13, 0]  	732	6 
[19, 0, 12, 0]  	733	7 
[6, 26, 1, 0]  	743	7 
[10, 23, 1, 0]  	750	7 
[14, 20, 1, 0]  	757	7 
[8, 25, 1, 0]  	758	7 
[3, 28, 2, 0]  	763	5 
[12, 22, 1, 0]  	765	7 
[5, 28, 1, 0]  	770	6 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	6 
[6, 29, 0, 0]  	781	6 
[3, 14, 13, 0]  	782	5 
[10, 26, 0, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[8, 28, 0, 0]  	796	6 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[12, 25, 0, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[18, 4, 12, 0]  	806	6 
[3, 11, 16, 0]  	806	5 
[4, 1, 23, 0]  	812	5 
[4, 4, 21, 0]  	819	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[17, 22, 0, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 9, 19, 0]  	853	4 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[0, 32, 6, 0]  	922	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 47, 0, 0]  	1081	1  <--- 2
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[17, 3, 12, 1]  	764	7 
[16, 22, 0, 1]  	810	6 
[3, 17, 12, 1]  	820	5 
[15, 24, 0, 1]  	837	5 
[3, 21, 10, 1]  	850	4 
[1, 15, 17, 1]  	891	3 
[1, 27, 9, 1]  	919	2 
[1, 30, 7, 1]  	926	2 
[1, 29, 8, 1]  	934	2 
[1, 0, 30, 1]  	949	2 
[0, 44, 0, 1]  	1012	2 
[14, 23, 0, 2]  	795	6 
[2, 12, 19, 3]  	903	3 
[4, 7, 18, 28]  	795	5 
[3, 10, 17, 28]  	814	4 
[1, 29, 7, 28]  	903	2 
[4, 7, 17, 29]  	764	5 
[3, 10, 16, 29]  	783	4 
[2, 34, 0, 29]  	820	4 
[3, 27, 5, 29]  	833	3 
[2, 28, 5, 29]  	837	3 
[2, 7, 21, 29]  	850	3 
[2, 14, 16, 29]  	856	4 
[0, 32, 5, 29]  	891	2 
[0, 15, 18, 29]  	903	1 
[0, 13, 20, 29]  	919	1 
------
The gap is between 4 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[341477009070651338396794282520,537400317906897886868301639994,1353216813030349693786827419289,1170538353135241079417946954084,70517501244963603005218642148,246788530074904056305975071383,47710783577589245332382645702,1435904045725057157379522274916,1273683783184048215285091967203,1385600953953124713690584468495,526567520430949307070601512870;\
59156783003239905569751661888,914582034434167981398316584116,1097047969916187744747835492767,1014925692495139150119185782177,715897193949075608833853224174,265154918954621615776795091989,1288689637509504397625317065987,600396018699283776740132501260,1101704970453523882323706065974,1379092322603440249820009802489,356748320171845242240950716773;\
1220980071584748626439253258252,1230749883959754783600102592491,1299942359105554338448337283841,1001697082983284630366639040848,515424471253686533146099148481,583994189250368441558553139776,743573457772398629089604616275,1157458358515506654982789971964,204664331765327137991834681112,142898280144353795208350325672,239472211141068072786465553179;\
685829837385945127460824920707,1268087844289540701069929114667,350179291171240640468163036230,727625151221632800707468290910,1538669414886847517622501961346,171988996098636462656579464532,814614305231246532384322046998,116291059640635521198845494536,1502041986583863075293297976896,842549722507225354034905372012,149702303718839379764531174482;\
871022330618906079936792881716,34420464471397789408978598657,1511854611798811975000281856615,1190182752471819735646874315074,871786402435708515192739724653,1111078679372502001181629526214,65905544843693929354862205918,947698601923199840523299727589,1528108785030050597793880788019,528587829702623480205298131612,520617915567902650656559790015;\
516382600219533494170625776709,106383243137794854765383484181,1233136544131693545992192884603,1531731302888273137745713130556,697218705412917817546608176491,1488962920253722550330317632580,721075517944898826504510006500,150687113891302307345806210640,1311921378978271332666125506798,295660691330177092080068581300,955148737448799476470315825694;\
328310279020165025991320835136,94589713343434032481757393483,1465500235834807093288181489408,1516482277292790796983818800603,252773967986075750728811964436,676938491852359060001587098695,164858864218652067517758041634,662318669415235314946133737430,323400960736402546824632280981,100170902747876338416803082230,68339337306968471338694686686;\
577000656628702268422805621893,1357778697438424632140193213694,871508906023346189123249419795,1520963152329237016018867023556,1255417232708011627271407485183,1005600828710980014528219205496,1351210048100111559059431253632,1371110262277404374474776047900,844791661387519098215482693173,7151570790659871744319600207,1321842117590537284757664991595;\
1525533616986746209321161065935,272034389608899116037812800087,61037912013905266850187198420,938397373172570275990614465459,563619512531159907407441926355,323823844057436081698830468604,414715851873438030434075415232,1250342177615623414771464200482,1182444515699115819771379745195,8954440302861137495996452274,50662364792985911023085840153;\
1491328780710093635457102907118,825175112567724101689498310082,1333738371163019936261062976698,457326636240254852307973861564,987281978127628613282827605554,700774544877956289999369108756,1083472558208310776313721563749,1220070929162735509173724379288,945585837705643950045011340988,981615911700795549567434180740,116125626183972029445602463418;\
1296006139096231048357053127751,1554639459070128297868989656839,827906365352871323375555421625,1045201900962118419226224641651,1353443618799854109956117481528,21740656541765616729550696387,552840753790316069483156841463,21076515638015366758714517846,167634806765853386531648915212,923357711587037714575708420080,628090008097435119546795601512]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 164 lists. */
