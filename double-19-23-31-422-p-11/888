/* Comments begin... 
Coefficient of   x^21 * y^1               = 5
Coefficient of   x^10 * y^2 * z^6         = 3
Coefficient of   x^8 * y^5 * z^5         = -5
Coefficient of   x^6 * y^8 * z^4         = -5
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = -4
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = -5

Here is the polynomial we're using this time:

5*x^21*y^1 + 3*x^10*y^2*z^6 + -5*x^8*y^5*z^5 + -5*x^6*y^8*z^4 + -4*x^2*y^14*z^2 + -5*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Not smooth!
Coefficient of   x^21 * y^1               = -1
Coefficient of   x^10 * y^2 * z^6         = 5
Coefficient of   x^8 * y^5 * z^5         = 0
Coefficient of   x^6 * y^8 * z^4         = 0
Coefficient of   x^4 * y^11 * z^3         = -1
Coefficient of   x^2 * y^14 * z^2         = -1
Coefficient of   x^1 * z^13               = -1
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

-1*x^21*y^1 + 5*x^10*y^2*z^6 + -1*x^4*y^11*z^3 + -1*x^2*y^14*z^2 + -1*x^1*z^13 + 3*y^17*z^1

Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 159
[10, 2, 5, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[20, 1, 0, 0]  	403	5 
[4, 11, 3, 0]  	422	4 
[14, 11, 2, 0]  	581	8 
[7, 0, 15, 0]  	598	7 
[12, 14, 2, 0]  	612	7 
[11, 0, 14, 0]  	643	7 
[13, 0, 13, 0]  	650	8 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[12, 19, 1, 0]  	696	8 
[8, 5, 14, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[9, 6, 13, 0]  	712	8 
[8, 22, 2, 0]  	720	8 
[7, 23, 2, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	7 
[9, 23, 1, 0]  	731	7 
[6, 8, 14, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[5, 9, 14, 0]  	736	7 
[8, 8, 13, 0]  	739	7 
[7, 9, 13, 0]  	743	7 
[9, 9, 12, 0]  	750	7 
[6, 25, 2, 0]  	751	7 
[5, 26, 2, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[8, 25, 1, 0]  	758	7 
[7, 26, 1, 0]  	762	6 
[10, 25, 0, 0]  	765	7 
[9, 26, 0, 0]  	769	6 
[5, 28, 1, 0]  	770	6 
[6, 7, 16, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[7, 28, 0, 0]  	777	6 
[18, 19, 0, 0]  	779	7 
[6, 29, 0, 0]  	781	6 
[4, 28, 2, 0]  	782	4 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[6, 1, 21, 0]  	788	6 
[3, 32, 0, 0]  	793	5 
[6, 4, 19, 0]  	795	6 
[6, 0, 22, 0]  	796	6 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[6, 3, 20, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[5, 8, 17, 0]  	806	6 
[5, 4, 20, 0]  	807	5 
[5, 31, 0, 0]  	808	5 
[5, 0, 23, 0]  	808	5 
[6, 6, 18, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[5, 7, 18, 0]  	814	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[5, 6, 19, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[9, 3, 14, 1]  	674	9 
[10, 19, 2, 1]  	689	7 
[16, 20, 0, 1]  	764	7 
[4, 31, 0, 1]  	789	6 
[5, 1, 22, 1]  	800	5 
[5, 3, 21, 1]  	815	5 
[4, 3, 22, 1]  	827	5 
[3, 6, 21, 1]  	846	4 
[2, 7, 22, 1]  	881	3 
[2, 9, 21, 1]  	896	3 
[1, 32, 5, 1]  	910	3 
[1, 1, 29, 1]  	941	2 
[1, 4, 28, 1]  	979	2 
[2, 23, 9, 28]  	846	3 
[8, 20, 2, 29]  	674	8 
[9, 5, 13, 29]  	689	6 
[9, 22, 1, 29]  	708	5 
[6, 4, 18, 29]  	764	6 
[5, 7, 17, 29]  	783	5 
[4, 0, 23, 29]  	789	5 
[3, 4, 21, 29]  	800	4 
[3, 6, 20, 29]  	815	3 
[3, 20, 10, 29]  	827	4 
[1, 24, 10, 29]  	881	2 
[1, 26, 9, 29]  	896	2 
[0, 18, 16, 29]  	910	1 
------
The gap is between 2 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^5*z^15
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[269288400471890520157837546503,1503404449249981286345242549935,1503410733723191269209386967699,1569005423999449141068916752958,660046949086883126447136320093,775992152120537612950801155847,369945287309923993848527710451,134300429666775784729808548266,567261885615405433767450106201,1267758634824967240748435932619,1395342748416120511237297033692;\
1423141277954171267898864650084,1114983701116589563429635749208,582440621434079749489149983152,1446213666471844659834991080084,1359204914607665058254999084968,258864167408632714807544796647,956802268496107780654215791879,570192973253319607368554145802,1256980468096201583165651476509,726380356491068182757060725111,1191446347304257585437663613286;\
1330906189555465205266202561042,1189049452731600260289730959609,1531784404598904671204628424763,717307598483556399270778818662,668648992366338187363579051731,69027807331919946684695113483,985616133815673268714276553346,1221862778244135173775884801854,1542783560650012565009139564143,910194497188880388528925473658,1463655296295768442034754097226;\
500586867604220496262889984113,1463425848925594075495183261086,913035745153528479612734935227,1399795174949752902819932196642,41816228283064446552083465602,405266010387630729603639671870,1580950655219441578329615475172,1217862472792357055991445767902,411044160496740238667861913988,948903968163553968095188695575,1122618954785901846338562922755;\
754939174054897095540495842503,396083599428336525590295574523,153400168934230876469934059696,1448660353644470973430616575504,345048524728080052324122419302,1346846555897931559517299738936,932305231438974851646549585224,606423902369175684995211219264,222108496294881130817209113589,788223322592965362923208491982,1160393584916236985880060520278;\
1308020372634952292595064071102,1565179002008209216649933124544,150013336300199400339534347736,104475440560971099515688750078,1292222849760551502776376704981,207159372758857748403525364101,794027748146553001279325589044,115224731908773705239889706850,1201464934204151792711316978769,1033073136757324365125595259186,1358221383828734304978233638723;\
1286797354972304043835860301598,1135563713489154226048819887698,315567337833144869100104538311,478449467507504231782611559277,516277156133436835681557399144,1366609170529876297164019271205,512768831394997184400711187309,1220069437562664372493284265769,276650523992680672077486815440,822772574864656332806134539932,635892336010172117666981103836;\
265260944721953953323350424953,414054715068518744520572950471,1228134402589737749472790870206,408820968505303687776031182110,784589420147038601234388355161,644864555125699937830953607291,604984096948390491998166081977,215318918778403251468535516000,1224665480374978078594452080258,737060589481731732052642253073,601015393451673361681439122522;\
830315413328706729741149440879,498768279177746963966395532616,1143673850609433244668858856405,1039513372500612128487816599657,1073994574251793771528999101714,1568478406130412833023196756648,899628229294477594306116128616,737335635870217025552956740860,300665415460396521231625067469,121756626238154405945278288523,571683023425721350758243755313;\
1391384093805900433524429049164,1409357312334314668399215158981,1507329378291809664248009732144,600590971848821870820251439487,236887011477240187506049001197,784064380713623054199407500764,1187438940305990170345421659290,1041834015898331903476152686543,1547964417737182612599971781363,234700675605805643106096710002,107910436279085345126975197796;\
429603668238130403435256717938,1094159033120103849192012222973,233886742720018783327234370338,171440502077734584140421058743,907142434361953893689403040916,1321700225237892158748511302144,286971625124362459537533108051,1486104979560470471002847249071,907560055644118405243928982230,121674085545459137589646690536,938645709890721306556271672274]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
