/* Comments begin... 
Coefficient of   x^21 * y^1               = -4
Coefficient of   x^10 * y^2 * z^6         = -5
Coefficient of   x^8 * y^5 * z^5         = 4
Coefficient of   x^6 * y^8 * z^4         = 0
Coefficient of   x^4 * y^11 * z^3         = -3
Coefficient of   x^2 * y^14 * z^2         = -5
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = 0

Here is the polynomial we're using this time:

-4*x^21*y^1 + -5*x^10*y^2*z^6 + 4*x^8*y^5*z^5 + -3*x^4*y^11*z^3 + -5*x^2*y^14*z^2

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^21 * y^1               = -4
Coefficient of   x^10 * y^2 * z^6         = 4
Coefficient of   x^8 * y^5 * z^5         = -2
Coefficient of   x^6 * y^8 * z^4         = 4
Coefficient of   x^4 * y^11 * z^3         = -3
Coefficient of   x^2 * y^14 * z^2         = 4
Coefficient of   x^1 * z^13               = -4
Coefficient of   y^17 * z^1               = -5

Here is the polynomial we're using this time:

-4*x^21*y^1 + 4*x^10*y^2*z^6 + -2*x^8*y^5*z^5 + 4*x^6*y^8*z^4 + -3*x^4*y^11*z^3 + 4*x^2*y^14*z^2 + -4*x^1*z^13 + -5*y^17*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 168
[10, 2, 5, 0]  	391	7 
[21, 0, 0, 0]  	399	7  <--- 1
[20, 1, 0, 0]  	403	7 
[8, 5, 5, 0]  	422	6 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	12 
[14, 11, 3, 0]  	612	11 
[18, 8, 3, 0]  	619	11 
[11, 0, 14, 0]  	643	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	9 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	8 
[7, 25, 1, 0]  	739	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 24, 12, 0]  	943	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[5, 9, 14, 1]  	736	7 
[6, 26, 1, 1]  	743	7 
[4, 12, 13, 1]  	755	6 
[16, 20, 0, 1]  	764	7 
[5, 18, 9, 1]  	788	6 
[4, 21, 8, 1]  	807	5 
[3, 11, 17, 1]  	837	5 
[3, 27, 6, 1]  	864	4 
[2, 24, 9, 1]  	869	3 
[2, 31, 4, 1]  	875	5 
[1, 1, 29, 1]  	941	2 
[1, 35, 4, 1]  	948	3 
[0, 41, 3, 2]  	1036	2 
[0, 10, 26, 28]  	1036	1 
[4, 26, 2, 29]  	736	6 
[5, 12, 12, 29]  	743	6 
[3, 29, 1, 29]  	755	5 
[5, 21, 6, 29]  	764	5 
[4, 24, 5, 29]  	783	4 
[4, 4, 20, 29]  	788	5 
[3, 7, 19, 29]  	807	4 
[2, 28, 5, 29]  	837	4 
[2, 13, 17, 29]  	864	3 
[1, 10, 20, 29]  	869	1 
[2, 0, 27, 29]  	875	4 
[0, 18, 17, 29]  	941	1 
[1, 4, 27, 29]  	948	2 
------
The gap is between 3 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[1066738971337541220868446068939,1036283918391881226961907255681,1111740184738866657020078748322,757131612359842238395552649600,1411695279249938089435103764304,476470878879552494557543898447,415587482032374958372356732695,1111147132598813946338858768866,576891551771528132982375663427,380301818331978469883577130884,479025318322961336512027692778;\
61065506653829502873825254581,78053834243086046973716076529,1354682498251253487460414730067,100786573408122716889524110141,734396020864908044224661343253,588529010075483107209295011735,1322386634264402711772877015874,713227786477209520862547298283,352670730609871511609082245704,426503572338547830626300202380,782411740671190136705078731180;\
86200253116887085148732724389,288966613496056393219016761548,65327401147213549287794467116,396723400270650510428381325601,39193618867383460821504753898,1172638142133392918542323922718,67843989110070315276246225410,1538681564563140495045297773265,1493348134842037407312315454265,78420300267747920763897578138,840171416783952167983630861475;\
1086316132118817029399956623102,981609389216586150919647351574,112626676819069167568059547109,1072557532908618447145845495798,280078350039476898532214475169,759994055363727706052925808722,808191498835829833264575334530,890979490280818044231863893408,1061288497468260405491065839019,1209379007875355861072470626256,591363759051802498200984559663;\
275876322937199896230676548051,1094182280977681265237151457867,1312938769872220811687398988288,1444816784118048406918628723442,777107086899853325364449446086,695363406755352712139236886126,119267005652119608265234425019,117812671559964501808967444924,1557949890543136856435063125006,730134609934322319832622978615,766803621488498884504584942495;\
325448263424401363709564228065,161266247905508950681414059378,430068022539688664101714476709,1534546013172552137977886889948,872020448812898059401607935879,1214500413807310242460069098591,1115093445059875349724124750435,1487206952228926994004387226768,975276631619616496028730932390,1494063269298381659132890390745,1482733593887722595814008986680;\
846501758450048894698366171487,196453029409723736661161513450,538273856471702331194566763482,23559815187523041368432100093,223362527806960070128102792905,1210346911084545694795115465608,413237317392802760815169978535,869321871934111678186473885274,609688153877151043495195905488,799229717077947726260310078172,418373202450035943146331105503;\
75633368187557947979868980896,551726127769050747972624892282,846449563307964691061655494705,540040379161969044042364831678,1485830092906297231153034037800,1254704228178363955855268817334,1442751006710910402167960216039,336547815862460298998964552787,16635324421719048939580574646,575955425889599822286251679285,806682192563855729118770745214;\
1254502024894259698785772692771,1267606021858724493349473120088,435048061160495028329142498232,1009283120027159635404758790108,766831203431012688266164441553,412223145748005204346947602323,155454867220674046435473333534,193230826699046510900609825170,255741989706860082108851675683,1071863598572875065044152187771,1262493796711815512141352618728;\
1447203862064704900016772138566,102677691246403483923754979152,657957589643997556340391470511,215931810960068827451449044071,1387296460688403754369614424383,585406154003279008957518507700,790671001694014861731288974601,169573313596749742766103313362,42662165835196038227076785706,444676925430794793029651938063,1212746333532980159179645541250;\
610665363566552815542413151764,1570382904447499792578082808463,957992000907985795025654889594,139786733816052995502519311117,818025783531075567269381583694,94858443407200231264806624291,239474187002784653351306484995,834719690908406948827823250797,1266537104599886711220862326159,121307072284643499488727148689,1451646046309251243744486350245]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
