/* Comments begin... 
Coefficient of   x^21 * y^1               = 4
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = 0
Coefficient of   x^4 * y^11 * z^3         = 2
Coefficient of   x^2 * y^14 * z^2         = 5
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = -1

Here is the polynomial we're using this time:

4*x^21*y^1 + 2*x^8*y^5*z^5 + 2*x^4*y^11*z^3 + 5*x^2*y^14*z^2 + -1*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^21 * y^1               = 3
Coefficient of   x^10 * y^2 * z^6         = 3
Coefficient of   x^8 * y^5 * z^5         = 4
Coefficient of   x^6 * y^8 * z^4         = 2
Coefficient of   x^4 * y^11 * z^3         = -5
Coefficient of   x^2 * y^14 * z^2         = -2
Coefficient of   x^1 * z^13               = 3
Coefficient of   y^17 * z^1               = 4

Here is the polynomial we're using this time:

3*x^21*y^1 + 3*x^10*y^2*z^6 + 4*x^8*y^5*z^5 + 2*x^6*y^8*z^4 + -5*x^4*y^11*z^3 + -2*x^2*y^14*z^2 + 3*x^1*z^13 + 4*y^17*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 168
[10, 2, 5, 0]  	391	7 
[21, 0, 0, 0]  	399	7  <--- 1
[20, 1, 0, 0]  	403	7 
[8, 5, 5, 0]  	422	6 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	12 
[14, 11, 3, 0]  	612	11 
[18, 8, 3, 0]  	619	11 
[11, 0, 14, 0]  	643	10 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	10 
[9, 3, 14, 0]  	674	9 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	9 
[9, 20, 2, 0]  	693	8 
[18, 14, 1, 0]  	695	9 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[16, 17, 1, 0]  	726	8 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[2, 32, 1, 0]  	805	5 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 20, 11, 0]  	858	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 24, 9, 0]  	869	3 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[10, 19, 2, 1]  	689	9 
[14, 19, 1, 1]  	734	8 
[4, 11, 14, 1]  	763	6 
[16, 20, 0, 1]  	764	7 
[4, 18, 10, 1]  	800	5 
[4, 7, 19, 1]  	826	5 
[4, 3, 22, 1]  	827	5 
[3, 24, 8, 1]  	857	4 
[2, 29, 5, 1]  	860	4 
[2, 28, 6, 1]  	868	4 
[3, 26, 7, 1]  	872	4 
[2, 7, 22, 1]  	881	3 
[2, 9, 21, 1]  	896	3 
[2, 0, 28, 1]  	906	4 
[0, 31, 7, 2]  	930	2 
[0, 0, 30, 28]  	930	1 
[8, 22, 1, 29]  	689	6 
[12, 22, 0, 29]  	734	7 
[3, 28, 2, 29]  	763	5 
[5, 21, 6, 29]  	764	6 
[4, 24, 5, 29]  	783	5 
[3, 4, 21, 29]  	800	3 
[2, 10, 18, 29]  	826	3 
[3, 20, 10, 29]  	827	4 
[1, 15, 16, 29]  	860	2 
[1, 14, 17, 29]  	868	3 
[1, 24, 10, 29]  	881	2 
[0, 32, 5, 29]  	891	2 
[1, 26, 9, 29]  	896	2 
------
The gap is between 3 and 27.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[141524990497344720688723587825,1406833158906465990275969933970,1475058639728344675917719370826,339281674441689371657034547800,903644311800927206262392045516,346443625479685656231166089749,959187778028645038907073706853,524926470244369739445104488327,1403040159735668384913933404663,380869515550424571655648373512,1023541778863067537017246969876;\
1569672874926621033522979420220,1492300514233089528101009728681,397745123046945076539028048410,646865474398689820614042167267,1140486275821136898018719508660,464145091508293757002946194041,434767447090443571364475769554,44150413549415310959657107382,1113357713847155960416892503053,1101241854427047587745339372304,1287545026227640025948458560864;\
1517438991676427490342450289035,1444214085386804133528706796938,92511553135751020996524948563,1277914116734728956368454525308,396025088306833091384084135692,1210178070707455243830102892819,1212482759442303460057572999791,675952008162509163570355164217,34882483784129274330818895301,186069005401149508061994734340,523251329887579708478108501247;\
724256472787346686865504148218,223267586493869967236618731831,96638795100913543491786028628,991046603773497124544437155585,777718549279146259530757140899,666861234460614760732764726028,431674886635290369418767083169,1559563310937302256513257908886,151057155405394367072690650607,505906759215220090517484337676,113699894140676601521203983488;\
1468375067086921369668173412292,1187992493304609551239867362491,1158622389792198574557438906285,1425275664063418300011297645435,767992125384738881114064456319,1469121547690730046970024196028,397688564435160864773852854624,410759886003590468838413201138,485630699809136623634758918294,1378304425272175410787930669088,8703898666615827903882246725;\
1269969578316922017689922374542,1324450577923294944393039424005,556148425037183487474637760968,237339982450014796718473856287,1292841202344721274810136453002,1137776290906159615251217264786,589846727863338382559444733290,1469044070517532056243058527483,1223740755674678921440095210139,1557287248963127170109247219219,539304087896009481320202195477;\
830867896973638880838948496130,1199294226259901855297292738442,488479095896901522566504525635,89473792529170336381805476546,1075523276025106981970216153923,1298025828805173678065695662295,374258049832684324349935406602,106090352368735042096174795849,1417162243752767556043180095519,380300952538595006962593572363,287223704955589597434419411990;\
1547563780595016107174814240177,814856492691763708979335208215,798833604960681348143910323079,1286883563728231921024714547956,179979071498993399282592778825,1367032618087637768206030532705,609485544624473617066024210339,55369149329650345518074412095,1391305143830689158390343842917,50944107262807839690125663147,1290118621485654755874936132606;\
1017710242229453585309565833027,1213265441558160065763036825701,721348441221291642427910155552,360328736739305118829207281789,1207471688144092435874877065790,920220400879915336682779429197,1010596574832831267595138859804,50267459202575562361866462252,369325946180289915823872880080,497650827484672089931335883723,688715916749794172747243214160;\
290518966113680925809993537996,1024133304057765404547141326969,59841582877259735207001886929,359885419880135932801777465861,480874801367567293851158868478,1443134868753077593827301783259,1576619407406341613667638169378,479264579304472024848764865633,280796125153306023230605075451,397215624013111986084008709241,64156519101182412267230055551;\
843057938293263803371779938114,55607258526154272205746282460,53336853128560936871704440251,1575470797695942564294573422485,1489424715794913869081088854139,598656341509023223762561405939,853697080651166233103466020055,1378173103469029066885187728380,1059181567736093626057250775989,981237991183091437425858610690,882952803799373465480923851118]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
