/* Comments begin... 
Coefficient of   x^21 * y^1               = 3
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 4
Coefficient of   x^6 * y^8 * z^4         = -3
Coefficient of   x^4 * y^11 * z^3         = -5
Coefficient of   x^2 * y^14 * z^2         = -5
Coefficient of   x^1 * z^13               = 2
Coefficient of   y^17 * z^1               = 0

Here is the polynomial we're using this time:

3*x^21*y^1 + 4*x^8*y^5*z^5 + -3*x^6*y^8*z^4 + -5*x^4*y^11*z^3 + -5*x^2*y^14*z^2 + 2*x^1*z^13

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Not smooth!
Coefficient of   x^21 * y^1               = 1
Coefficient of   x^10 * y^2 * z^6         = -3
Coefficient of   x^8 * y^5 * z^5         = 1
Coefficient of   x^6 * y^8 * z^4         = -5
Coefficient of   x^4 * y^11 * z^3         = 4
Coefficient of   x^2 * y^14 * z^2         = 0
Coefficient of   x^1 * z^13               = -1
Coefficient of   y^17 * z^1               = 5

Here is the polynomial we're using this time:

1*x^21*y^1 + -3*x^10*y^2*z^6 + 1*x^8*y^5*z^5 + -5*x^6*y^8*z^4 + 4*x^4*y^11*z^3 + -1*x^1*z^13 + 5*y^17*z^1

Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 165
[10, 2, 5, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[8, 5, 5, 0]  	422	5 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	10 
[14, 11, 3, 0]  	612	10 
[18, 8, 3, 0]  	619	10 
[11, 0, 14, 0]  	643	9 
[14, 14, 2, 0]  	650	10 
[18, 11, 2, 0]  	657	9 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	8 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	7 
[17, 0, 12, 0]  	695	8 
[7, 22, 2, 0]  	701	7 
[7, 6, 14, 0]  	705	7 
[8, 23, 1, 0]  	712	8 
[12, 20, 1, 0]  	719	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	6 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[14, 19, 1, 0]  	734	7 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[16, 19, 0, 0]  	741	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	6 
[4, 14, 12, 0]  	770	6 
[5, 20, 7, 0]  	772	6 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[5, 18, 9, 0]  	788	6 
[4, 31, 0, 0]  	789	6 
[4, 23, 6, 0]  	791	5 
[3, 32, 0, 0]  	793	5 
[5, 17, 10, 0]  	796	6 
[4, 18, 10, 0]  	800	5 
[3, 31, 1, 0]  	801	6 
[2, 32, 1, 0]  	805	5 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[4, 0, 24, 0]  	820	5 
[3, 17, 12, 0]  	820	5 
[3, 1, 24, 0]  	824	4 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[15, 24, 0, 0]  	837	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[9, 3, 14, 1]  	674	8 
[16, 17, 1, 1]  	726	7 
[10, 22, 1, 1]  	727	8 
[12, 23, 0, 1]  	757	7 
[5, 24, 4, 1]  	771	6 
[3, 29, 2, 1]  	786	5 
[3, 0, 24, 1]  	801	5 
[4, 25, 5, 1]  	806	6 
[4, 6, 20, 1]  	834	5 
[3, 9, 19, 1]  	853	4 
[2, 7, 22, 1]  	881	3 
[2, 9, 21, 1]  	896	3 
[0, 35, 5, 1]  	960	2 
[2, 13, 18, 3]  	895	3 
[1, 30, 6, 27]  	895	2 
[8, 20, 2, 29]  	674	7 
[5, 18, 7, 29]  	726	6 
[8, 25, 0, 29]  	727	6 
[4, 21, 6, 29]  	745	5 
[4, 10, 15, 29]  	771	4 
[3, 10, 16, 29]  	783	4 
[2, 15, 13, 29]  	786	4 
[4, 7, 18, 29]  	795	5 
[2, 17, 12, 29]  	801	4 
[3, 23, 8, 29]  	834	3 
[2, 26, 7, 29]  	853	3 
[1, 24, 10, 29]  	881	2 
[1, 26, 9, 29]  	896	2 
[0, 4, 28, 29]  	960	1 
------
The gap is between 4 and 26.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[867292427306279087780770556658,416750217071375075706059616000,1505206131619471521933413313034,1172647139010683999096624036440,11540876224513987940052733896,744857082169929634642021392987,1405403063978195255977135415129,73439229524778135510066428007,872854109768309345513619380906,807065841738899561532803578797,896562867355764092783032719920;\
1167007926260207808030313113909,1470366694806723125327085692914,1558396482170397021089826466588,1227803402269977658306278914300,13891548784046522178440191319,475886801980882466039066567223,378745300293147461469986353570,1010319634284471188153522294556,822952906856561423078200470538,813227576931831780801601922348,1255774436704486975403405133669;\
1025517665488848846057663941127,505447552205417103633105981031,1480213951365384439695163297959,223690480375323724425313284612,941006345753247094540840253215,1016629231077524635338239682903,717996320699389870896058536719,436476654127455907545340163843,598600202008659238914867268532,1246826167419740651097472134412,302771356143714793482114134167;\
186440305115260692881253352665,40219825852059404477820982233,161706185958732150628658840549,1497708180086592777523052138218,1424522042433351032637261634443,139705644704663405802283141501,969574155280950329072976076470,1460502464660963605803123781403,1000965822531684043253591766328,44892684975983538323536806207,331149921595039367939011128389;\
1007452184054163912177148277616,37055405860855552453958546449,212233802794605483576690791799,584674247487936996828807020476,659677365015554567492060327154,253741593722529042909224910409,752787998361638743587861067114,139407953704843280569743116343,487627295650719329650159132452,1307791627528592694419673515818,1176763111394856779970526205482;\
1234530374160787559405305419735,1152011284830888554756198036467,1528402943592946717429094989166,985547193676442792539231365465,1162222232508551883553747575768,1168402781935060686104442741598,709633995007228259804245487,698567732292823173749466716207,1390324614262872070759191241290,333657467621719398472630417971,1142294203806604569401084929217;\
937156273944221167914502991074,1412504627468806530374743416734,654040896904944513078040709566,229267582875967179557370878015,411412741103795578345640020535,79042438394041961972340118076,751623089225494932942386056232,816185832193666523558258762935,300304783925945233400571838617,1507203559940119961853817337190,1155654032297241365872015591339;\
556108651162987778551078076249,47407052064863010663493248813,443329601638202510448638286914,303576250657433241338308816721,1344770905375057776587111262551,1060985873197419481150416587152,1073009554672165953251154240781,968430526205280128298860017301,28399639453539583764862136436,700430859746442599313093345923,1272521441892046074826918944970;\
302527720785038280200711757108,278811166137266018378090412396,702527221183187196514852546784,21869260992388663313589874910,712379558055785865145024080297,422025768596695749554081412938,1362501944124408342636296563813,454574711147415070095697133617,681922796476626849853495313967,389080488313768977238464619712,1067290286265635466681658374583;\
442409672289937773925745385969,1403233477318206580888976227681,1140852496074713591541117380815,1140355172081836608171611276885,376691718638196656100600693796,690648629953248479485011697339,1140204905307029083904555140088,109588303819427770723511918738,1209278176960397012556936162083,1405111767853367847880249722937,410289941143616604765568812862;\
808623598741334272327869226885,219075271378467324765347037866,1295862593041925319029313284155,971666988741186281654934149293,1391311648162720887867014330393,170595864495065355155709222290,1087000171397758215629208447688,264953196300014709739205227461,1036245065069895591367237782364,1408198661215809610648489340418,863553517370778662129383192027]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 166 lists. */
