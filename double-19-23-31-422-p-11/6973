/* Comments begin... 
Coefficient of   x^21 * y^1               = -1
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 0
Coefficient of   x^6 * y^8 * z^4         = 5
Coefficient of   x^4 * y^11 * z^3         = -2
Coefficient of   x^2 * y^14 * z^2         = -3
Coefficient of   x^1 * z^13               = 0
Coefficient of   y^17 * z^1               = -3

Here is the polynomial we're using this time:

-1*x^21*y^1 + 5*x^6*y^8*z^4 + -2*x^4*y^11*z^3 + -3*x^2*y^14*z^2 + -3*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^21 * y^1               = -3
Coefficient of   x^10 * y^2 * z^6         = 2
Coefficient of   x^8 * y^5 * z^5         = -1
Coefficient of   x^6 * y^8 * z^4         = 1
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = 2
Coefficient of   x^1 * z^13               = 1
Coefficient of   y^17 * z^1               = -5

Here is the polynomial we're using this time:

-3*x^21*y^1 + 2*x^10*y^2*z^6 + -1*x^8*y^5*z^5 + 1*x^6*y^8*z^4 + 2*x^2*y^14*z^2 + 1*x^1*z^13 + -5*y^17*z^1

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 166
[10, 2, 5, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[20, 1, 0, 0]  	403	6 
[8, 5, 5, 0]  	422	5 
[8, 8, 4, 0]  	460	7 
[6, 11, 4, 0]  	491	6 
[6, 14, 3, 0]  	529	7 
[5, 0, 15, 0]  	560	6 
[18, 5, 4, 0]  	581	10 
[14, 11, 3, 0]  	612	10 
[18, 8, 3, 0]  	619	10 
[14, 14, 2, 0]  	650	9 
[16, 14, 1, 0]  	657	9 
[9, 3, 14, 0]  	674	8 
[13, 0, 14, 0]  	681	9 
[12, 17, 2, 0]  	681	9 
[15, 0, 13, 0]  	688	8 
[10, 19, 2, 0]  	689	9 
[9, 20, 2, 0]  	693	7 
[7, 22, 2, 0]  	701	8 
[7, 6, 14, 0]  	705	8 
[8, 23, 1, 0]  	712	8 
[7, 8, 13, 0]  	720	8 
[6, 9, 13, 0]  	724	7 
[10, 22, 1, 0]  	727	8 
[6, 8, 14, 0]  	732	7 
[5, 25, 2, 0]  	732	7 
[19, 0, 12, 0]  	733	8 
[14, 19, 1, 0]  	734	7 
[5, 9, 14, 0]  	736	7 
[7, 25, 1, 0]  	739	7 
[6, 26, 1, 0]  	743	7 
[8, 26, 0, 0]  	750	7 
[5, 11, 13, 0]  	751	7 
[4, 12, 13, 0]  	755	6 
[12, 23, 0, 0]  	757	7 
[6, 28, 0, 0]  	758	7 
[5, 29, 0, 0]  	762	6 
[4, 11, 14, 0]  	763	6 
[10, 25, 0, 0]  	765	7 
[4, 26, 3, 0]  	767	6 
[5, 28, 1, 0]  	770	7 
[5, 24, 4, 0]  	771	6 
[14, 22, 0, 0]  	772	7 
[4, 29, 1, 0]  	774	6 
[19, 18, 0, 0]  	775	7 
[18, 19, 0, 0]  	779	7 
[5, 15, 11, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	6 
[3, 29, 2, 0]  	786	5 
[5, 18, 9, 0]  	788	6 
[5, 14, 12, 0]  	789	6 
[4, 31, 0, 0]  	789	6 
[4, 15, 12, 0]  	793	5 
[3, 32, 0, 0]  	793	5 
[5, 21, 7, 0]  	795	6 
[5, 17, 10, 0]  	796	6 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[5, 20, 8, 0]  	803	6 
[17, 21, 0, 0]  	806	6 
[4, 25, 5, 0]  	806	6 
[4, 21, 8, 0]  	807	5 
[4, 17, 11, 0]  	808	5 
[5, 23, 6, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[4, 24, 6, 0]  	814	5 
[4, 20, 9, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 12, 16, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 10, 17, 0]  	833	5 
[4, 6, 20, 0]  	834	5 
[3, 11, 17, 0]  	837	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[2, 0, 29, 0]  	937	3 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[2, 4, 27, 0]  	967	3 
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[11, 0, 14, 1]  	643	9 
[12, 20, 1, 1]  	719	8 
[16, 20, 0, 1]  	764	7 
[4, 14, 12, 1]  	770	6 
[4, 18, 10, 1]  	800	5 
[2, 32, 1, 1]  	805	5 
[2, 29, 5, 1]  	860	4 
[2, 4, 24, 1]  	874	4 
[2, 1, 27, 1]  	898	4 
[2, 0, 28, 1]  	906	4 
[10, 17, 2, 29]  	643	7 
[10, 23, 0, 29]  	719	5 
[5, 21, 6, 29]  	764	5 
[3, 31, 0, 29]  	770	5 
[4, 24, 5, 29]  	783	5 
[3, 4, 21, 29]  	800	4 
[1, 18, 12, 29]  	805	3 
[1, 15, 16, 29]  	860	3 
[0, 35, 4, 29]  	929	2 
------
The gap is between 2 and 28.
Lengths: 3 3 5 5 3 4.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^4*y^17*z^3
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 1.
The invariant extra is equal to 1.
Start computing 11^3 Delta^1 (x1x2x3)^10... Done.
Start computing 11^4 Delta^2 (x1x2x3)^10... Done.
Start computing 11^5 Delta^3 (x1x2x3)^10... Done.
Start computing 11^6 Delta^4 (x1x2x3)^10... Done.
Start computing 11^7 Delta^5 (x1x2x3)^10... Done.
Start computing 11^8 Delta^6 (x1x2x3)^10... Done.
Start computing 11^9 Delta^7 (x1x2x3)^10... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[1196928734573482095004834349674,1549823408552257365919134459819,228287975121291375483939354728,268249195171421646757725858455,514284866477797418966109748942,1467283070106447623667356245956,1343851483577969756708139308927,240581423008235629705015903602,805159215718550924157830581194,1516903827732281251504178973959,1487560955537249611327569872942;\
311610289001762292151786478581,993007134985721826512152131548,1161809071783105786872990980716,358717235100157359399130546433,610823854237960188891787730140,1163726870730823393454588998342,256162647168809545380100249365,576347787134541351334692364242,1351534254028650293419632197944,413481957609999419766583456531,117611995561384178873000456903;\
436490956915907282815799458258,1491743030090094438729269028633,1040988744784759471745417069111,452666130086074384151600489506,834696815247484325775105552756,876522160216418546166891390660,1295091996923992346791212461653,1062037924552447954607343646777,1001093527344817055763283315811,1026902652808816837856306677855,448957397556238018728416104848;\
1256283151131934277911628943505,1177960418801728891042522858740,26191351942219720661892057796,1101680762979665090834420679288,1415703537769496354769695209751,737556436572196700208813131750,539378356528684153327640840563,180971521032901018605541573239,1458934171748599223817455365115,563403601627734911320376135443,452189318491117927592355133739;\
714838083780320051083607043027,920150162856666378598458978101,91728271659190968223361290619,1184055624948189478323801469496,976651036580482419397741799772,509071631944786282713781987547,288736585601267114373943350239,1064022615620746832869846710947,1257772140240632935128396254871,1065457005091946675614511987057,1431726967643605489189299932196;\
1317052486500008366482517273343,903375773268320251308751519050,678251579354860010936817388088,389047036195506374165080460849,177630049462745203662454620207,506966680890062464112193264915,302939207548149595538158079267,1414033066602661195103391062689,515142396709869718373125691633,959862567995929047663854287174,522072972476548056329522186430;\
1244648972792312644802937964787,824502574354549625870944598047,1253703365091767786356693654251,1040421353254810160746006635257,113324221714293868698865305267,1576916595053310701487558045631,376701481070057146919399292512,744039916389458068215901159138,1198010831073688600736209874784,1195943546258963054493070305780,119364161941160114246052498076;\
717966285971151427025275850221,807867238270946219433001413243,103682619802479609399878422004,1269248233650934343110829513901,921023205178590670217080167885,1189436664274563080865885417637,1324884943420259490506990588726,530742497384957034537838779697,1188207782363495772133827236038,1567721576332910254163526614028,725178820365682542999163918487;\
1467631037114033236873165313708,443105348968424989142079687332,1317910504487587115902217767390,330450761620329370286149219468,227164469639682537363609221695,1122654097581761495951924758540,954592506886920766194842400900,1448684244978559673785302081359,1491322278598234520042849196205,1100502642647704721788239545449,1113178060901647189699734618299;\
825938741004990795667864399942,1275966307849322376829289852569,329543648135366431688359325996,1394816920312314623917026670590,1256791852141656452928740417654,10784631566026751562856729662,864336519473226607641660604712,390264517914710815132222816636,707197741602400914366093421829,403242388509741454402827302402,977504278954706470577501306129;\
206020362956762957962802951476,1309288124296671297556883606384,633209970295485959901448671958,272515252824575152688641646235,297829541742358749597830005650,628784656502514775026925471277,653674454797185028256301174428,575065575023794781390027003011,66161322636055266053560927493,430366379991295609347052999586,1012310297078411734865899688801]
/* 
This matrix times 11^(-1) should be the matrix of frobenius.
*/ 
B = 11^(-1) * A; 
/* Freed 166 lists. */
