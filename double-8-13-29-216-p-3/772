/* Comments begin... 
Coefficient of   x^27                     = -1
Coefficient of   x^14 * y^8               = 1
Coefficient of   x^12 * y^7 * z^1         = -1
Coefficient of   x^10 * y^6 * z^2         = 0
Coefficient of   x^8 * y^5 * z^3         = 0
Coefficient of   x^6 * y^4 * z^4         = 0
Coefficient of   x^4 * y^3 * z^5         = -1
Coefficient of   x^2 * y^2 * z^6         = 1
Coefficient of   x^1 * y^16               = -1
Coefficient of   y^1 * z^7               = -1

Here is the polynomial we're using this time:

-1*x^27 + 1*x^14*y^8 + -1*x^12*y^7*z^1 + -1*x^4*y^3*z^5 + 1*x^2*y^2*z^6 + -1*x^1*y^16 + -1*y^1*z^7

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
The final length of G is 204
[12, 7, 0, 0]  	187	4 
[12, 6, 1, 0]  	203	6 
[27, 0, 0, 0]  	216	2  <--- 1
[6, 4, 4, 0]  	216	5 
[7, 18, 0, 0]  	290	8 
[19, 3, 4, 0]  	307	4 
[17, 3, 5, 0]  	320	7 
[17, 2, 6, 0]  	336	7 
[17, 1, 7, 0]  	352	8 
[10, 17, 2, 0]  	359	8 
[11, 15, 3, 0]  	370	8 
[7, 2, 10, 0]  	372	7 
[10, 16, 3, 0]  	375	7 
[9, 1, 10, 0]  	375	7 
[6, 3, 10, 0]  	377	5 
[5, 17, 4, 0]  	377	7 
[11, 0, 10, 0]  	378	7 
[6, 1, 11, 0]  	380	7 
[19, 0, 8, 0]  	384	7 
[5, 2, 11, 0]  	385	6 
[4, 16, 5, 0]  	385	6 
[25, 1, 6, 0]  	387	7 
[23, 0, 7, 0]  	387	7 
[9, 0, 11, 0]  	391	7 
[5, 25, 1, 0]  	394	6 
[5, 14, 6, 0]  	396	6 
[17, 0, 9, 0]  	397	6 
[5, 23, 2, 0]  	397	6 
[5, 12, 7, 0]  	399	6 
[5, 1, 12, 0]  	401	6 
[4, 15, 6, 0]  	401	6 
[5, 10, 8, 0]  	402	6 
[7, 0, 12, 0]  	404	6 
[4, 13, 7, 0]  	404	5 
[5, 8, 9, 0]  	405	6 
[3, 16, 6, 0]  	406	6 
[4, 11, 8, 0]  	407	5 
[5, 6, 10, 0]  	408	6 
[4, 27, 1, 0]  	412	5 
[5, 22, 3, 0]  	413	5 
[4, 7, 10, 0]  	413	5 
[3, 30, 0, 0]  	414	5 
[4, 25, 2, 0]  	415	5 
[4, 5, 11, 0]  	416	6 
[5, 29, 0, 0]  	417	5 
[3, 28, 1, 0]  	417	4 
[3, 26, 2, 0]  	420	4 
[3, 15, 7, 0]  	422	5 
[3, 24, 3, 0]  	423	4 
[3, 13, 8, 0]  	425	4 
[3, 22, 4, 0]  	426	4 
[3, 11, 9, 0]  	428	4 
[3, 20, 5, 0]  	429	5 
[2, 12, 9, 0]  	433	3 
[3, 7, 11, 0]  	434	4 
[2, 30, 1, 0]  	435	5 
[3, 5, 12, 0]  	437	5 
[2, 26, 3, 0]  	441	3 
[2, 6, 12, 0]  	442	4 
[2, 15, 8, 0]  	443	4 
[2, 33, 0, 0]  	445	5 
[5, 0, 14, 0]  	446	3 
[2, 22, 5, 0]  	447	3 
[2, 11, 10, 0]  	449	2 
[1, 25, 4, 0]  	449	2 
[2, 20, 6, 0]  	450	4 
[2, 9, 11, 0]  	452	2 
[1, 23, 5, 0]  	452	2 
[1, 21, 6, 0]  	455	3 
[1, 10, 11, 0]  	457	2 
[2, 5, 13, 0]  	458	4 
[3, 0, 15, 0]  	459	3 
[1, 8, 12, 0]  	460	2 
[1, 35, 0, 0]  	463	3 
[2, 1, 15, 0]  	464	4 
[0, 9, 12, 0]  	465	1 
[2, 19, 7, 0]  	466	4 
[0, 36, 0, 0]  	468	2  <--- 2
[1, 29, 3, 0]  	472	3 
[0, 23, 6, 0]  	473	1 
[1, 34, 1, 0]  	479	3 
[2, 0, 16, 0]  	480	3 
[0, 8, 13, 0]  	481	1 
[0, 35, 1, 0]  	484	2 
[1, 19, 8, 0]  	487	3 
[0, 22, 7, 0]  	489	1 
[1, 6, 14, 0]  	492	2 
[1, 15, 10, 0]  	493	3 
[1, 33, 2, 0]  	495	3 
[0, 7, 14, 0]  	497	1 
[0, 34, 2, 0]  	500	2 
[1, 0, 17, 0]  	501	2 
[1, 18, 9, 0]  	503	3 
[0, 21, 8, 0]  	505	1 
[1, 5, 15, 0]  	508	2 
[0, 6, 15, 0]  	513	1 
[0, 33, 3, 0]  	516	2 
[0, 20, 9, 0]  	521	1 
[0, 29, 5, 0]  	522	2 
[0, 5, 16, 0]  	529	1 
[0, 19, 10, 0]  	537	1 
[0, 4, 17, 0]  	545	1 
[0, 0, 19, 0]  	551	1  <--- 3
[0, 18, 11, 0]  	553	1 
[0, 3, 18, 0]  	561	1 
[19, 2, 5, 1]  	323	8 
[11, 3, 7, 1]  	330	10 
[15, 3, 6, 1]  	333	7 
[11, 17, 1, 1]  	338	10 
[11, 2, 8, 1]  	346	9 
[15, 2, 7, 1]  	349	7 
[9, 17, 2, 1]  	351	9 
[11, 16, 2, 1]  	354	9 
[7, 3, 9, 1]  	356	8 
[9, 2, 9, 1]  	359	8 
[15, 1, 8, 1]  	365	7 
[9, 16, 3, 1]  	367	8 
[6, 18, 3, 1]  	369	7 
[23, 1, 6, 1]  	371	8 
[8, 17, 3, 1]  	372	7 
[13, 1, 9, 1]  	378	7 
[22, 0, 7, 1]  	379	8 
[15, 0, 9, 1]  	381	7 
[8, 0, 11, 1]  	383	7 
[6, 26, 0, 1]  	386	7 
[6, 24, 1, 1]  	389	7 
[5, 27, 0, 1]  	391	6 
[6, 22, 2, 1]  	392	7 
[6, 0, 12, 1]  	396	6 
[4, 29, 0, 1]  	409	5 
[4, 0, 13, 1]  	409	5 
[4, 9, 9, 1]  	410	5 
[3, 1, 13, 1]  	414	5 
[4, 23, 3, 1]  	418	5 
[4, 21, 4, 1]  	421	5 
[3, 0, 14, 1]  	430	4 
[2, 8, 11, 1]  	439	3 
[1, 20, 7, 1]  	471	3 
[0, 32, 4, 1]  	532	2 
[10, 3, 8, 2]  	351	9 
[7, 17, 3, 2]  	364	8 
[5, 0, 12, 2]  	388	6 
[4, 1, 12, 2]  	393	6 
[5, 21, 3, 2]  	400	6 
[3, 9, 10, 2]  	431	4 
[2, 10, 10, 2]  	436	3 
[2, 24, 4, 2]  	444	3 
[2, 29, 2, 2]  	451	4 
[2, 4, 14, 2]  	474	4 
[1, 7, 13, 2]  	476	2 
[1, 4, 16, 2]  	524	2 
[26, 0, 0, 3]  	208	6 
[18, 3, 4, 3]  	299	8 
[16, 3, 5, 3]  	312	8 
[16, 2, 6, 3]  	328	8 
[14, 2, 7, 3]  	341	8 
[16, 1, 7, 3]  	344	9 
[14, 1, 8, 3]  	357	8 
[11, 1, 9, 3]  	362	8 
[14, 0, 9, 3]  	373	8 
[18, 0, 8, 3]  	376	8 
[3, 29, 0, 3]  	401	5 
[18, 2, 5, 4]  	315	9 
[14, 3, 6, 4]  	325	8 
[9, 3, 8, 4]  	343	9 
[22, 1, 6, 4]  	363	9 
[1, 9, 11, 46]  	444	2 
[11, 16, 1, 47]  	325	5 
[8, 17, 2, 47]  	343	8 
[10, 15, 3, 47]  	362	6 
[2, 0, 15, 47]  	451	3 
[11, 7, 1, 48]  	208	5 
[6, 19, 0, 48]  	295	7 
[20, 0, 7, 48]  	363	8 
[5, 16, 4, 48]  	364	6 
[10, 0, 10, 48]  	370	7 
[4, 14, 6, 48]  	388	3 
[5, 9, 8, 48]  	389	6 
[3, 15, 6, 48]  	393	4 
[4, 6, 10, 48]  	400	5 
[3, 0, 13, 48]  	401	4 
[2, 30, 0, 48]  	406	5 
[2, 23, 4, 48]  	431	3 
[1, 24, 4, 48]  	436	2 
[1, 18, 8, 48]  	474	3 
[0, 21, 7, 48]  	476	1 
[0, 18, 10, 48]  	524	1 
[5, 4, 4, 49]  	208	3 
[16, 1, 6, 49]  	315	7 
[10, 17, 1, 49]  	330	6 
[4, 12, 5, 49]  	333	3 
[9, 16, 2, 49]  	338	7 
[3, 11, 6, 49]  	341	3 
[5, 1, 10, 49]  	343	3 
[8, 2, 9, 49]  	351	8 
[9, 15, 3, 49]  	354	7 
[2, 24, 1, 49]  	357	2 
[2, 11, 7, 49]  	362	3 
[3, 5, 11, 49]  	408	4 
[1, 22, 4, 49]  	410	2 
[1, 15, 8, 49]  	435	2 
[1, 29, 2, 49]  	443	3 
[0, 34, 1, 49]  	471	2 
[0, 3, 17, 49]  	532	1 
------
The gap is between 5 and 45.
Lengths: 3 3 6 6 3 4.
For 490 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^17*z^9
1*y^31*z^3
1*y^2*z^16

For 274 = 3*d/2-d1-d2-d3 you get 6 in char 0.
1*x^5*y^18
1*x^4*y^3*z^7
1*x^3*y^17*z^1
1*x^2*y^2*z^8
1*x^1*y^16*z^2
1*y^1*z^9

For 58 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*y^2
1*x^2*y^1*z^1
1*z^2

Extra powers of p used 2.
The invariant extra is equal to 5.
Start computing 3^3 Delta^1 (x1x2x3)^2... Done.
Start computing 3^4 Delta^2 (x1x2x3)^2... Done.
Start computing 3^5 Delta^3 (x1x2x3)^2... Done.
Start computing 3^6 Delta^4 (x1x2x3)^2... Done.
Start computing 3^7 Delta^5 (x1x2x3)^2... Done.
Start computing 3^8 Delta^6 (x1x2x3)^2... Done.
Start computing 3^9 Delta^7 (x1x2x3)^2... Done.
Start computing 3^10 Delta^8 (x1x2x3)^2... Done.
Start computing 3^11 Delta^9 (x1x2x3)^2... Done.
Start computing 3^12 Delta^10 (x1x2x3)^2... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 12 
*/
A = \
[19034945650930182640650,3967018410587703976320,10513861246295725231656,9498650827176599928660,14296129535879251332237,10083240191882506860738,3366494178815933377263,8236801115219857979997,12042114945100517308797,8241978821883039836406,18366732319673199386817,5133423095540048738421;\
24625892354289342093756,1809796244931488059002,2431183799316890986794,10143278070078172279212,18278852120254001835234,22684475896809003729702,8218233182691942289272,4354904956693343212908,25819837273364302249155,14260325894989120289376,5153892443298690582663,19606714131913304078340;\
13175701016912580943764,9900042018321255660924,5324763742437960263880,16853997198277590945660,13012922988082431978651,17463989381270526669222,24757352142452067114117,21854006459820927846495,8375261117078241843507,11069178354066101253426,16759987454174387214411,23751653479260146132067;\
11791647940100384294658,6447032813610480697833,4589429548786678378629,1251684749910283497405,14934275393870463657282,14776408191961115857566,4736365050940741926261,14702448693913919441838,16761599437925946470031,855841119445601217621,4742344653654526454484,12206526767894739476700;\
13260551763984479545560,9630719240514137130819,846902720634442680036,18796105773618137313885,5403967261907265828495,357361105569881869557,3774619123022714481045,24394591724161877702388,20130724243636041988836,8643844960048602670518,26252293807083726115830,17320808696159901582405;\
10731159909644594997312,687493834268112473626,11419526815028726391081,150873599706852756591,6132990142722017632923,11403598923211547922237,24191411246315123163534,13698214431387115268853,3460079743138107059994,14646636499877361677610,23560243281233296320015,14053109772740462066376;\
4664279140573452657147,4705394554523487152157,5010094244043577805598,16877491952541189543468,8884045968192251103465,22168224829145981534931,2247695483690343283956,8370317863125329639157,16309134101009868463530,5025428256390650011962,20118491452143492974523,12685470348397479904998;\
11440986671299846975737,8829553342722688823349,4055221708139036711028,26103060663179063804100,24726556499371859872467,1103879165262713896086,8846271089735971406508,17139645502529057737857,11352565133197434600975,1116936964008595555686,25255595163734212372587,8247058284246311344608;\
18775387547030238322593,13438090673564346209168,5381998085317572369420,7459723413981944072568,5427961853578753992669,16172266026593754132426,18129691383818599593405,23002940877619318127514,5161951552818829294071,18263404355064930368433,8832631020482505381273,17026660554992785690542;\
20329065810119379419505,21992602524657174984756,2337780315701589693417,25720636296487513093119,24508374687363777149196,8789631867690158660004,17148427034168176825257,14227823515245058908612,7134719358669582237831,16685857385816269071708,19477163980261301025879,4429219840310500106589;\
5481761624971292516928,1951913589219347819610,3537431135675675709699,5771134298027168618679,9658069572410670301686,13416424645398561276372,10261815427621113382908,22010079609076332941091,1881308841600274043805,23425527368039019398712,21403225345667772372381,248069142524146982400;\
20761972958832892412037,14244003110826998320698,23730392002887513331653,22447694270563712834373,25348162680785831412807,19624931378953432695585,7015144605184875638043,23727048445522592772057,16813016337508564374909,7461176195455061018706,23543117329175902973826,18998421391701738478359]
/* 
This matrix times 3^(-2) should be the matrix of frobenius.
*/ 
B = 3^(-2) * A; 
/* Freed 36 lists. */
