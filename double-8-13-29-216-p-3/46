/* Comments begin... 
Coefficient of   x^27                     = 1
Coefficient of   x^14 * y^8               = 0
Coefficient of   x^12 * y^7 * z^1         = -1
Coefficient of   x^10 * y^6 * z^2         = 1
Coefficient of   x^8 * y^5 * z^3         = 0
Coefficient of   x^6 * y^4 * z^4         = 0
Coefficient of   x^4 * y^3 * z^5         = 0
Coefficient of   x^2 * y^2 * z^6         = 0
Coefficient of   x^1 * y^16               = 1
Coefficient of   y^1 * z^7               = 1

Here is the polynomial we're using this time:

1*x^27 + -1*x^12*y^7*z^1 + 1*x^10*y^6*z^2 + 1*x^1*y^16 + 1*y^1*z^7

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 162
[12, 7, 0, 0]  	187	3 
[12, 6, 1, 0]  	203	4 
[27, 0, 0, 0]  	216	2  <--- 1
[10, 6, 2, 0]  	216	3 
[3, 17, 0, 0]  	245	4 
[15, 2, 6, 0]  	320	5 
[17, 1, 6, 0]  	323	3 
[15, 1, 7, 0]  	336	5 
[17, 0, 7, 0]  	339	6 
[9, 12, 4, 0]  	344	6 
[13, 1, 8, 0]  	349	5 
[6, 10, 6, 0]  	352	5 
[9, 4, 8, 0]  	356	6 
[11, 3, 8, 0]  	359	7 
[9, 2, 9, 0]  	359	7 
[8, 16, 3, 0]  	359	7 
[11, 1, 9, 0]  	362	5 
[8, 1, 10, 0]  	367	7 
[13, 5, 7, 0]  	372	6 
[7, 2, 10, 0]  	372	7 
[6, 16, 4, 0]  	372	7 
[8, 15, 4, 0]  	375	6 
[3, 16, 5, 0]  	377	4 
[6, 1, 11, 0]  	380	7 
[8, 0, 11, 0]  	383	6 
[8, 9, 7, 0]  	384	6 
[3, 1, 12, 0]  	385	5 
[6, 15, 5, 0]  	388	6 
[8, 8, 8, 0]  	400	6 
[4, 15, 6, 0]  	401	5 
[7, 7, 9, 0]  	408	6 
[6, 6, 10, 0]  	416	6 
[5, 0, 13, 0]  	417	5 
[4, 12, 8, 0]  	420	4 
[5, 7, 10, 0]  	421	5 
[4, 6, 11, 0]  	429	5 
[2, 12, 9, 0]  	433	3 
[3, 7, 11, 0]  	434	4 
[4, 11, 9, 0]  	436	3 
[2, 10, 10, 0]  	436	3 
[4, 9, 10, 0]  	439	3 
[2, 8, 11, 0]  	439	3 
[2, 6, 12, 0]  	442	4 
[2, 15, 8, 0]  	443	4 
[2, 33, 0, 0]  	445	5 
[1, 25, 4, 0]  	449	2 
[1, 21, 6, 0]  	455	3 
[1, 10, 11, 0]  	457	2 
[3, 0, 15, 0]  	459	3 
[1, 8, 12, 0]  	460	2 
[1, 35, 0, 0]  	463	3 
[2, 30, 2, 0]  	464	4 
[1, 24, 5, 0]  	465	1 
[0, 9, 12, 0]  	465	1 
[2, 19, 7, 0]  	466	4 
[0, 36, 0, 0]  	468	2  <--- 2
[1, 20, 7, 0]  	471	3 
[0, 23, 6, 0]  	473	1 
[1, 7, 13, 0]  	476	2 
[1, 34, 1, 0]  	479	3 
[0, 8, 13, 0]  	481	1 
[0, 35, 1, 0]  	484	2 
[0, 22, 7, 0]  	489	1 
[1, 6, 14, 0]  	492	2 
[2, 1, 16, 0]  	493	3 
[1, 15, 10, 0]  	493	3 
[0, 7, 14, 0]  	497	1 
[1, 0, 17, 0]  	501	2 
[2, 4, 15, 0]  	503	3 
[1, 18, 9, 0]  	503	3 
[0, 21, 8, 0]  	505	1 
[1, 5, 15, 0]  	508	2 
[0, 6, 15, 0]  	513	1 
[0, 20, 9, 0]  	521	1 
[0, 29, 5, 0]  	522	2 
[0, 34, 3, 0]  	529	1 
[0, 5, 16, 0]  	529	1 
[0, 32, 4, 0]  	532	2 
[0, 19, 10, 0]  	537	1 
[0, 4, 17, 0]  	545	1 
[0, 0, 19, 0]  	551	1  <--- 3
[0, 18, 11, 0]  	553	1 
[0, 3, 18, 0]  	561	1 
[10, 5, 3, 1]  	232	5 
[23, 5, 2, 1]  	307	6 
[11, 2, 7, 1]  	317	3 
[10, 1, 9, 1]  	354	6 
[8, 3, 9, 1]  	364	8 
[4, 13, 7, 1]  	404	4 
[4, 9, 9, 1]  	410	4 
[6, 8, 9, 1]  	413	5 
[3, 15, 7, 1]  	422	5 
[3, 13, 8, 1]  	425	4 
[3, 11, 9, 1]  	428	4 
[3, 0, 14, 1]  	430	4 
[2, 30, 1, 1]  	435	5 
[2, 20, 6, 1]  	450	4 
[1, 23, 5, 1]  	452	2 
[2, 5, 13, 1]  	458	4 
[1, 29, 3, 1]  	472	3 
[2, 4, 14, 1]  	474	4 
[2, 0, 16, 1]  	480	3 
[1, 19, 8, 1]  	487	3 
[1, 33, 2, 1]  	495	3 
[0, 34, 2, 1]  	500	2 
[0, 33, 3, 1]  	516	2 
[1, 4, 16, 1]  	524	2 
[16, 0, 7, 2]  	331	7 
[12, 1, 8, 2]  	341	6 
[10, 3, 8, 2]  	351	8 
[6, 9, 8, 2]  	397	5 
[5, 10, 8, 2]  	402	5 
[4, 8, 10, 2]  	426	4 
[2, 26, 3, 2]  	441	3 
[2, 24, 4, 2]  	444	3 
[2, 22, 5, 2]  	447	3 
[2, 29, 2, 2]  	451	4 
[2, 1, 15, 2]  	464	4 
[26, 0, 0, 3]  	208	4 
[14, 2, 6, 3]  	312	6 
[16, 1, 6, 3]  	315	5 
[14, 1, 7, 3]  	328	6 
[5, 14, 6, 3]  	396	5 
[4, 0, 13, 3]  	409	5 
[3, 9, 10, 3]  	431	4 
[22, 5, 2, 4]  	299	7 
[5, 8, 9, 46]  	405	5 
[9, 6, 3, 47]  	237	4 
[9, 16, 2, 47]  	338	4 
[7, 9, 7, 47]  	376	6 
[7, 8, 8, 47]  	392	6 
[2, 7, 11, 47]  	426	3 
[11, 7, 1, 48]  	208	3 
[9, 15, 2, 48]  	325	3 
[9, 1, 9, 48]  	346	3 
[8, 2, 9, 48]  	351	5 
[3, 13, 7, 48]  	396	4 
[1, 7, 11, 48]  	418	2 
[1, 12, 9, 48]  	425	2 
[2, 23, 4, 48]  	431	3 
[1, 11, 10, 48]  	441	2 
[0, 18, 10, 48]  	524	1 
[9, 6, 2, 49]  	208	2 
[3, 16, 0, 49]  	232	3 
[14, 1, 6, 49]  	299	6 
[9, 0, 8, 49]  	304	2 
[14, 0, 7, 49]  	315	6 
[7, 15, 3, 49]  	338	3 
[6, 1, 10, 49]  	351	4 
[8, 0, 10, 49]  	354	3 
[5, 9, 8, 49]  	389	5 
[3, 8, 9, 49]  	389	4 
[1, 7, 10, 49]  	389	2 
[1, 12, 8, 49]  	396	2 
[2, 22, 4, 49]  	418	3 
[1, 34, 0, 49]  	450	3 
[0, 8, 12, 49]  	452	1 
[1, 19, 7, 49]  	458	3 
[0, 22, 6, 49]  	460	1 
[1, 0, 16, 49]  	472	2 
[0, 33, 2, 49]  	487	2 
[0, 4, 15, 49]  	487	1 
------
The gap is between 5 and 45.
Lengths: 3 3 6 6 3 4.
For 490 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^17*z^9
1*y^31*z^3
1*y^2*z^16

For 274 = 3*d/2-d1-d2-d3 you get 6 in char 0.
1*x^8*y^5*z^5
1*x^6*y^4*z^6
1*x^4*y^3*z^7
1*x^2*y^2*z^8
1*x^1*y^16*z^2
1*y^1*z^9

For 58 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*y^2
1*x^2*y^1*z^1
1*z^2

Extra powers of p used 3.
The invariant extra is equal to 5.
Start computing 3^3 Delta^1 (x1x2x3)^2... Done.
Start computing 3^4 Delta^2 (x1x2x3)^2... Done.
Start computing 3^5 Delta^3 (x1x2x3)^2... Done.
Start computing 3^6 Delta^4 (x1x2x3)^2... Done.
Start computing 3^7 Delta^5 (x1x2x3)^2... Done.
Start computing 3^8 Delta^6 (x1x2x3)^2... Done.
Start computing 3^9 Delta^7 (x1x2x3)^2... Done.
Start computing 3^10 Delta^8 (x1x2x3)^2... Done.
Start computing 3^11 Delta^9 (x1x2x3)^2... Done.
Start computing 3^12 Delta^10 (x1x2x3)^2... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 12 
*/
A = \
[21616404463183060650012,12068118873922722819168,17602321276748689467915,13258059777363074515614,6021069919181816676228,2366129364128682123393,6667117266303630390699,19861083112281143016240,15849893855666737317663,17568242060875904662533,20491758849000219323283,2796857695023267658995;\
6794225107541416882707,6096590133072591965304,7477890483066825594396,13504747279332706788438,18877336197809947807275,14580425217491634208374,16703848878164485775397,4432657646425141116009,1977787937872147287690,843788099617929093465,1751811119668312509366,16358954776802696244015;\
26542593584404058394882,15554886530125767782229,19436038273354163324607,16268871810123429324966,8489557885131838453230,14105046279367765492011,14447073176277355075959,18798656222192489877825,22470646918548186869256,26230718336934036979413,23075655016445359435584,21897283678416595978155;\
25360786780471811209671,24068585112616904951808,21850490981379173593014,22253899360507658146476,24435389637717219947169,15659827583124182805828,8861443893488287916451,5749225079858796870738,11986719440758118575119,18720240805216043463384,3529651352354763904548,9566382089813434528284;\
21638052000793841237402,24932527089305357045797,16304583971314353035296,12472056841139924950161,1805248346541085765035,26154595284731902926855,7040770032380983764147,16448403122019869067279,25177876265434461006780,4071810118119241989483,10262382889980345364602,8245514010000932985357;\
25996310552175947455087,24383685761100990217688,18627606426580314621761,14211830825721980404830,11824875623826490553289,21429876683760927789357,14620926427342012905057,16794224049603748096458,387372414376851163353,11250326489439848608512,17001238290609316693860,1919633151186441721593;\
13564293928341002900666,22121417636949104306194,6531496565180674469506,13042687953005887909167,24641100852077157733917,16896811784228720653473,7750658086221141329310,22681479009577702049190,23310326025559577109825,25932411111879568800432,20240867093627639103408,23840686317494525265009;\
7536085013538788045514,16558385424350534382801,25848988668201128448522,12577572580751776510326,15897320898641864913285,22951170971571183626772,9569897222489389041921,25794592469172990552618,26468714971210275050175,4691748238119520571808,25340997308280446051469,26236298599261899762618;\
20978648070092468817685,10712714531566651505747,11625667194193913708456,4756177279582199826318,6452861611024377994680,10226476384888960581750,26235370889830853873388,10333562582487753976311,15169502293708393216971,19121457085119898782462,22213067882651267981076,17321575468807816865559;\
21582711584596998645412,461670281326934735915,3375475880933314807172,18736458093570633477129,19210478337256825066248,24760543998192438083805,2604251827640280417687,25465586651706083699421,2471611433407098594300,9315094419629687890764,2525621526312908959035,26468724702332619716328;\
19479677437248456154057,1101048640395564855707,17091764814800848195085,10112513025590023830525,8418384532971833369571,10285029884151120900195,7270268348619993512448,21159143447429649972249,532294761570466211163,12278277359654511617478,24682193131242119674581,20697988797949892673006;\
18989953576692801973042,6599928012094173310301,8236569683235996063296,4524934233659829193683,2657281246433724915531,20687853947736006982827,16297523278761930927516,10879967947721181442191,23516850240210949256547,25077270013047771722397,5662014441048776474388,19546252643719157367321]
/* 
This matrix times 3^(-3) should be the matrix of frobenius.
*/ 
B = 3^(-3) * A; 
/* Freed 33 lists. */
