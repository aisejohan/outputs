/* Comments begin... 
Coefficient of   x^27                     = 0
Coefficient of   x^14 * y^8               = -1
Coefficient of   x^12 * y^7 * z^1         = -1
Coefficient of   x^10 * y^6 * z^2         = -1
Coefficient of   x^8 * y^5 * z^3         = 0
Coefficient of   x^6 * y^4 * z^4         = 0
Coefficient of   x^4 * y^3 * z^5         = 0
Coefficient of   x^2 * y^2 * z^6         = 1
Coefficient of   x^1 * y^16               = 0
Coefficient of   y^1 * z^7               = -1

Here is the polynomial we're using this time:

-1*x^14*y^8 + -1*x^12*y^7*z^1 + -1*x^10*y^6*z^2 + 1*x^2*y^2*z^6 + -1*y^1*z^7

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Not smooth!
Coefficient of   x^27                     = -1
Coefficient of   x^14 * y^8               = -1
Coefficient of   x^12 * y^7 * z^1         = -1
Coefficient of   x^10 * y^6 * z^2         = -1
Coefficient of   x^8 * y^5 * z^3         = 1
Coefficient of   x^6 * y^4 * z^4         = -1
Coefficient of   x^4 * y^3 * z^5         = -1
Coefficient of   x^2 * y^2 * z^6         = -1
Coefficient of   x^1 * y^16               = -1
Coefficient of   y^1 * z^7               = -1

Here is the polynomial we're using this time:

-1*x^27 + -1*x^14*y^8 + -1*x^12*y^7*z^1 + -1*x^10*y^6*z^2 + 1*x^8*y^5*z^3 + -1*x^6*y^4*z^4 + -1*x^4*y^3*z^5 + -1*x^2*y^2*z^6 + -1*x^1*y^16 + -1*y^1*z^7

Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
The final length of G is 214
[12, 7, 0, 0]  	187	7 
[27, 0, 0, 0]  	216	2  <--- 1
[10, 6, 3, 0]  	245	7 
[8, 5, 4, 0]  	245	7 
[8, 4, 5, 0]  	261	8 
[6, 4, 6, 0]  	274	7 
[7, 18, 0, 0]  	290	8 
[25, 6, 1, 0]  	307	13 
[18, 4, 4, 0]  	312	12 
[23, 6, 2, 0]  	320	12 
[21, 5, 3, 0]  	320	12 
[11, 17, 1, 0]  	338	10 
[25, 4, 3, 0]  	339	10 
[23, 3, 4, 0]  	339	10 
[9, 3, 8, 0]  	343	9 
[13, 3, 7, 0]  	346	9 
[11, 2, 8, 0]  	346	9 
[17, 3, 6, 0]  	349	9 
[15, 2, 7, 0]  	349	9 
[21, 3, 5, 0]  	352	9 
[19, 2, 6, 0]  	352	9 
[11, 16, 2, 0]  	354	10 
[7, 3, 9, 0]  	356	8 
[9, 2, 9, 0]  	359	8 
[8, 16, 3, 0]  	359	8 
[11, 1, 9, 0]  	362	8 
[7, 17, 3, 0]  	364	8 
[13, 0, 9, 0]  	365	7 
[8, 1, 10, 0]  	367	8 
[19, 1, 7, 0]  	368	7 
[6, 18, 3, 0]  	369	7 
[7, 2, 10, 0]  	372	7 
[6, 16, 4, 0]  	372	7 
[7, 0, 11, 0]  	375	7 
[6, 3, 10, 0]  	377	7 
[5, 17, 4, 0]  	377	7 
[11, 0, 10, 0]  	378	7 
[6, 1, 11, 0]  	380	7 
[17, 1, 8, 0]  	381	7 
[7, 14, 5, 0]  	383	7 
[19, 0, 8, 0]  	384	7 
[5, 2, 11, 0]  	385	6 
[4, 16, 5, 0]  	385	6 
[6, 26, 0, 0]  	386	7 
[25, 1, 6, 0]  	387	7 
[23, 0, 7, 0]  	387	7 
[6, 24, 1, 0]  	389	7 
[6, 22, 2, 0]  	392	7 
[4, 1, 12, 0]  	393	6 
[5, 25, 1, 0]  	394	6 
[6, 0, 12, 0]  	396	6 
[5, 14, 6, 0]  	396	6 
[5, 23, 2, 0]  	397	6 
[5, 12, 7, 0]  	399	6 
[4, 15, 6, 0]  	401	6 
[4, 13, 7, 0]  	404	5 
[5, 8, 9, 0]  	405	6 
[4, 11, 8, 0]  	407	5 
[5, 6, 10, 0]  	408	6 
[4, 0, 13, 0]  	409	5 
[4, 9, 9, 0]  	410	5 
[4, 27, 1, 0]  	412	5 
[3, 30, 0, 0]  	414	6 
[4, 5, 11, 0]  	416	6 
[3, 28, 1, 0]  	417	4 
[4, 23, 3, 0]  	418	5 
[3, 15, 7, 0]  	422	5 
[3, 24, 3, 0]  	423	4 
[3, 13, 8, 0]  	425	4 
[4, 8, 10, 0]  	426	5 
[3, 20, 5, 0]  	429	5 
[3, 9, 10, 0]  	431	4 
[3, 27, 2, 0]  	433	3 
[2, 12, 9, 0]  	433	3 
[3, 7, 11, 0]  	434	4 
[2, 30, 1, 0]  	435	5 
[3, 5, 12, 0]  	437	5 
[3, 23, 4, 0]  	439	3 
[2, 8, 11, 0]  	439	3 
[2, 6, 12, 0]  	442	4 
[3, 1, 14, 0]  	443	4 
[2, 15, 8, 0]  	443	4 
[2, 24, 4, 0]  	444	3 
[3, 19, 6, 0]  	445	5 
[2, 33, 0, 0]  	445	5 
[2, 22, 5, 0]  	447	3 
[2, 11, 10, 0]  	449	2 
[1, 25, 4, 0]  	449	2 
[2, 20, 6, 0]  	450	4 
[2, 29, 2, 0]  	451	4 
[1, 23, 5, 0]  	452	2 
[1, 21, 6, 0]  	455	3 
[2, 5, 13, 0]  	458	4 
[3, 0, 15, 0]  	459	3 
[1, 35, 0, 0]  	463	3 
[2, 1, 15, 0]  	464	4 
[0, 9, 12, 0]  	465	1 
[2, 19, 7, 0]  	466	4 
[0, 36, 0, 0]  	468	2  <--- 2
[1, 20, 7, 0]  	471	3 
[1, 29, 3, 0]  	472	3 
[0, 23, 6, 0]  	473	1 
[2, 4, 14, 0]  	474	4 
[1, 7, 13, 0]  	476	2 
[1, 34, 1, 0]  	479	3 
[0, 8, 13, 0]  	481	1 
[1, 19, 8, 0]  	487	3 
[0, 22, 7, 0]  	489	1 
[1, 6, 14, 0]  	492	2 
[0, 7, 14, 0]  	497	1 
[0, 34, 2, 0]  	500	2 
[1, 0, 17, 0]  	501	2 
[0, 21, 8, 0]  	505	1 
[1, 5, 15, 0]  	508	2 
[0, 6, 15, 0]  	513	1 
[0, 33, 3, 0]  	516	2 
[0, 20, 9, 0]  	521	1 
[1, 15, 11, 0]  	522	2 
[0, 29, 5, 0]  	522	2 
[1, 4, 16, 0]  	524	2 
[0, 5, 16, 0]  	529	1 
[0, 19, 10, 0]  	537	1 
[0, 4, 17, 0]  	545	1 
[0, 0, 19, 0]  	551	1  <--- 3
[0, 18, 11, 0]  	553	1 
[0, 3, 18, 0]  	561	1 
[10, 6, 2, 1]  	216	4 
[23, 5, 2, 1]  	307	13 
[23, 4, 3, 1]  	323	11 
[11, 3, 7, 1]  	330	10 
[22, 3, 4, 1]  	331	11 
[15, 3, 6, 1]  	333	10 
[19, 3, 5, 1]  	336	10 
[9, 17, 2, 1]  	351	9 
[25, 2, 5, 1]  	371	9 
[23, 1, 6, 1]  	371	8 
[22, 0, 7, 1]  	379	8 
[5, 0, 12, 1]  	388	6 
[5, 27, 0, 1]  	391	6 
[5, 21, 3, 1]  	400	6 
[3, 29, 0, 1]  	401	5 
[5, 10, 8, 1]  	402	6 
[4, 7, 10, 1]  	413	5 
[3, 1, 13, 1]  	414	5 
[4, 25, 2, 1]  	415	5 
[3, 26, 2, 1]  	420	4 
[4, 21, 4, 1]  	421	5 
[3, 22, 4, 1]  	426	4 
[3, 0, 14, 1]  	430	4 
[2, 10, 10, 1]  	436	3 
[1, 10, 11, 1]  	457	2 
[1, 8, 12, 1]  	460	2 
[0, 35, 1, 1]  	484	2 
[1, 15, 10, 1]  	493	3 
[1, 18, 9, 1]  	503	3 
[0, 32, 4, 1]  	532	2 
[12, 6, 1, 2]  	203	8 
[10, 5, 3, 2]  	232	8 
[22, 5, 2, 2]  	299	13 
[14, 2, 7, 2]  	341	11 
[18, 2, 6, 2]  	344	10 
[23, 2, 5, 2]  	355	9 
[6, 15, 5, 2]  	388	7 
[3, 16, 6, 2]  	406	6 
[1, 33, 2, 2]  	495	3 
[26, 0, 0, 3]  	208	8 
[12, 0, 9, 3]  	357	8 
[18, 1, 7, 3]  	360	8 
[22, 1, 6, 3]  	363	9 
[10, 0, 10, 3]  	370	8 
[16, 1, 8, 3]  	373	8 
[18, 0, 8, 3]  	376	8 
[22, 4, 3, 4]  	315	13 
[14, 3, 6, 4]  	325	11 
[18, 3, 5, 4]  	328	12 
[10, 1, 9, 4]  	354	9 
[3, 11, 9, 4]  	428	4 
[2, 26, 3, 4]  	441	3 
[2, 0, 16, 4]  	480	3 
[22, 2, 5, 5]  	347	10 
[9, 6, 3, 46]  	237	7 
[11, 7, 1, 47]  	208	7 
[8, 4, 4, 47]  	232	7 
[7, 5, 5, 47]  	266	7 
[6, 19, 0, 47]  	295	7 
[4, 14, 6, 47]  	388	5 
[1, 10, 10, 47]  	428	2 
[20, 3, 4, 48]  	315	11 
[18, 0, 7, 48]  	347	8 
[2, 30, 0, 48]  	406	4 
[1, 4, 15, 48]  	495	2 
[0, 3, 17, 48]  	532	1 
[10, 5, 2, 49]  	203	4 
[8, 4, 3, 49]  	203	3 
[12, 2, 7, 49]  	325	9 
[16, 2, 6, 49]  	328	10 
[9, 2, 8, 49]  	330	5 
[8, 2, 9, 49]  	351	6 
[7, 1, 10, 49]  	359	7 
[4, 12, 7, 49]  	391	5 
[4, 6, 10, 49]  	400	3 
[2, 14, 7, 49]  	401	2 
[3, 9, 9, 49]  	402	3 
[3, 27, 1, 49]  	404	3 
[3, 21, 4, 49]  	413	4 
[2, 6, 11, 49]  	413	3 
[2, 13, 8, 49]  	417	2 
[2, 11, 9, 49]  	420	2 
[2, 25, 3, 49]  	428	3 
[0, 24, 4, 49]  	428	1 
[2, 21, 5, 49]  	434	3 
[0, 22, 6, 49]  	460	1 
[0, 6, 14, 49]  	484	1 
[0, 32, 3, 49]  	503	2 
------
The gap is between 6 and 45.
Lengths: 3 3 6 6 3 3.
For 490 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^17*z^9
1*y^31*z^3
1*y^2*z^16

For 274 = 3*d/2-d1-d2-d3 you get 6 in char 0.
1*x^5*y^18
1*x^4*y^3*z^7
1*x^3*y^17*z^1
1*x^2*y^2*z^8
1*x^1*y^16*z^2
1*y^1*z^9

For 58 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*y^2
1*x^2*y^1*z^1
1*z^2

Extra powers of p used 0.
The invariant extra is equal to 5.
Start computing 3^3 Delta^1 (x1x2x3)^2... Done.
Start computing 3^4 Delta^2 (x1x2x3)^2... Done.
Start computing 3^5 Delta^3 (x1x2x3)^2... Done.
Start computing 3^6 Delta^4 (x1x2x3)^2... Done.
Start computing 3^7 Delta^5 (x1x2x3)^2... Done.
Start computing 3^8 Delta^6 (x1x2x3)^2... Done.
Start computing 3^9 Delta^7 (x1x2x3)^2... Done.
Start computing 3^10 Delta^8 (x1x2x3)^2... Done.
Start computing 3^11 Delta^9 (x1x2x3)^2... Done.
Start computing 3^12 Delta^10 (x1x2x3)^2... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 12 
*/
A = \
[1104750855330492339309,6824203053832556029515,6722416195264243067868,8605186909090692821280,403515421758295030980,2419221142787168551194,163323878536319013738,1402702152437789900748,3935073683132006063319,3201379337559665933541,8331962574281154467895,571146784567444720440;\
1840681052282815822119,6980252199621717118794,8008180094679549665289,2789835330556703078217,6207326194539430368846,6050970243181306999242,2527705852553599708401,6207313817860426062306,7831993588898213102067,4880389910223660916365,2590431691919109186879,4437044424402968251953;\
4398105734686773227901,4441873022382157338804,3999051408562005592269,6162346526776345034154,6588945715627363517019,3955461011645805579483,7009251094491706511955,2712467377967982904098,8045337053432695286331,1709305193234670836832,7726183860525090420429,8493379975767164859486;\
1654160301738285613580,293967931669112610272,1881998272661393523587,7353683677201902756813,7061923874848231607643,6979635639874859281605,3553450526761399412055,7005190960181832431787,3582814848369560801523,7396158652086656194821,8034890482760865352632,903398549745624526953;\
2237331301041274640548,3502241515935438918914,5634611531213390063025,430985549134722618081,43023989076405776028,8069024258768260015479,4594130820129720405861,3382505895205162923111,6540513055064495377110,6141934522284024220758,895415701273478346024,6092148195135736601436;\
4075987615902663567711,6117253612645182375860,8480095098930551778030,1199097891952914236958,7935224119369816125303,1424489019510934016055,4920952156355139006636,6640503039366572232675,3638411115331388635008,2239144010959863558654,3048355857636280385190,2995981011520311951576;\
2615424770998886021463,5715791638872251637972,5826054629150037807092,2244413100367045775592,3578109205165457549076,1406862841734526849578,2753279521893932553378,873249087088685202066,6240978677965810508289,8214288726675318584157,7077535300697679046278,6577504817953856747427;\
4530666398539623390234,180371641681660441336,7724658627386436247762,6121077337768926484215,4298019667683513374367,8826487177837886692569,1256799163074460763499,835946386144697785473,7233723219218596003152,4955303389786295091606,7212934591432199246025,3123533538057324845385;\
8770423312911368460299,5768657906814517378127,8755597878029289836402,7326261714090650706756,2910985022645167172508,6303188902502253270321,4451648312218176959868,8637417910034469417285,5112793450323220983921,748027913445734625207,1967704159624436947536,2390190600758470478487;\
5252922321691458997428,5367999530605727897115,7361173228782200204671,5679200103263722857222,2363100895359931859343,8041999806417117624858,3213758426656408785594,5646254202235544132322,8791827847186227399342,3534923306554150159638,57980197741163307201,2463209966102628740346;\
748290518247591175959,5910813599479178839512,7824100494837135569900,7279056755610665337099,2347287376976083235727,4545889468052796513531,1113325431590333381895,8293693840774528828743,6238414156346473445262,2553235566780570594399,5583440371037942292219,2157905203944176664486;\
4417056167499185698224,3587302137661856516844,2575085270376046785189,1162363071839772359403,6836745162611783953116,5323708328652878188212,4053429729548072197182,4037493247457090905791,2523617597519635750758,4445079762711216640950,4305767643394640530470,359103406990894148475]
/* 
This matrix times 3^(-1) should be the matrix of frobenius.
*/ 
B = 3^(-1) * A; 
/* Freed 37 lists. */
