/* Comments begin... 
Coefficient of   x^27                     = 1
Coefficient of   x^14 * y^8               = -1
Coefficient of   x^12 * y^7 * z^1         = 0
Coefficient of   x^10 * y^6 * z^2         = -1
Coefficient of   x^8 * y^5 * z^3         = 0
Coefficient of   x^6 * y^4 * z^4         = 1
Coefficient of   x^4 * y^3 * z^5         = 0
Coefficient of   x^2 * y^2 * z^6         = 0
Coefficient of   x^1 * y^16               = 1
Coefficient of   y^1 * z^7               = 0

Here is the polynomial we're using this time:

1*x^27 + -1*x^14*y^8 + -1*x^10*y^6*z^2 + 1*x^6*y^4*z^4 + 1*x^1*y^16

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Not smooth!
Coefficient of   x^27                     = -1
Coefficient of   x^14 * y^8               = 0
Coefficient of   x^12 * y^7 * z^1         = 1
Coefficient of   x^10 * y^6 * z^2         = -1
Coefficient of   x^8 * y^5 * z^3         = -1
Coefficient of   x^6 * y^4 * z^4         = -1
Coefficient of   x^4 * y^3 * z^5         = 0
Coefficient of   x^2 * y^2 * z^6         = 0
Coefficient of   x^1 * y^16               = -1
Coefficient of   y^1 * z^7               = 1

Here is the polynomial we're using this time:

-1*x^27 + 1*x^12*y^7*z^1 + -1*x^10*y^6*z^2 + -1*x^8*y^5*z^3 + -1*x^6*y^4*z^4 + -1*x^1*y^16 + 1*y^1*z^7

Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
The final length of G is 221
[12, 7, 0, 0]  	187	5 
[12, 6, 1, 0]  	203	6 
[27, 0, 0, 0]  	216	2  <--- 1
[10, 6, 2, 0]  	216	5 
[10, 5, 3, 0]  	232	7 
[8, 5, 4, 0]  	245	6 
[6, 4, 6, 0]  	274	7 
[7, 19, 0, 0]  	303	7 
[14, 3, 6, 0]  	325	10 
[11, 3, 7, 0]  	330	8 
[17, 4, 5, 0]  	333	9 
[21, 4, 4, 0]  	336	9 
[19, 3, 5, 0]  	336	10 
[25, 4, 3, 0]  	339	5 
[23, 3, 4, 0]  	339	9 
[9, 3, 8, 0]  	343	8 
[11, 2, 8, 0]  	346	8 
[15, 2, 7, 0]  	349	9 
[19, 2, 6, 0]  	352	8 
[21, 1, 6, 0]  	355	7 
[8, 18, 2, 0]  	356	8 
[7, 3, 9, 0]  	356	8 
[9, 2, 9, 0]  	359	8 
[11, 1, 9, 0]  	362	8 
[15, 1, 8, 0]  	365	8 
[9, 16, 3, 0]  	367	8 
[8, 1, 10, 0]  	367	8 
[6, 18, 3, 0]  	369	7 
[21, 0, 7, 0]  	371	7 
[8, 17, 3, 0]  	372	7 
[7, 2, 10, 0]  	372	7 
[6, 16, 4, 0]  	372	7 
[6, 23, 1, 0]  	376	7 
[6, 3, 10, 0]  	377	7 
[5, 17, 4, 0]  	377	7 
[11, 0, 10, 0]  	378	7 
[6, 1, 11, 0]  	380	7 
[7, 14, 5, 0]  	383	7 
[5, 2, 11, 0]  	385	7 
[6, 26, 0, 0]  	386	7 
[6, 15, 5, 0]  	388	6 
[5, 0, 12, 0]  	388	6 
[9, 0, 11, 0]  	391	7 
[5, 25, 1, 0]  	394	6 
[5, 12, 7, 0]  	399	6 
[5, 21, 3, 0]  	400	6 
[4, 15, 6, 0]  	401	6 
[5, 10, 8, 0]  	402	6 
[5, 28, 0, 0]  	404	5 
[4, 13, 7, 0]  	404	5 
[4, 2, 12, 0]  	406	6 
[3, 16, 6, 0]  	406	6 
[5, 6, 10, 0]  	408	6 
[4, 0, 13, 0]  	409	5 
[5, 24, 2, 0]  	410	6 
[19, 0, 9, 0]  	413	6 
[3, 1, 13, 0]  	414	5 
[4, 25, 2, 0]  	415	5 
[4, 5, 11, 0]  	416	6 
[3, 28, 1, 0]  	417	4 
[5, 9, 9, 0]  	418	5 
[4, 23, 3, 0]  	418	5 
[4, 12, 8, 0]  	420	4 
[3, 26, 2, 0]  	420	4 
[4, 21, 4, 0]  	421	5 
[3, 15, 7, 0]  	422	5 
[3, 24, 3, 0]  	423	4 
[3, 13, 8, 0]  	425	4 
[4, 8, 10, 0]  	426	4 
[3, 22, 4, 0]  	426	4 
[3, 20, 5, 0]  	429	5 
[3, 0, 14, 0]  	430	4 
[3, 9, 10, 0]  	431	4 
[2, 12, 9, 0]  	433	3 
[4, 31, 0, 0]  	435	5 
[2, 30, 1, 0]  	435	5 
[2, 10, 10, 0]  	436	3 
[3, 5, 12, 0]  	437	5 
[2, 8, 11, 0]  	439	3 
[2, 24, 4, 0]  	444	3 
[1, 25, 4, 0]  	449	2 
[2, 20, 6, 0]  	450	4 
[2, 29, 2, 0]  	451	4 
[2, 7, 12, 0]  	455	3 
[1, 21, 6, 0]  	455	3 
[2, 34, 0, 0]  	458	4 
[2, 5, 13, 0]  	458	4 
[1, 8, 12, 0]  	460	2 
[2, 1, 15, 0]  	464	4 
[1, 24, 5, 0]  	465	1 
[0, 9, 12, 0]  	465	1 
[0, 36, 0, 0]  	468	2  <--- 2
[1, 20, 7, 0]  	471	3 
[1, 29, 3, 0]  	472	3 
[0, 23, 6, 0]  	473	1 
[2, 4, 14, 0]  	474	4 
[1, 34, 1, 0]  	479	3 
[0, 8, 13, 0]  	481	1 
[0, 35, 1, 0]  	484	2 
[0, 22, 7, 0]  	489	1 
[1, 33, 2, 0]  	495	3 
[0, 7, 14, 0]  	497	1 
[0, 34, 2, 0]  	500	2 
[1, 0, 17, 0]  	501	2 
[1, 18, 9, 0]  	503	3 
[0, 21, 8, 0]  	505	1 
[1, 5, 15, 0]  	508	2 
[0, 6, 15, 0]  	513	1 
[0, 33, 3, 0]  	516	2 
[0, 20, 9, 0]  	521	1 
[0, 29, 5, 0]  	522	2 
[1, 4, 16, 0]  	524	2 
[0, 5, 16, 0]  	529	1 
[0, 32, 4, 0]  	532	2 
[0, 19, 10, 0]  	537	1 
[0, 4, 17, 0]  	545	1 
[0, 0, 19, 0]  	551	1  <--- 3
[0, 18, 11, 0]  	553	1 
[0, 3, 18, 0]  	561	1 
[23, 5, 2, 1]  	307	10 
[19, 4, 4, 1]  	320	10 
[23, 4, 3, 1]  	323	10 
[22, 3, 4, 1]  	331	10 
[11, 17, 1, 1]  	338	9 
[10, 18, 1, 1]  	343	8 
[7, 17, 3, 1]  	364	8 
[19, 1, 7, 1]  	368	7 
[7, 0, 11, 1]  	375	7 
[4, 16, 5, 1]  	385	6 
[4, 1, 12, 1]  	393	6 
[5, 14, 6, 1]  	396	6 
[17, 0, 9, 1]  	397	7 
[3, 29, 0, 1]  	401	5 
[5, 8, 9, 1]  	405	6 
[4, 11, 8, 1]  	407	5 
[4, 9, 9, 1]  	410	5 
[4, 27, 1, 1]  	412	5 
[4, 7, 10, 1]  	413	5 
[3, 11, 9, 1]  	428	4 
[3, 7, 11, 1]  	434	4 
[2, 15, 8, 1]  	443	4 
[2, 33, 0, 1]  	445	5 
[2, 22, 5, 1]  	447	3 
[1, 35, 0, 1]  	463	3 
[2, 19, 7, 1]  	466	4 
[1, 19, 8, 1]  	487	3 
[1, 6, 14, 1]  	492	2 
[1, 15, 11, 1]  	522	2 
[18, 3, 5, 2]  	328	11 
[9, 17, 2, 2]  	351	8 
[8, 16, 3, 2]  	359	7 
[15, 0, 9, 2]  	381	7 
[5, 22, 2, 2]  	384	6 
[5, 27, 0, 2]  	391	6 
[2, 6, 12, 2]  	442	4 
[1, 23, 5, 2]  	452	2 
[1, 10, 11, 2]  	457	2 
[1, 15, 10, 2]  	493	3 
[26, 0, 0, 3]  	208	6 
[8, 4, 5, 3]  	261	8 
[7, 18, 0, 3]  	290	8 
[14, 2, 7, 3]  	341	10 
[18, 2, 6, 3]  	344	9 
[20, 1, 6, 3]  	347	8 
[10, 1, 9, 3]  	354	9 
[14, 1, 8, 3]  	357	9 
[20, 0, 7, 3]  	363	8 
[10, 0, 10, 3]  	370	8 
[2, 26, 3, 3]  	441	3 
[2, 0, 16, 3]  	480	3 
[22, 5, 2, 4]  	299	11 
[18, 4, 4, 4]  	312	11 
[22, 4, 3, 4]  	315	11 
[18, 1, 7, 4]  	360	8 
[14, 0, 9, 5]  	373	8 
[1, 7, 13, 7]  	476	2 
[0, 21, 7, 43]  	476	1 
[6, 25, 0, 45]  	373	7 
[6, 24, 0, 46]  	360	7 
[5, 7, 9, 46]  	392	6 
[9, 6, 3, 47]  	237	6 
[6, 3, 6, 47]  	261	7 
[7, 5, 5, 47]  	266	7 
[6, 19, 0, 47]  	295	7 
[8, 2, 9, 47]  	351	7 
[11, 7, 1, 48]  	208	5 
[20, 3, 4, 48]  	315	10 
[7, 1, 10, 48]  	359	6 
[5, 24, 1, 48]  	381	6 
[5, 9, 8, 48]  	389	6 
[4, 12, 7, 48]  	391	5 
[3, 15, 6, 48]  	393	5 
[4, 8, 9, 48]  	397	5 
[4, 22, 3, 48]  	405	5 
[0, 25, 4, 48]  	441	1 
[1, 20, 6, 48]  	442	3 
[0, 8, 12, 48]  	452	1 
[0, 24, 5, 48]  	457	1 
[9, 6, 2, 49]  	208	3 
[20, 4, 3, 49]  	299	10 
[16, 3, 5, 49]  	312	10 
[8, 17, 2, 49]  	343	6 
[6, 2, 10, 49]  	364	6 
[5, 23, 1, 49]  	368	5 
[6, 14, 5, 49]  	375	5 
[5, 8, 8, 49]  	376	4 
[3, 12, 7, 49]  	383	4 
[4, 7, 9, 49]  	384	5 
[3, 21, 3, 49]  	384	4 
[3, 1, 12, 49]  	385	3 
[3, 0, 13, 49]  	401	3 
[3, 25, 2, 49]  	407	2 
[1, 29, 1, 49]  	414	3 
[2, 9, 10, 49]  	423	3 
[0, 24, 4, 49]  	428	1 
[0, 20, 6, 49]  	434	1 
[1, 11, 10, 49]  	441	2 
[2, 4, 13, 49]  	445	2 
[0, 33, 2, 49]  	487	2 
[1, 4, 15, 49]  	495	2 
[0, 0, 18, 49]  	522	1 
------
The gap is between 8 and 42.
Lengths: 3 3 6 6 3 3.
For 490 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^17*z^9
1*y^31*z^3
1*y^2*z^16

For 274 = 3*d/2-d1-d2-d3 you get 6 in char 0.
1*x^5*y^18
1*x^4*y^3*z^7
1*x^3*y^17*z^1
1*x^2*y^2*z^8
1*x^1*y^16*z^2
1*y^1*z^9

For 58 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*y^2
1*x^2*y^1*z^1
1*z^2

Extra powers of p used 0.
The invariant extra is equal to 5.
Start computing 3^3 Delta^1 (x1x2x3)^2... Done.
Start computing 3^4 Delta^2 (x1x2x3)^2... Done.
Start computing 3^5 Delta^3 (x1x2x3)^2... Done.
Start computing 3^6 Delta^4 (x1x2x3)^2... Done.
Start computing 3^7 Delta^5 (x1x2x3)^2... Done.
Start computing 3^8 Delta^6 (x1x2x3)^2... Done.
Start computing 3^9 Delta^7 (x1x2x3)^2... Done.
Start computing 3^10 Delta^8 (x1x2x3)^2... Done.
Start computing 3^11 Delta^9 (x1x2x3)^2... Done.
Start computing 3^12 Delta^10 (x1x2x3)^2... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 12 
*/
A = \
[6344995018338755750553,7489281917824083743778,8325057425522714721357,6470815717762511646366,6917821849215578545227,8455216560312704225868,4061979250389806623425,5264647843424388079536,4182007384995160709016,1082450102097573835074,7257656309365497843549,2313027552872768594868;\
4390201423579663555911,6330330976407092747640,7871639839744645269231,3124860870842626501035,4141727601753346360470,35326921608804837438,8375873579903536533351,8488071383748381671868,1174555817065416568401,1592908201173134133423,5528137638002937562134,7405441862548142038716;\
988402570724571690987,8292340406712143716833,4000542262741199376375,5199618903963304528152,5466168739950768063054,4819170933842365836729,46038208680212265009,5028807916169365165218,6341783227329916258704,3892947880665988448874,2384137964639991348261,4224070365531452021034;\
13703557052362392226,8473344139096747933971,3928648574192313272793,3327487029609678880623,1730643661795755708180,8306345698876067734116,6496681845516929179371,6374607910875350315676,8325200160252602687520,1964414433258454205565,7669276171822473165441,4422501930588204373677;\
8043016471564107646373,2994024878126014519185,2465091729698773338890,6892558462118353087179,5902518693460975390521,46530693378596113020,7064150162095070123229,2869679078833923307926,1101617386079748802137,6081298840062928744767,1046689672241890225179,6094178537658080760306;\
7723252226371121147581,6635815295819840610935,5659153504681174939765,8030497776055398700911,1508649449867629854399,6142385087177820981507,3691060608386848232286,7734469590179362559061,4051392267558356842626,4596624970524109597194,7589784228072290917461,7528461220095050412765;\
2741703146480471938433,4096417937259649520088,2829177369026751592787,3552583219749351041841,3953041398023497967691,6780251267041928265,3030750537091757999757,498603892346988789492,5524399697218999248267,1001818113976739180709,1574276639553573690744,2908249653854909449431;\
6629760764163610771649,4033785325832678044267,3676566409528984482585,2705465139873931151577,1181326914075982032342,3742990575854429633778,938954769566870824578,1270681994893452036156,6062050711072004192505,3479320970381115980262,3814452358489156881357,4981198074964414515306;\
6607536977314564260147,7101040974084521115636,4498634878247140616201,3995491407275779771644,5056226406697915763640,33268174295159513277,2571077623030086661425,3594544472025326850264,5830169273959427990649,8842786602275723816997,6307281324699367447809,2710198513126494161631;\
4606882272733071901108,3433480621504316463204,3829079087027102183362,818243802508861069650,8555370510541682963007,2700567807112971999324,1516970328817783950135,5382514644600610036458,7747627468376558143197,185819229578833935849,5413844512592442677673,7500304970181875485485;\
2314433565501803857201,837055350721054685793,4023271189634631079138,6548997803885504885619,5525544799607599283598,2903371395134071070079,4365094675373503549641,7321156673096442225195,1267552928218932177048,1282401239508802276029,5357511854083140763041,3010539964004036897841;\
6059940801917843989502,8243255724874807186494,7959679335126361531130,6371407715139438529653,4668767482031705388042,763620491259080356725,7204286964237754585050,8237926838878886780244,3366805568420456998794,1612824444636545500893,5790338865129650272245,5062934145861810133668]
/* 
This matrix times 3^(-1) should be the matrix of frobenius.
*/ 
B = 3^(-1) * A; 
/* Freed 35 lists. */
