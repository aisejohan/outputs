/* Comments begin... 
Coefficient of   x^27                     = 1
Coefficient of   x^14 * y^8               = 1
Coefficient of   x^12 * y^7 * z^1         = 0
Coefficient of   x^10 * y^6 * z^2         = 1
Coefficient of   x^8 * y^5 * z^3         = -1
Coefficient of   x^6 * y^4 * z^4         = -1
Coefficient of   x^4 * y^3 * z^5         = 0
Coefficient of   x^2 * y^2 * z^6         = 0
Coefficient of   x^1 * y^16               = 0
Coefficient of   y^1 * z^7               = 1

Here is the polynomial we're using this time:

1*x^27 + 1*x^14*y^8 + 1*x^10*y^6*z^2 + -1*x^8*y^5*z^3 + -1*x^6*y^4*z^4 + 1*y^1*z^7

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Not smooth!
Coefficient of   x^27                     = 0
Coefficient of   x^14 * y^8               = 1
Coefficient of   x^12 * y^7 * z^1         = -1
Coefficient of   x^10 * y^6 * z^2         = -1
Coefficient of   x^8 * y^5 * z^3         = 1
Coefficient of   x^6 * y^4 * z^4         = 0
Coefficient of   x^4 * y^3 * z^5         = -1
Coefficient of   x^2 * y^2 * z^6         = 0
Coefficient of   x^1 * y^16               = -1
Coefficient of   y^1 * z^7               = -1

Here is the polynomial we're using this time:

1*x^14*y^8 + -1*x^12*y^7*z^1 + -1*x^10*y^6*z^2 + 1*x^8*y^5*z^3 + -1*x^4*y^3*z^5 + -1*x^1*y^16 + -1*y^1*z^7

Not smooth!
Coefficient of   x^27                     = 1
Coefficient of   x^14 * y^8               = 1
Coefficient of   x^12 * y^7 * z^1         = -1
Coefficient of   x^10 * y^6 * z^2         = 0
Coefficient of   x^8 * y^5 * z^3         = -1
Coefficient of   x^6 * y^4 * z^4         = -1
Coefficient of   x^4 * y^3 * z^5         = 0
Coefficient of   x^2 * y^2 * z^6         = 0
Coefficient of   x^1 * y^16               = 1
Coefficient of   y^1 * z^7               = -1

Here is the polynomial we're using this time:

1*x^27 + 1*x^14*y^8 + -1*x^12*y^7*z^1 + -1*x^8*y^5*z^3 + -1*x^6*y^4*z^4 + 1*x^1*y^16 + -1*y^1*z^7

Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
Allocate M_len = 25600 elements.
Allocate M_len = 51200 elements.
Allocate G_len 640 elements and old = 320.
The final length of G is 241
[12, 7, 0, 0]  	187	4 
[12, 6, 1, 0]  	203	7 
[27, 0, 0, 0]  	216	2  <--- 1
[10, 5, 3, 0]  	232	8 
[8, 5, 4, 0]  	245	7 
[8, 4, 5, 0]  	261	8 
[6, 4, 6, 0]  	274	7 
[7, 18, 0, 0]  	290	8 
[23, 4, 3, 0]  	323	8 
[11, 3, 7, 0]  	330	8 
[15, 3, 6, 0]  	333	9 
[21, 4, 4, 0]  	336	7 
[23, 3, 4, 0]  	339	9 
[15, 2, 7, 0]  	349	9 
[21, 3, 5, 0]  	352	9 
[19, 2, 6, 0]  	352	8 
[21, 1, 6, 0]  	355	7 
[9, 2, 9, 0]  	359	8 
[11, 1, 9, 0]  	362	8 
[7, 17, 3, 0]  	364	8 
[15, 1, 8, 0]  	365	8 
[9, 16, 3, 0]  	367	8 
[6, 18, 3, 0]  	369	7 
[21, 0, 7, 0]  	371	7 
[9, 1, 10, 0]  	375	7 
[6, 23, 1, 0]  	376	7 
[6, 3, 10, 0]  	377	8 
[11, 0, 10, 0]  	378	7 
[7, 16, 4, 0]  	380	7 
[7, 14, 5, 0]  	383	7 
[6, 17, 4, 0]  	385	6 
[6, 26, 0, 0]  	386	7 
[6, 15, 5, 0]  	388	7 
[9, 0, 11, 0]  	391	6 
[5, 27, 0, 0]  	391	6 
[6, 0, 12, 0]  	396	7 
[5, 21, 3, 0]  	400	6 
[5, 1, 12, 0]  	401	7 
[5, 8, 9, 0]  	405	6 
[4, 2, 12, 0]  	406	7 
[4, 29, 0, 0]  	409	5 
[4, 0, 13, 0]  	409	5 
[19, 0, 9, 0]  	413	5 
[4, 7, 10, 0]  	413	5 
[3, 30, 0, 0]  	414	5 
[3, 1, 13, 0]  	414	5 
[3, 28, 1, 0]  	417	4 
[4, 10, 9, 0]  	423	5 
[3, 11, 9, 0]  	428	4 
[3, 0, 14, 0]  	430	4 
[4, 24, 3, 0]  	431	4 
[3, 9, 10, 0]  	431	4 
[3, 27, 2, 0]  	433	3 
[2, 12, 9, 0]  	433	3 
[3, 7, 11, 0]  	434	4 
[5, 17, 6, 0]  	435	5 
[2, 30, 1, 0]  	435	5 
[3, 25, 3, 0]  	436	3 
[2, 10, 10, 0]  	436	3 
[3, 5, 12, 0]  	437	5 
[2, 24, 4, 0]  	444	3 
[2, 33, 0, 0]  	445	5 
[1, 25, 4, 0]  	449	2 
[2, 29, 2, 0]  	451	4 
[2, 9, 11, 0]  	452	2 
[2, 7, 12, 0]  	455	4 
[2, 5, 13, 0]  	458	4 
[1, 8, 12, 0]  	460	2 
[2, 21, 6, 0]  	463	3 
[1, 35, 0, 0]  	463	3 
[2, 1, 15, 0]  	464	4 
[1, 24, 5, 0]  	465	1 
[0, 9, 12, 0]  	465	1 
[0, 36, 0, 0]  	468	2  <--- 2
[1, 29, 3, 0]  	472	3 
[0, 23, 6, 0]  	473	1 
[2, 4, 14, 0]  	474	4 
[1, 7, 13, 0]  	476	2 
[1, 34, 1, 0]  	479	3 
[0, 8, 13, 0]  	481	1 
[1, 21, 7, 0]  	484	2 
[0, 35, 1, 0]  	484	2 
[0, 22, 7, 0]  	489	1 
[1, 6, 14, 0]  	492	2 
[1, 33, 2, 0]  	495	3 
[0, 7, 14, 0]  	497	1 
[1, 0, 17, 0]  	501	2 
[1, 18, 9, 0]  	503	3 
[0, 21, 8, 0]  	505	1 
[1, 5, 15, 0]  	508	2 
[0, 6, 15, 0]  	513	1 
[0, 20, 9, 0]  	521	1 
[0, 29, 5, 0]  	522	2 
[1, 4, 16, 0]  	524	2 
[0, 34, 3, 0]  	529	1 
[0, 5, 16, 0]  	529	1 
[0, 32, 4, 0]  	532	2 
[0, 19, 10, 0]  	537	1 
[0, 4, 17, 0]  	545	1 
[0, 0, 19, 0]  	551	1  <--- 3
[0, 18, 11, 0]  	553	1 
[0, 3, 18, 0]  	561	1 
[10, 6, 2, 1]  	216	6 
[23, 5, 2, 1]  	307	4 
[19, 3, 5, 1]  	336	10 
[11, 17, 1, 1]  	338	9 
[9, 3, 8, 1]  	343	8 
[8, 16, 3, 1]  	359	7 
[13, 2, 8, 1]  	362	8 
[8, 3, 9, 1]  	364	8 
[19, 1, 7, 1]  	368	7 
[7, 2, 10, 1]  	372	8 
[6, 16, 4, 1]  	372	7 
[7, 0, 11, 1]  	375	7 
[6, 1, 11, 1]  	380	7 
[5, 22, 2, 1]  	384	6 
[5, 2, 11, 1]  	385	6 
[5, 0, 12, 1]  	388	6 
[4, 1, 12, 1]  	393	6 
[5, 14, 6, 1]  	396	6 
[17, 0, 9, 1]  	397	6 
[4, 15, 6, 1]  	401	5 
[3, 29, 0, 1]  	401	5 
[5, 10, 8, 1]  	402	6 
[4, 13, 7, 1]  	404	5 
[5, 17, 5, 1]  	406	6 
[3, 16, 6, 1]  	406	6 
[5, 26, 1, 1]  	407	5 
[4, 11, 8, 1]  	407	5 
[4, 9, 9, 1]  	410	5 
[5, 20, 4, 1]  	416	6 
[4, 5, 11, 1]  	416	6 
[4, 23, 3, 1]  	418	5 
[4, 21, 4, 1]  	421	5 
[3, 15, 7, 1]  	422	5 
[3, 13, 8, 1]  	425	4 
[3, 22, 4, 1]  	426	4 
[4, 26, 2, 1]  	428	4 
[4, 20, 5, 1]  	437	5 
[2, 8, 11, 1]  	439	3 
[2, 6, 12, 1]  	442	4 
[2, 22, 5, 1]  	447	3 
[2, 20, 6, 1]  	450	4 
[1, 23, 5, 1]  	452	2 
[1, 21, 6, 1]  	455	3 
[1, 20, 7, 1]  	471	3 
[0, 33, 3, 1]  	516	2 
[1, 15, 11, 1]  	522	2 
[19, 4, 4, 2]  	320	10 
[18, 3, 5, 2]  	328	11 
[22, 3, 4, 2]  	331	10 
[18, 2, 6, 2]  	344	9 
[11, 2, 8, 2]  	346	8 
[10, 1, 9, 2]  	354	9 
[8, 1, 10, 2]  	367	8 
[10, 0, 10, 2]  	370	8 
[5, 17, 4, 2]  	377	7 
[15, 0, 9, 2]  	381	7 
[4, 16, 5, 2]  	385	6 
[5, 12, 7, 2]  	399	6 
[5, 6, 10, 2]  	408	6 
[4, 27, 1, 2]  	412	5 
[3, 26, 2, 2]  	420	4 
[3, 20, 5, 2]  	429	5 
[2, 26, 3, 2]  	441	3 
[1, 10, 11, 2]  	457	2 
[2, 19, 7, 2]  	466	4 
[2, 0, 16, 2]  	480	3 
[1, 19, 8, 2]  	487	3 
[1, 15, 10, 2]  	493	3 
[0, 34, 2, 2]  	500	2 
[26, 0, 0, 3]  	208	7 
[22, 4, 3, 3]  	315	11 
[14, 3, 6, 3]  	325	10 
[14, 2, 7, 3]  	341	10 
[20, 1, 6, 3]  	347	8 
[9, 17, 2, 3]  	351	8 
[7, 3, 9, 3]  	356	8 
[14, 1, 8, 3]  	357	9 
[20, 0, 7, 3]  	363	8 
[5, 25, 1, 3]  	394	6 
[3, 24, 3, 3]  	423	4 
[22, 5, 2, 4]  	299	9 
[18, 1, 7, 4]  	360	8 
[2, 15, 8, 4]  	443	4 
[18, 4, 4, 5]  	312	11 
[14, 0, 9, 5]  	373	8 
[4, 25, 2, 5]  	415	5 
[6, 25, 0, 45]  	373	7 
[3, 10, 9, 45]  	415	4 
[9, 15, 3, 46]  	354	8 
[6, 24, 0, 46]  	360	7 
[5, 7, 9, 46]  	392	6 
[2, 9, 10, 46]  	423	3 
[1, 29, 2, 46]  	443	3 
[9, 6, 3, 47]  	237	7 
[7, 5, 5, 47]  	266	7 
[6, 19, 0, 47]  	295	7 
[6, 17, 3, 47]  	356	7 
[0, 5, 15, 47]  	500	1 
[11, 7, 1, 48]  	208	6 
[9, 1, 9, 48]  	346	6 
[8, 2, 9, 48]  	351	6 
[3, 1, 12, 48]  	385	4 
[3, 15, 6, 48]  	393	4 
[4, 10, 8, 48]  	394	5 
[3, 0, 13, 48]  	401	4 
[3, 12, 8, 48]  	412	3 
[2, 11, 9, 48]  	420	3 
[2, 5, 12, 48]  	429	4 
[0, 25, 4, 48]  	441	1 
[1, 20, 6, 48]  	442	2 
[0, 35, 0, 48]  	455	1 
[0, 24, 5, 48]  	457	1 
[1, 33, 1, 48]  	466	3 
[0, 7, 13, 48]  	468	1 
[0, 4, 15, 48]  	487	1 
[7, 5, 3, 49]  	208	3 
[20, 4, 3, 49]  	299	8 
[16, 3, 5, 49]  	312	9 
[14, 2, 6, 49]  	312	7 
[20, 3, 4, 49]  	315	10 
[6, 16, 3, 49]  	343	2 
[0, 27, 0, 49]  	351	1 
[5, 0, 11, 49]  	359	3 
[9, 0, 10, 49]  	362	3 
[2, 7, 9, 49]  	368	1 
[4, 2, 11, 49]  	377	4 
[4, 9, 8, 49]  	381	5 
[4, 26, 1, 49]  	399	4 
[0, 24, 3, 49]  	399	1 
[4, 20, 4, 49]  	408	4 
[1, 4, 12, 49]  	408	2 
[3, 23, 3, 49]  	410	4 
[1, 22, 5, 49]  	439	2 
[0, 7, 12, 49]  	439	1 
[1, 11, 10, 49]  	441	2 
[1, 0, 15, 49]  	443	2 
[0, 21, 6, 49]  	447	1 
[0, 18, 9, 49]  	495	1 
[0, 0, 18, 49]  	522	1 
------
The gap is between 6 and 44.
Lengths: 3 3 6 6 3 4.
For 490 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^17*z^9
1*y^31*z^3
1*y^2*z^16

For 274 = 3*d/2-d1-d2-d3 you get 6 in char 0.
1*x^5*y^18
1*x^4*y^3*z^7
1*x^3*y^17*z^1
1*x^2*y^2*z^8
1*x^1*y^16*z^2
1*y^1*z^9

For 58 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*y^2
1*x^2*y^1*z^1
1*z^2

Extra powers of p used 2.
The invariant extra is equal to 5.
Start computing 3^3 Delta^1 (x1x2x3)^2... Done.
Start computing 3^4 Delta^2 (x1x2x3)^2... Done.
Start computing 3^5 Delta^3 (x1x2x3)^2... Done.
Start computing 3^6 Delta^4 (x1x2x3)^2... Done.
Start computing 3^7 Delta^5 (x1x2x3)^2... Done.
Start computing 3^8 Delta^6 (x1x2x3)^2... Done.
Start computing 3^9 Delta^7 (x1x2x3)^2... Done.
Start computing 3^10 Delta^8 (x1x2x3)^2... Done.
Start computing 3^11 Delta^9 (x1x2x3)^2... Done.
Start computing 3^12 Delta^10 (x1x2x3)^2... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 12 
*/
A = \
[1248374762877883608702,8638118145731308644864,670608989454267925395,6031022617941317983566,5303525274369259064064,2388182033653702811172,6614400245800485064842,2725453920528432856107,966753477638647778466,4406717166075859202514,4977199465453296396828,4814365954583728451043;\
1438038320220014916951,1369793435459524471053,7689281720067114908973,1034620485422760329103,5764182686108159322834,1857367352932177545684,5999171028138773004546,766332787847844717891,3224435373227099032659,6164654249485703949192,336057279753263253813,4809974697941600583576;\
2533345025150420886858,178972979100663580479,1775702899977870231753,7208700713057977696638,8115412669056965097486,6812661179017227924873,4041246416202485666451,5120876196682555903254,2103002764872988720302,6709458330848607814899,4249399217704658648253,732886834232488272795;\
6776387396639634821181,5330748197843475570444,5331110547307626741014,555987909968164955916,6590062713980894703636,6458079130041151394271,7984795599919871685690,2060963508583787354280,1387678224075454031040,693634339592331905556,5923239062914664998803,6912946325853299876328;\
2844151840728978864765,4847502754732031143641,3362796330959592786012,7944187379048126753661,6506565162340987988775,4296387971222339409180,7889020212506645897721,7488074752698388606605,3521413705464634668633,2511222258766064233050,6549101958975862654836,6160741225907569748100;\
8508243847709362935430,1729336515576577241691,5622138813032257419571,5923449244752509885445,6698401374339354960549,53586458499196766520,4961263358437235927829,2595985592240878287930,5007025409245132719501,8369172624826344852936,8345636383898316775932,6678358590347245997208;\
2020012208818904680059,2225714107821369831000,3669000735837025530624,4091842821276979578648,6036496555558500876159,8573575075818450430095,5294679110740926902556,458197129032208865136,2304418026021391020654,1012692001289156006571,5644202101299773266977,8449706377033339009941;\
4886012148705155648517,8616758754536885461509,6246318813439588882752,115468917979679649621,5995175806918687926267,7878841768720410957657,998437979051837004033,5074369107551698998249,4663847515545896998212,2561709888759983668857,8172895074977501791524,3161044593061921874664;\
8576321575228393271999,8753537172381396163803,5428342583645913014609,3445004348774899483680,8086522907541494409219,4844389085470494917109,4227029215812923819481,7941626309281302077292,1547515361611589626872,4646525111842481044155,5425857639250202629368,3529175286639664904040;\
6390920731735546898974,733336612281235881939,2761117441055839519043,2871627459483756087351,1671278244205392165579,4260348004953070295136,1288232997274693774956,920912591665660610151,5634705721513757667804,6631856171371920822651,4649168206204658925435,3324282736938253535997;\
1726359775645417688436,5344407409909831349256,7556466640767353162853,5917760510524506788418,3495135798480270104226,1556484876234188706924,6359302829766187436841,1564087816094024440215,2485653028536040845408,6936659310479319019080,973902122820673441173,6875072353010638004526;\
1563180411279322309227,1328745731661312126318,3569742548094612558552,4776213047976885070080,5750316379904205397068,3690129205839456051786,736667802624293474994,4592150556767244415107,236700373143634174980,2818882279786722220368,4438271795860417197555,2600034661729775377386]
/* 
This matrix times 3^(-1) should be the matrix of frobenius.
*/ 
B = 3^(-1) * A; 
/* Freed 37 lists. */
