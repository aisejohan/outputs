/* Comments begin... 
Coefficient of   x^27                     = 0
Coefficient of   x^14 * y^8               = -1
Coefficient of   x^12 * y^7 * z^1         = 0
Coefficient of   x^10 * y^6 * z^2         = 0
Coefficient of   x^8 * y^5 * z^3         = 0
Coefficient of   x^6 * y^4 * z^4         = -1
Coefficient of   x^4 * y^3 * z^5         = -1
Coefficient of   x^2 * y^2 * z^6         = 1
Coefficient of   x^1 * y^16               = 0
Coefficient of   y^1 * z^7               = -1

Here is the polynomial we're using this time:

-1*x^14*y^8 + -1*x^6*y^4*z^4 + -1*x^4*y^3*z^5 + 1*x^2*y^2*z^6 + -1*y^1*z^7

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Not smooth!
Coefficient of   x^27                     = 1
Coefficient of   x^14 * y^8               = 1
Coefficient of   x^12 * y^7 * z^1         = 0
Coefficient of   x^10 * y^6 * z^2         = 0
Coefficient of   x^8 * y^5 * z^3         = -1
Coefficient of   x^6 * y^4 * z^4         = 0
Coefficient of   x^4 * y^3 * z^5         = 0
Coefficient of   x^2 * y^2 * z^6         = 0
Coefficient of   x^1 * y^16               = -1
Coefficient of   y^1 * z^7               = -1

Here is the polynomial we're using this time:

1*x^27 + 1*x^14*y^8 + -1*x^8*y^5*z^3 + -1*x^1*y^16 + -1*y^1*z^7

Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 140
[14, 7, 0, 0]  	203	4 
[27, 0, 0, 0]  	216	2  <--- 1
[6, 4, 6, 0]  	274	3 
[6, 3, 7, 0]  	290	5 
[21, 4, 3, 0]  	307	5 
[13, 16, 0, 0]  	312	4 
[13, 1, 7, 0]  	320	3 
[19, 1, 6, 0]  	339	2 
[9, 1, 9, 0]  	346	6 
[19, 0, 7, 0]  	355	6 
[5, 2, 10, 0]  	356	6 
[7, 1, 10, 0]  	359	3 
[13, 13, 3, 0]  	360	6 
[7, 24, 0, 0]  	368	5 
[8, 17, 3, 0]  	372	7 
[5, 1, 11, 0]  	372	3 
[8, 15, 4, 0]  	375	6 
[12, 15, 3, 0]  	378	5 
[12, 0, 10, 0]  	386	6 
[6, 27, 0, 0]  	399	4 
[5, 12, 7, 0]  	399	4 
[2, 10, 9, 0]  	407	3 
[7, 21, 3, 0]  	416	6 
[4, 5, 11, 0]  	416	4 
[5, 0, 13, 0]  	417	3 
[5, 9, 9, 0]  	418	5 
[4, 8, 10, 0]  	426	3 
[3, 0, 14, 0]  	430	2 
[4, 24, 3, 0]  	431	5 
[2, 8, 11, 0]  	439	3 
[2, 6, 12, 0]  	442	3 
[1, 25, 4, 0]  	449	2 
[3, 24, 4, 0]  	452	3 
[1, 21, 6, 0]  	455	3 
[1, 10, 11, 0]  	457	2 
[3, 20, 6, 0]  	458	5 
[1, 8, 12, 0]  	460	2 
[2, 1, 15, 0]  	464	4 
[1, 24, 5, 0]  	465	1 
[0, 9, 12, 0]  	465	1 
[0, 36, 0, 0]  	468	2  <--- 2
[2, 35, 0, 0]  	471	4 
[0, 23, 6, 0]  	473	1 
[2, 4, 14, 0]  	474	2 
[1, 7, 13, 0]  	476	2 
[2, 0, 16, 0]  	480	3 
[0, 8, 13, 0]  	481	1 
[0, 22, 7, 0]  	489	1 
[1, 6, 14, 0]  	492	2 
[1, 15, 10, 0]  	493	3 
[0, 7, 14, 0]  	497	1 
[1, 20, 8, 0]  	500	3 
[1, 0, 17, 0]  	501	2 
[1, 18, 9, 0]  	503	3 
[0, 21, 8, 0]  	505	1 
[1, 5, 15, 0]  	508	2 
[0, 35, 2, 0]  	513	1 
[0, 6, 15, 0]  	513	1 
[0, 20, 9, 0]  	521	1 
[1, 4, 16, 0]  	524	2 
[0, 34, 3, 0]  	529	1 
[0, 5, 16, 0]  	529	1 
[0, 32, 4, 0]  	532	2 
[0, 19, 10, 0]  	537	1 
[0, 4, 17, 0]  	545	1 
[0, 0, 19, 0]  	551	1  <--- 3
[0, 18, 11, 0]  	553	1 
[0, 3, 18, 0]  	561	1 
[8, 5, 2, 1]  	187	2 
[8, 4, 5, 1]  	261	4 
[7, 2, 9, 1]  	343	3 
[7, 0, 11, 1]  	375	5 
[11, 0, 10, 1]  	378	4 
[7, 14, 5, 1]  	383	5 
[2, 15, 6, 1]  	385	4 
[5, 27, 0, 1]  	391	3 
[4, 13, 7, 1]  	404	4 
[4, 29, 0, 1]  	409	6 
[4, 0, 13, 1]  	409	5 
[4, 27, 1, 1]  	412	5 
[3, 13, 8, 1]  	425	4 
[3, 9, 10, 1]  	431	4 
[2, 24, 4, 1]  	444	3 
[2, 34, 0, 1]  	458	5 
[2, 5, 13, 1]  	458	4 
[1, 20, 7, 1]  	471	3 
[1, 34, 1, 1]  	479	3 
[0, 35, 1, 1]  	484	2 
[3, 17, 2, 2]  	303	3 
[18, 1, 6, 2]  	331	4 
[3, 16, 5, 2]  	377	3 
[6, 15, 5, 2]  	388	7 
[3, 28, 0, 2]  	388	4 
[6, 0, 12, 2]  	396	7 
[2, 30, 0, 2]  	406	3 
[2, 21, 5, 2]  	434	3 
[2, 26, 3, 2]  	441	3 
[1, 35, 0, 2]  	463	3 
[1, 29, 3, 2]  	472	3 
[26, 0, 0, 3]  	208	4 
[20, 4, 3, 3]  	299	5 
[18, 0, 7, 3]  	347	7 
[10, 0, 10, 3]  	370	6 
[6, 16, 4, 3]  	372	6 
[6, 24, 0, 4]  	360	5 
[1, 19, 8, 4]  	487	3 
[0, 34, 2, 4]  	500	2 
[0, 29, 5, 4]  	522	2 
[2, 29, 2, 5]  	451	4 
[1, 23, 5, 5]  	452	2 
[1, 33, 2, 5]  	495	3 
[0, 33, 3, 5]  	516	2 
[2, 0, 15, 44]  	451	3 
[1, 4, 15, 44]  	495	2 
[0, 4, 16, 44]  	516	1 
[0, 8, 12, 45]  	452	1 
[5, 4, 7, 46]  	295	4 
[1, 6, 13, 46]  	463	2 
[0, 4, 15, 46]  	487	1 
[0, 0, 18, 46]  	522	1 
[13, 8, 0, 47]  	208	3 
[7, 5, 5, 47]  	266	3 
[0, 0, 14, 47]  	406	1 
[0, 8, 11, 47]  	423	1 
[0, 11, 10, 47]  	433	1 
[0, 20, 8, 47]  	492	1 
[0, 1, 10, 48]  	303	1 
[0, 0, 13, 48]  	377	1 
[2, 13, 7, 48]  	388	3 
[0, 20, 6, 48]  	434	1 
[1, 24, 4, 48]  	436	1 
[1, 34, 0, 48]  	450	3 
[0, 35, 0, 48]  	455	1 
[0, 1, 6, 49]  	187	1 
[7, 0, 10, 49]  	346	3 
[1, 27, 0, 49]  	359	2 
[4, 15, 5, 49]  	372	5 
[1, 24, 3, 49]  	407	1 
[0, 33, 2, 49]  	487	2 
[0, 32, 3, 49]  	503	1 
------
The gap is between 6 and 43.
Lengths: 3 3 6 9 3 6.
For 490 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^17*z^9
1*y^31*z^3
1*y^2*z^16

For 274 = 3*d/2-d1-d2-d3 you get 6 in char 0.
1*x^5*y^18
1*x^4*y^3*z^7
1*x^3*y^17*z^1
1*x^2*y^2*z^8
1*x^1*y^16*z^2
1*y^1*z^9

For 58 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*y^2
1*x^2*y^1*z^1
1*z^2

Extra powers of p used 4.
The invariant extra is equal to 5.
Start computing 3^3 Delta^1 (x1x2x3)^2... Done.
Start computing 3^4 Delta^2 (x1x2x3)^2... Done.
Start computing 3^5 Delta^3 (x1x2x3)^2... Done.
Start computing 3^6 Delta^4 (x1x2x3)^2... Done.
Start computing 3^7 Delta^5 (x1x2x3)^2... Done.
Start computing 3^8 Delta^6 (x1x2x3)^2... Done.
Start computing 3^9 Delta^7 (x1x2x3)^2... Done.
Start computing 3^10 Delta^8 (x1x2x3)^2... Done.
Start computing 3^11 Delta^9 (x1x2x3)^2... Done.
Start computing 3^12 Delta^10 (x1x2x3)^2... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 12 
*/
A = \
[7549914706015588855578,4795361713385996801265,5564187668878712687943,8276326211151335703177,8669199284649786429702,8360130287629705394862,4176377018363527049565,8631866828380394873583,7056648818731678199076,7240328989177781802105,7476249882087401513733,3713354024575927502682;\
1663036084413470243466,1070504560351669999491,1778019089591561021478,4039035897533607095139,3277376677623215823003,5972176165872943641492,623489988967956757566,4863157872752978363250,2110071263855500487277,4188453825910780555146,4141537362022257246348,2892479074485941283624;\
6375030892215533784756,104473734088760813388,3115089136915268618178,6898873270205400509700,7255931022792567035874,3570267568425661508805,3860983813788986147955,993260713477036579695,3974853760323863250942,4029873962593685061600,2932132237680243736683,5323078906650775177380;\
8279396695465840234782,3428874288431271130410,6580417469532263068878,1290023808649217737569,4233555279246018799890,1716520111476026230998,6590377856652446971908,1107802472317420338945,2540575156191311687346,5993510686202261978469,7230155156365642208019,6640006972938052462029;\
6205128321481438133340,8346690311063073977295,4400607475513378229742,7342400671880770507635,2422189177626080656791,4996015326879429423573,5914743834178034000802,566985927427047509292,6262712493411377205315,7697725830140717489499,8816857839874573489350,1669453321599771310629;\
1970140658831208140022,4439367949235536018116,7966111222037237022045,1015174449041597625339,4600693427539844520045,5161788881678363298552,8146749775924006234695,4569749175765108936663,517587734457902242287,3745134394757062901460,7028566966900253611071,587393087520377388429;\
4150650473896398073326,2908606561904092315542,5703257160318445307937,6471043741380554450433,3011480517527030274696,4973268154106829986892,1241805343293702807102,7258678173388227691980,79495921556180157339,5367397682813029097580,4055710616935868946321,2283814389527090193429;\
792374023860280809318,4622056438757849560413,4058694771556361082957,5916057006933864912141,7241561806070671328988,7065363033153920730726,5750107783702641670176,1656279061529066805357,702648053522462040813,4329410506173344223198,7719057475049837130804,3454383404871127773198;\
5859540710644348827810,4476191766547810169411,2394416256277855495788,690267846832951908474,7306964007797201421996,2500598982591069971679,6320330067796176003597,6735936416348358489024,6762209439580664077746,5850071149228930294146,7331562068832196717419,7821428055342336827343;\
4048402172820798780324,5613878551528109278161,779153379664123844811,4435981272285603431175,7062294297323970698778,7282060747162081130988,3734183194795618240500,1415727641655532046331,3613359665545342066566,8753953211540861786964,628557514715747654667,8105581169902507197852;\
3199155419228620336659,1598813301298353033651,5478045982047627305292,8255244684766297133394,5601588724991419081209,8401720791898778339655,7709673640406184391365,6328972605540069683793,1198157420635578635454,7251227860356563325975,1663158988664846285121,1678445562646897933833;\
2022723936757000679769,8020322777139457330530,2977483123579022347545,3221586832390392474072,1388701212465115767537,2179886242883246104725,5454810276520737823560,8793011981076639495966,7711263726181692589773,8479549705632055476822,6340975726618387385100,4659144582819937426884]
/* 
This matrix times 3^(-4) should be the matrix of frobenius.
*/ 
B = 3^(-4) * A; 
/* Freed 31 lists. */
