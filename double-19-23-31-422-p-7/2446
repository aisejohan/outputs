/* Comments begin... 
Coefficient of   x^21 * y^1               = 3
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = 0
Coefficient of   x^4 * y^11 * z^3         = -1
Coefficient of   x^2 * y^14 * z^2         = 2
Coefficient of   x^1 * z^13               = 3
Coefficient of   y^17 * z^1               = 1

Here is the polynomial we're using this time:

3*x^21*y^1 + 2*x^8*y^5*z^5 + -1*x^4*y^11*z^3 + 2*x^2*y^14*z^2 + 3*x^1*z^13 + 1*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 156
[8, 5, 4, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[4, 11, 3, 0]  	422	4 
[5, 0, 14, 0]  	529	6 
[17, 11, 2, 0]  	638	5 
[15, 14, 2, 0]  	669	4 
[13, 17, 2, 0]  	700	8 
[7, 22, 2, 0]  	701	7 
[19, 14, 1, 0]  	714	7 
[11, 20, 2, 0]  	731	7 
[5, 25, 2, 0]  	732	6 
[14, 3, 13, 0]  	738	7 
[7, 9, 13, 0]  	743	7 
[18, 0, 13, 0]  	745	8 
[20, 0, 12, 0]  	752	6 
[7, 26, 1, 0]  	762	6 
[3, 28, 2, 0]  	763	5 
[17, 3, 12, 0]  	764	7 
[11, 23, 1, 0]  	769	6 
[5, 28, 1, 0]  	770	6 
[20, 17, 0, 0]  	771	2 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[9, 25, 1, 0]  	777	6 
[3, 14, 13, 0]  	782	5 
[13, 22, 1, 0]  	784	6 
[3, 32, 0, 0]  	793	5 
[14, 23, 0, 0]  	795	6 
[7, 29, 0, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[3, 11, 16, 0]  	806	5 
[11, 26, 0, 0]  	807	5 
[5, 31, 0, 0]  	808	5 
[16, 22, 0, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[17, 20, 1, 0]  	814	5 
[9, 28, 0, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[13, 25, 0, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 4, 22, 0]  	831	4 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 20, 11, 0]  	858	4 
[2, 21, 11, 0]  	862	3 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[1, 13, 19, 0]  	907	2 
[1, 12, 20, 0]  	915	2 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[2, 0, 29, 0]  	937	3 
[0, 30, 8, 0]  	938	1 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[20, 1, 0, 1]  	403	5 
[16, 11, 2, 1]  	619	8 
[14, 14, 2, 1]  	650	7 
[12, 17, 2, 1]  	681	9 
[18, 14, 1, 1]  	695	8 
[16, 0, 13, 1]  	707	6 
[10, 20, 2, 1]  	712	8 
[13, 3, 13, 1]  	719	8 
[16, 17, 1, 1]  	726	8 
[19, 0, 12, 1]  	733	7 
[10, 23, 1, 1]  	750	7 
[8, 25, 1, 1]  	758	7 
[12, 22, 1, 1]  	765	7 
[19, 18, 0, 1]  	775	6 
[15, 20, 1, 1]  	776	6 
[6, 29, 0, 1]  	781	6 
[10, 26, 0, 1]  	788	6 
[4, 31, 0, 1]  	789	6 
[8, 28, 0, 1]  	796	6 
[12, 25, 0, 1]  	803	6 
[3, 6, 21, 1]  	846	4 
[3, 24, 8, 1]  	857	4 
[2, 29, 5, 1]  	860	4 
[3, 27, 6, 1]  	864	4 
[2, 14, 17, 1]  	887	4 
[2, 0, 28, 1]  	906	4 
[1, 32, 5, 1]  	910	3 
[1, 24, 12, 1]  	943	3 
[0, 35, 5, 1]  	960	2 
[15, 0, 13, 2]  	688	9 
[14, 20, 1, 2]  	757	7 
[3, 3, 23, 2]  	839	4 
[2, 13, 18, 2]  	895	3 
[1, 31, 6, 2]  	918	3 
[1, 30, 7, 2]  	926	2 
[1, 1, 29, 2]  	941	2 
[1, 0, 30, 2]  	949	2 
[1, 35, 4, 4]  	948	3 
[1, 4, 27, 21]  	948	2 
[2, 20, 11, 23]  	839	3 
[0, 16, 17, 23]  	895	1 
[7, 5, 5, 24]  	403	4 
[4, 0, 15, 24]  	541	5 
[6, 22, 2, 24]  	682	7 
[13, 3, 12, 24]  	688	7 
[4, 25, 2, 24]  	713	6 
[12, 22, 0, 24]  	734	6 
[3, 11, 14, 24]  	744	4 
[4, 28, 1, 24]  	751	5 
[2, 31, 1, 24]  	782	5 
[2, 23, 9, 24]  	846	3 
[2, 10, 19, 24]  	857	3 
[1, 15, 16, 24]  	860	1 
[0, 16, 16, 24]  	864	1 
[0, 41, 0, 24]  	943	2 
[0, 4, 28, 24]  	960	1 
------
The gap is between 5 and 20.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 7^3 Delta^1 (x1x2x3)^6... Done.
Start computing 7^4 Delta^2 (x1x2x3)^6... Done.
Start computing 7^5 Delta^3 (x1x2x3)^6... Done.
Start computing 7^6 Delta^4 (x1x2x3)^6... Done.
Start computing 7^7 Delta^5 (x1x2x3)^6... Done.
Start computing 7^8 Delta^6 (x1x2x3)^6... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[184042340140385424118,39818575816037891902,89844547833307068838,93620345574881804966,21360274394133972311,163641777042910086718,175608595292449743277,7634459273478645930,42133613938574104842,118891058992264719657,82947201454085380552;\
141424624743171232723,77534893340202511824,69977676138289856159,21993251673752095254,182049053181125099662,180867892238816076315,187340670525653255254,139254181722496501913,78210055903902777414,174425738751803157906,139596264593366317359;\
116054661718251820192,73092778819814278353,102714518856791515407,137712570188933356218,21882645773872420810,81524753154435522155,73580128173586677454,64137826882584583625,84246016169589291416,10659782341385679047,115550981264989230604;\
138879099727443671622,163273051508394791943,150478865359182777547,131504208966485776442,68530931912110494946,124615898727841889151,112229063642479150409,159903804164632814958,108728846656829238434,90564818554517937063,12521639439419273926;\
13686131081659028877,156256034593585006000,65807501464443138926,96550163613687368830,47618512419627914506,164970236229240458471,142643446218055803902,97284194718710046957,166620592515492580815,165469390823821913640,7334652119037558735;\
155806242706129863194,34000601719166784948,110550933472807186982,19277583012829327508,160098547806541089634,45743813019015819694,31897754861809042185,182962063936222996019,172507497620870145874,71861124856666155178,72293264216886070708;\
140778752758750642261,188290579534090463373,14278039557854220791,122990306934500569970,50600021165504797539,80898498547563666858,165528625082633070216,162162558800799002600,59783014413292585653,166616218490501343613,6515755264217280361;\
133348783175297424929,51092513513620768783,97338881789186400458,72490804300727729448,63632429555452973215,22376643522143291745,91169212716679845412,38269505320458056197,42340293146673196794,162661707018944797818,106713392361146555929;\
75899666511153580781,45818501613156326061,12506849493686868082,156777639726039104087,96442207774114362279,10125122176024862167,14458469522210036225,14660219833815105536,86998448676189158605,126487942640108445802,147920808298982126401;\
175125926097138803447,60527201975457730962,8509624195152497227,94094556389195447253,44328672980908205470,37213689543163874503,175554627884872522083,120587179173704394557,33845201864565661192,190500739752780429014,42022338468836977468;\
3649595425760576231,133198446738318892590,110134818276831614706,164894662680930350154,176612637656894886699,182377153355384426103,103153419274985475137,83221943717858912379,9038881499004821317,6926567476196341876,87463052567032330685]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 52 lists. */
