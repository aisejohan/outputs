/* Comments begin... 
Coefficient of   x^21 * y^1               = 1
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = 1
Coefficient of   x^4 * y^11 * z^3         = 1
Coefficient of   x^2 * y^14 * z^2         = -1
Coefficient of   x^1 * z^13               = 3
Coefficient of   y^17 * z^1               = -2

Here is the polynomial we're using this time:

1*x^21*y^1 + 2*x^8*y^5*z^5 + 1*x^6*y^8*z^4 + 1*x^4*y^11*z^3 + -1*x^2*y^14*z^2 + 3*x^1*z^13 + -2*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 162
[8, 5, 4, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[6, 8, 4, 0]  	422	5 
[6, 11, 3, 0]  	460	6 
[4, 14, 3, 0]  	491	5 
[5, 0, 14, 0]  	529	6 
[19, 8, 3, 0]  	638	6 
[15, 14, 2, 0]  	669	6 
[19, 11, 2, 0]  	676	6 
[13, 17, 2, 0]  	700	7 
[16, 0, 13, 0]  	707	6 
[19, 14, 1, 0]  	714	7 
[11, 20, 2, 0]  	731	7 
[5, 25, 2, 0]  	732	6 
[4, 11, 13, 0]  	732	6 
[14, 3, 13, 0]  	738	7 
[6, 26, 1, 0]  	743	7 
[20, 0, 12, 0]  	752	6 
[8, 25, 1, 0]  	758	7 
[9, 23, 2, 0]  	762	6 
[3, 28, 2, 0]  	763	5 
[17, 3, 12, 0]  	764	7 
[5, 28, 1, 0]  	770	6 
[20, 17, 0, 0]  	771	2 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[15, 20, 1, 0]  	776	6 
[3, 14, 13, 0]  	782	5 
[13, 22, 1, 0]  	784	6 
[10, 26, 0, 0]  	788	6 
[3, 32, 0, 0]  	793	5 
[7, 29, 0, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[3, 11, 16, 0]  	806	5 
[5, 31, 0, 0]  	808	5 
[16, 22, 0, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[15, 23, 0, 0]  	814	5 
[9, 28, 0, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[13, 25, 0, 0]  	822	5 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 4, 22, 0]  	831	4 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 24, 8, 0]  	857	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[20, 1, 0, 1]  	403	6 
[18, 8, 3, 1]  	619	10 
[14, 14, 2, 1]  	650	10 
[18, 11, 2, 1]  	657	9 
[12, 17, 2, 1]  	681	9 
[15, 0, 13, 1]  	688	9 
[18, 14, 1, 1]  	695	8 
[7, 22, 2, 1]  	701	7 
[10, 20, 2, 1]  	712	8 
[13, 3, 13, 1]  	719	8 
[19, 0, 12, 1]  	733	7 
[17, 17, 1, 1]  	745	7 
[14, 20, 1, 1]  	757	7 
[12, 22, 1, 1]  	765	7 
[11, 23, 1, 1]  	769	6 
[19, 18, 0, 1]  	775	6 
[6, 29, 0, 1]  	781	6 
[4, 31, 0, 1]  	789	6 
[14, 23, 0, 1]  	795	6 
[8, 28, 0, 1]  	796	6 
[12, 25, 0, 1]  	803	6 
[3, 17, 12, 1]  	820	5 
[2, 18, 12, 1]  	824	4 
[3, 6, 21, 1]  	846	4 
[3, 20, 11, 1]  	858	4 
[2, 27, 7, 1]  	876	3 
[2, 26, 8, 1]  	884	3 
[2, 14, 17, 1]  	887	4 
[16, 17, 1, 2]  	726	8 
[10, 23, 1, 2]  	750	7 
[0, 38, 4, 2]  	998	2 
[0, 7, 27, 23]  	998	1 
[7, 5, 5, 24]  	403	5 
[5, 11, 4, 24]  	472	4 
[4, 0, 15, 24]  	541	5 
[5, 8, 13, 24]  	682	6 
[5, 25, 1, 24]  	701	6 
[4, 25, 2, 24]  	713	5 
[15, 3, 12, 24]  	726	7 
[3, 11, 14, 24]  	744	4 
[8, 26, 0, 24]  	750	6 
[4, 28, 1, 24]  	751	6 
[14, 22, 0, 24]  	772	6 
[2, 31, 1, 24]  	782	4 
[2, 34, 0, 24]  	820	4 
[1, 35, 0, 24]  	824	3 
[2, 4, 23, 24]  	843	3 
[2, 23, 9, 24]  	846	2 
[2, 6, 22, 24]  	858	3 
[1, 13, 18, 24]  	876	2 
[1, 12, 19, 24]  	884	2 
[1, 31, 5, 24]  	887	3 
[0, 30, 7, 24]  	907	1 
------
The gap is between 3 and 22.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 7^3 Delta^1 (x1x2x3)^6... Done.
Start computing 7^4 Delta^2 (x1x2x3)^6... Done.
Start computing 7^5 Delta^3 (x1x2x3)^6... Done.
Start computing 7^6 Delta^4 (x1x2x3)^6... Done.
Start computing 7^7 Delta^5 (x1x2x3)^6... Done.
Start computing 7^8 Delta^6 (x1x2x3)^6... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[160728372774352232943,153626350086066630172,189806725324685224238,52666670899125225964,52535573709182476409,83335433623417275405,175096327969256806056,181226106439563598959,143648549600757597095,73121569697514513784,49838943812959496405;\
89661222526305039017,105230982010572018476,85280502385768756400,146515090637014309651,8577085408191649244,181143005048265120595,126228375948194252971,177139350507367802204,179569653184941127185,134996622066511997617,190992071079730706793;\
59568817539339982422,60427530585664407126,164594197402183331231,131012986277214651295,99942270806092735559,60084518410603687602,149351821188431712921,187517714565276762709,119678395229406727336,69143230778873050968,4239982999859241033;\
23168565312211921004,146548165236279284800,145859732018001874366,59951181409915454610,15593765513326849681,16459158468532615143,129516684270749395249,159051846922979051517,151891602011568920375,61573104590384052057,48246795588577067020;\
78089413027365266143,106918155130419544853,169573373724027931186,78414039397872018379,146475569436268604539,44388271109535407215,140409103723293825896,83063473612593209715,153796150811595682257,15887920529290354629,68372371799669118195;\
144495903920035566382,137783514968171225185,39421570805220421716,36765245295235087918,32637437546795650968,15823895367376521866,108980781887973932937,44109318278436022759,177804758071470826604,66019061144465231733,82645080249217169551;\
99316579483884330589,482382759615688237,140600251960214595974,148094248876663008437,16951613203038467373,63274465963120526499,157151535426054183630,41301030142019950022,148124239856283166350,39011238613468650291,28040916028818546896;\
142894595632508139473,125108853445671783460,70102136195209108952,20621705408546432246,49966522422548370380,134471391182115606136,56917322946017403457,148254228580007746294,64887719057592579610,136772979697093246304,39689268546990539029;\
49708988230754694863,67656064425687689868,117337062992885408134,121074703008828620933,183410134033007911876,73306620374824614225,130952615514168992642,38787903990756219768,177264903297480252772,86505619877974405199,116396576560436093803;\
105455153150548622452,112014851036229284140,3267993606884495809,160354911623333709037,103848989207365160675,139354396552894531911,18363444434804973686,56746452802987738854,178759370097042205961,97787721234634697112,2244682873568800420;\
135325765165021227860,64444963159201491719,32292053601703089582,38621443600089688786,79826703170930442118,8378957986331633652,66414115523918988350,170685360222190243822,51508823310812354522,114175326936750834706,77709453677756410762]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 52 lists. */
