/* Comments begin... 
Coefficient of   x^21 * y^1               = -3
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 1
Coefficient of   x^6 * y^8 * z^4         = -1
Coefficient of   x^4 * y^11 * z^3         = 2
Coefficient of   x^2 * y^14 * z^2         = -3
Coefficient of   x^1 * z^13               = 3
Coefficient of   y^17 * z^1               = -2

Here is the polynomial we're using this time:

-3*x^21*y^1 + 1*x^8*y^5*z^5 + -1*x^6*y^8*z^4 + 2*x^4*y^11*z^3 + -3*x^2*y^14*z^2 + 3*x^1*z^13 + -2*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 158
[8, 5, 4, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[6, 8, 4, 0]  	422	5 
[6, 11, 3, 0]  	460	6 
[4, 14, 3, 0]  	491	5 
[5, 0, 14, 0]  	529	6 
[19, 8, 3, 0]  	638	6 
[15, 14, 2, 0]  	669	6 
[19, 11, 2, 0]  	676	6 
[13, 17, 2, 0]  	700	8 
[16, 0, 13, 0]  	707	6 
[19, 14, 1, 0]  	714	7 
[11, 20, 2, 0]  	731	7 
[5, 25, 2, 0]  	732	6 
[4, 11, 13, 0]  	732	6 
[14, 3, 13, 0]  	738	7 
[6, 26, 1, 0]  	743	7 
[20, 0, 12, 0]  	752	6 
[8, 25, 1, 0]  	758	7 
[9, 23, 2, 0]  	762	6 
[3, 28, 2, 0]  	763	5 
[17, 3, 12, 0]  	764	7 
[5, 28, 1, 0]  	770	6 
[20, 17, 0, 0]  	771	2 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[15, 20, 1, 0]  	776	6 
[3, 14, 13, 0]  	782	5 
[13, 22, 1, 0]  	784	6 
[10, 26, 0, 0]  	788	6 
[3, 32, 0, 0]  	793	5 
[7, 29, 0, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[3, 11, 16, 0]  	806	5 
[5, 31, 0, 0]  	808	5 
[16, 22, 0, 0]  	810	6 
[4, 1, 23, 0]  	812	5 
[15, 23, 0, 0]  	814	5 
[9, 28, 0, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[13, 25, 0, 0]  	822	5 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[3, 4, 22, 0]  	831	4 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 24, 8, 0]  	857	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[20, 1, 0, 1]  	403	6 
[18, 8, 3, 1]  	619	10 
[14, 14, 2, 1]  	650	10 
[18, 11, 2, 1]  	657	9 
[12, 17, 2, 1]  	681	9 
[15, 0, 13, 1]  	688	9 
[18, 14, 1, 1]  	695	8 
[7, 22, 2, 1]  	701	7 
[10, 20, 2, 1]  	712	8 
[13, 3, 13, 1]  	719	8 
[19, 0, 12, 1]  	733	7 
[14, 20, 1, 1]  	757	7 
[12, 22, 1, 1]  	765	7 
[11, 23, 1, 1]  	769	6 
[19, 18, 0, 1]  	775	6 
[6, 29, 0, 1]  	781	6 
[4, 31, 0, 1]  	789	6 
[14, 23, 0, 1]  	795	6 
[8, 28, 0, 1]  	796	6 
[12, 25, 0, 1]  	803	6 
[3, 17, 12, 1]  	820	5 
[2, 18, 12, 1]  	824	4 
[3, 20, 11, 1]  	858	4 
[2, 28, 6, 1]  	868	4 
[2, 26, 8, 1]  	884	3 
[17, 17, 1, 2]  	745	7 
[10, 23, 1, 2]  	750	7 
[16, 17, 1, 3]  	726	8 
[15, 3, 12, 23]  	726	7 
[14, 22, 0, 23]  	772	6 
[7, 5, 5, 24]  	403	5 
[5, 11, 4, 24]  	472	4 
[4, 0, 15, 24]  	541	5 
[5, 8, 13, 24]  	682	6 
[5, 25, 1, 24]  	701	6 
[4, 25, 2, 24]  	713	5 
[3, 11, 14, 24]  	744	4 
[8, 26, 0, 24]  	750	6 
[4, 28, 1, 24]  	751	6 
[2, 31, 1, 24]  	782	4 
[2, 34, 0, 24]  	820	4 
[1, 35, 0, 24]  	824	3 
[2, 4, 23, 24]  	843	3 
[2, 6, 22, 24]  	858	3 
[1, 14, 17, 24]  	868	3 
[1, 12, 19, 24]  	884	2 
------
The gap is between 4 and 22.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 7^3 Delta^1 (x1x2x3)^6... Done.
Start computing 7^4 Delta^2 (x1x2x3)^6... Done.
Start computing 7^5 Delta^3 (x1x2x3)^6... Done.
Start computing 7^6 Delta^4 (x1x2x3)^6... Done.
Start computing 7^7 Delta^5 (x1x2x3)^6... Done.
Start computing 7^8 Delta^6 (x1x2x3)^6... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[95616714389457619728,156466749145476548078,188709611673312286809,141737551764435227972,85490517698757617936,185983432829910941456,95506458219692030700,135532923081175483080,105369313283268453104,140482363261006070892,97703155135842732679;\
80732827093473606592,947790527938661643,144952377506744479851,134241978852680697082,120643565025034499903,80760780630510998136,76826343483450128589,103824007549312457239,48062323681717420726,123291946693286664195,108070033298425040395;\
95925177531522890854,118216780518729155875,53219660956605710884,12293089474297293424,85770803568801504342,47871078047209225697,139317276969169027785,74141860088994058802,5327654415287063678,188000602098437156357,100712917118253118805;\
60562686930511274975,94418227877006281425,179290072765947657072,149653548586112332293,134780104124272639270,61889555855112890737,185270206510963759801,59405311789177531758,110203423569100663410,129386255252912787136,135072648219571161988;\
124962215920689384761,19508723118407149672,41206040499952429775,100782492472616258920,168044851336057321605,148631974007110337744,83388432408737868370,142023860147791658568,45346929610581846149,9144633925832310577,3666509759234383656;\
168644032402922934658,84025545902205650084,4544161059573227630,171354181544281716582,50879772215114002482,45387617674817514761,20497863970353651357,146851693729272641648,18248150492578343967,120739295120714332804,164366984563316706059;\
134951239677454057162,179021805416351275378,104775035423437508486,62421479886519533479,90201079396016744820,66554683691800748570,111977564398594226920,70444273382198304435,20786949521926699125,82241659278507980216,116411990071188440804;\
125543402172387396998,86653051676085485755,174216124859742112113,97706178343977649964,75073077115457181936,118711164718828579191,148977869162785666437,126377942944711520818,176699408820876723481,184577237130016700410,71773106990821919403;\
4949933452909653845,24631805311681160901,82028616821178956558,68359313803606625520,162880586513271345488,163603076321542669098,115864384656132555485,46751381539562334082,53469076899771218056,67074835728375149934,4706390788178318463;\
75196883007917855966,15109654077265156795,15621717001495208474,144542634744911290888,180869493813632948254,29256824354496727331,48042228322937631517,4984984170031464095,46603107948294290974,163543274464475668252,186707474198309895173;\
153088833244267174318,9215956514479161053,127644163426988818954,86553459979935786110,27917035135785751172,160584325976846480366,12421048072452783505,139738137670662896617,152128499653073954920,143802700352217129531,121268335915972253078]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 52 lists. */
