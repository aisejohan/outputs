/* Comments begin... 
Coefficient of   x^21 * y^1               = 2
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 3
Coefficient of   x^6 * y^8 * z^4         = -1
Coefficient of   x^4 * y^11 * z^3         = -3
Coefficient of   x^2 * y^14 * z^2         = 0
Coefficient of   x^1 * z^13               = -3
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

2*x^21*y^1 + 3*x^8*y^5*z^5 + -1*x^6*y^8*z^4 + -3*x^4*y^11*z^3 + -3*x^1*z^13 + 3*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 159
[8, 5, 4, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[6, 8, 4, 0]  	422	4 
[6, 11, 3, 0]  	460	6 
[4, 14, 3, 0]  	491	5 
[5, 0, 14, 0]  	529	6 
[19, 8, 3, 0]  	638	5 
[15, 14, 2, 0]  	669	6 
[19, 11, 2, 0]  	676	5 
[13, 17, 2, 0]  	700	8 
[7, 22, 2, 0]  	701	6 
[18, 0, 12, 0]  	714	6 
[16, 17, 1, 0]  	726	6 
[11, 20, 2, 0]  	731	7 
[5, 25, 2, 0]  	732	6 
[4, 11, 13, 0]  	732	6 
[14, 3, 13, 0]  	738	7 
[3, 28, 2, 0]  	763	5 
[11, 23, 1, 0]  	769	6 
[5, 28, 1, 0]  	770	6 
[20, 17, 0, 0]  	771	2 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[15, 20, 1, 0]  	776	6 
[3, 14, 13, 0]  	782	5 
[13, 22, 1, 0]  	784	6 
[3, 32, 0, 0]  	793	5 
[8, 28, 0, 0]  	796	6 
[7, 29, 0, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[3, 11, 16, 0]  	806	5 
[11, 26, 0, 0]  	807	5 
[5, 31, 0, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[15, 23, 0, 0]  	814	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[13, 25, 0, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[17, 22, 0, 0]  	829	5 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[3, 6, 22, 0]  	877	3 
[2, 23, 10, 0]  	877	3 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[20, 1, 0, 1]  	403	5 
[18, 8, 3, 1]  	619	9 
[14, 14, 2, 1]  	650	10 
[18, 11, 2, 1]  	657	8 
[12, 17, 2, 1]  	681	9 
[17, 0, 12, 1]  	695	7 
[16, 0, 13, 1]  	707	4 
[10, 20, 2, 1]  	712	8 
[13, 3, 13, 1]  	719	8 
[10, 23, 1, 1]  	750	7 
[14, 20, 1, 1]  	757	7 
[7, 26, 1, 1]  	762	6 
[12, 22, 1, 1]  	765	7 
[19, 18, 0, 1]  	775	6 
[9, 25, 1, 1]  	777	6 
[6, 29, 0, 1]  	781	6 
[10, 26, 0, 1]  	788	6 
[4, 31, 0, 1]  	789	6 
[14, 23, 0, 1]  	795	6 
[12, 25, 0, 1]  	803	6 
[16, 22, 0, 1]  	810	6 
[3, 4, 22, 1]  	831	4 
[3, 6, 21, 1]  	846	4 
[3, 24, 8, 1]  	857	4 
[2, 15, 16, 1]  	879	4 
[1, 10, 21, 1]  	900	2 
[1, 12, 20, 1]  	915	2 
[0, 38, 4, 1]  	998	2 
[15, 0, 13, 2]  	688	7 
[6, 26, 1, 2]  	743	7 
[8, 25, 1, 2]  	758	7 
[2, 13, 18, 2]  	895	3 
[5, 12, 12, 23]  	743	6 
[4, 1, 22, 23]  	781	5 
[1, 30, 6, 23]  	895	2 
[7, 5, 5, 24]  	403	4 
[5, 11, 4, 24]  	472	5 
[4, 0, 15, 24]  	541	5 
[6, 22, 2, 24]  	682	5 
[14, 17, 1, 24]  	688	6 
[4, 25, 2, 24]  	713	5 
[3, 11, 14, 24]  	744	4 
[4, 28, 1, 24]  	751	5 
[6, 28, 0, 24]  	758	6 
[5, 29, 0, 24]  	762	5 
[2, 31, 1, 24]  	782	5 
[2, 21, 9, 24]  	800	3 
[2, 10, 19, 24]  	857	3 
[1, 32, 4, 24]  	879	3 
[0, 27, 9, 24]  	900	1 
[0, 29, 8, 24]  	915	1 
[0, 7, 27, 24]  	998	1 
------
The gap is between 3 and 22.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 7^3 Delta^1 (x1x2x3)^6... Done.
Start computing 7^4 Delta^2 (x1x2x3)^6... Done.
Start computing 7^5 Delta^3 (x1x2x3)^6... Done.
Start computing 7^6 Delta^4 (x1x2x3)^6... Done.
Start computing 7^7 Delta^5 (x1x2x3)^6... Done.
Start computing 7^8 Delta^6 (x1x2x3)^6... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[147268193906532369462,162826650589937076903,172104471950326640627,87865162446810050470,56890012121662096055,37309111255210022879,187750570259528857553,43557321342121675858,9006756204925709013,96773401837536515917,1697442024728584505;\
9775356072356066779,136355408577735164380,167397347827102882598,106588887767345499712,18535264950934433604,190160201716753622606,92462294425167066953,122158697453812285651,31920911574482094010,111731498456914233387,137648597436867909301;\
176441140990948207750,1785655742331580691,74781578379529508926,16994153118749401588,141446842228710809602,167337869073692130016,110039218914953651757,137471371579397511285,38097934640406184194,80029660673422303508,87334768631693163875;\
175811541684251173715,176851188704436850702,144727576631823986128,79501950295637339855,134308040488242557405,56165867496475857190,176610801263723723988,148023195033809491711,163918326596337798625,128244160689714846098,55321336312989247298;\
134886789846523276220,136865748280585941677,51614939176462858243,21563278095141631821,147395147060446050990,106907191072337537399,73730257945374338112,3406812324371212974,184715038747542184413,141471473586163740642,107661652755273560440;\
37333999665446576753,3672380771665092986,156008418993034252215,158064180251116087270,27393649917624687550,34583449861059674967,61415526343613765267,173057001730145861979,115085898227092120727,6341701448643332177,95691854890579425646;\
26095350245292746909,44627787459821844302,100512986526325192598,131354471906096910758,114265503508114304829,13970393144478851080,189293946028409220166,75837158813674258196,117613602529758818399,131963882792098331541,30343317557953490986;\
51895314088085419285,147848629662351495708,25663083365288778849,86468457589141372689,163360453540014300619,129350873342410073935,187627092710370196149,137036279539081745333,133698364980329753604,160198477624614746373,170782804684504566001;\
50398545091175575805,22626607773955853591,64162974422714451242,122669582337952928957,114621122649071397030,185681786926267249933,34734233366942829650,119053694906237449652,171740239787473943957,173627108298142583063,99842780634565630396;\
170247367729454499271,35918087774676545337,44686921422280774551,132356878935521528183,79954941662216185271,131128724445937888908,126174373615596701738,26914975260089387184,178497396061409786207,26207469519592214574,187558739937894020185;\
42472630011116883796,181675274615452095521,92359146955211120158,162780595405948289847,158068276449855251662,139663737358487489259,8098113323022362500,44057244196121314249,140918913544664442985,169163296805214373627,26812659513175397953]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 52 lists. */
