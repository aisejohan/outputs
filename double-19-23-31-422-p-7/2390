/* Comments begin... 
Coefficient of   x^21 * y^1               = -3
Coefficient of   x^10 * y^2 * z^6         = 1
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = 1
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = 0
Coefficient of   x^1 * z^13               = -1
Coefficient of   y^17 * z^1               = -1

Here is the polynomial we're using this time:

-3*x^21*y^1 + 1*x^10*y^2*z^6 + 2*x^8*y^5*z^5 + 1*x^6*y^8*z^4 + -1*x^1*z^13 + -1*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 158
[10, 2, 5, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[8, 5, 5, 0]  	422	4 
[8, 8, 4, 0]  	460	6 
[3, 0, 14, 0]  	491	4 
[19, 5, 4, 0]  	600	5 
[15, 11, 3, 0]  	631	7 
[19, 8, 3, 0]  	638	6 
[13, 14, 3, 0]  	662	7 
[14, 0, 13, 0]  	669	5 
[9, 19, 2, 0]  	670	5 
[16, 0, 12, 0]  	676	6 
[11, 17, 3, 0]  	693	6 
[13, 17, 2, 0]  	700	6 
[7, 22, 2, 0]  	701	5 
[8, 20, 3, 0]  	705	7 
[15, 17, 1, 0]  	707	4 
[13, 19, 1, 0]  	715	6 
[7, 8, 13, 0]  	720	7 
[15, 19, 0, 0]  	722	6 
[6, 9, 13, 0]  	724	6 
[9, 23, 1, 0]  	731	6 
[5, 25, 2, 0]  	732	7 
[7, 14, 9, 0]  	734	6 
[6, 23, 3, 0]  	736	7 
[7, 25, 1, 0]  	739	6 
[6, 26, 1, 0]  	743	6 
[11, 22, 1, 0]  	746	6 
[6, 17, 8, 0]  	753	5 
[4, 12, 13, 0]  	755	6 
[7, 11, 12, 0]  	758	7 
[6, 12, 12, 0]  	762	5 
[9, 26, 0, 0]  	769	6 
[5, 28, 1, 0]  	770	6 
[20, 17, 0, 0]  	771	2 
[7, 21, 5, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[7, 28, 0, 0]  	777	6 
[6, 29, 0, 0]  	781	6 
[4, 28, 2, 0]  	782	6 
[3, 14, 13, 0]  	782	4 
[3, 29, 2, 0]  	786	5 
[6, 20, 7, 0]  	791	5 
[4, 15, 12, 0]  	793	5 
[6, 15, 11, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[5, 20, 8, 0]  	803	5 
[2, 32, 1, 0]  	805	5 
[6, 22, 6, 0]  	806	6 
[5, 31, 0, 0]  	808	5 
[4, 32, 0, 0]  	812	5 
[5, 18, 10, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[4, 23, 7, 0]  	822	4 
[2, 18, 12, 0]  	824	4 
[5, 17, 11, 0]  	827	5 
[4, 26, 5, 0]  	829	5 
[4, 18, 11, 0]  	831	4 
[5, 24, 6, 0]  	833	5 
[4, 25, 6, 0]  	837	5 
[3, 34, 0, 0]  	839	4 
[2, 35, 0, 0]  	843	4 
[4, 20, 10, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 28, 5, 0]  	856	5 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[20, 1, 0, 1]  	403	5 
[18, 5, 4, 1]  	581	8 
[14, 11, 3, 1]  	612	8 
[18, 8, 3, 1]  	619	8 
[12, 14, 3, 1]  	643	8 
[13, 0, 13, 1]  	650	7 
[15, 0, 12, 1]  	657	8 
[10, 17, 3, 1]  	674	7 
[12, 17, 2, 1]  	681	7 
[14, 17, 1, 1]  	688	7 
[12, 19, 1, 1]  	696	7 
[14, 19, 0, 1]  	703	7 
[8, 23, 1, 1]  	712	7 
[10, 22, 1, 1]  	727	7 
[8, 26, 0, 1]  	750	7 
[5, 11, 13, 1]  	751	7 
[19, 18, 0, 1]  	775	7 
[5, 14, 12, 1]  	789	6 
[4, 21, 9, 1]  	838	4 
[3, 27, 6, 1]  	864	4 
[3, 26, 7, 1]  	872	4 
[1, 32, 5, 1]  	910	3 
[1, 35, 4, 1]  	948	3 
[0, 35, 5, 1]  	960	2 
[9, 2, 6, 24]  	403	4 
[7, 8, 5, 24]  	472	5 
[8, 19, 2, 24]  	651	5 
[6, 22, 3, 24]  	713	7 
[4, 28, 1, 24]  	751	6 
[5, 20, 7, 24]  	772	5 
[4, 31, 0, 24]  	789	5 
[5, 23, 6, 24]  	810	5 
[2, 24, 8, 24]  	838	2 
[2, 12, 17, 24]  	841	3 
[1, 1, 28, 24]  	910	2 
[1, 4, 27, 24]  	948	2 
[0, 4, 28, 24]  	960	1 
[0, 21, 16, 24]  	979	1 
------
The gap is between 2 and 23.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^6*y^14*z^4
1*x^4*y^17*z^3
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 7^3 Delta^1 (x1x2x3)^6... Done.
Start computing 7^4 Delta^2 (x1x2x3)^6... Done.
Start computing 7^5 Delta^3 (x1x2x3)^6... Done.
Start computing 7^6 Delta^4 (x1x2x3)^6... Done.
Start computing 7^7 Delta^5 (x1x2x3)^6... Done.
Start computing 7^8 Delta^6 (x1x2x3)^6... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[170807255125039779993,20260660600981608577,75048470764642194052,124748174941050711036,28110174912943538408,155754625353781155079,132239879755307851849,134935071456832220049,115684822369588406704,40582564586881388561,110146512186342437512;\
79845763767503991572,96784228473002006364,65490595421605847335,38684836070817214761,35952234031326913475,128710675160942613060,152427055319526639498,92098375340070200577,19965733472480487174,168951237997943610349,45767703402171769011;\
84750202598623513516,128306501903289101452,24113973279552325507,44592370109435401295,149863369351492048336,117486061266906194037,123813777239730275040,132995290913708109124,143735195508765080430,168823199362303734381,191531773772292945558;\
167551263442812393473,98301084378724524147,184361591591636239547,145347500855542301421,149604225895463154011,15384914280791555297,122977322995357522482,55314290771049237417,65200715123933579939,19600077815048748052,58569874765339263347;\
157199030169992896540,140007584495321167403,185080556181595581331,36037270827912757991,95323261228749993733,156411358341343772114,122379701423015753465,76450711157514173375,74532780881504223873,29092855316604965473,9022831310326601250;\
121199815650606556395,129282780639988404283,16412777440272291137,167676041300065017706,68992521576290462717,180094838048954944577,119711353634697507620,94752941204508797147,4743333992178404203,174641450640370472969,91773320189253492062;\
60644009342186845276,163034000511809744862,140764162853797807265,84589994266901364906,176821345554660160977,112198283088843350315,18229893766408112068,113057761864264999908,116799616999965246417,35927934452988761736,170090637901080695484;\
164160631666932685907,108679445247140348561,182914452873839247963,59104408873005338829,130317422591392252370,129725161938174286281,27496881044064166763,167037663725110011589,54358551185737325548,135102790890657146347,64244540427660763667;\
174982939389332637466,26392022591940554284,168246143306084783791,119378572799094333060,157664034860084714339,123808974252422038755,95899064185889234165,31314229720286521400,122760259334370569422,20400354766625412306,132920617427614270072;\
182356162116985115556,97709737359434908410,153407843569618162869,122606902894960092896,51644884910555062616,57901359444815966345,99409518684290207484,37432425925315521191,118859299660611466159,150232652473456474061,7160035975010775780;\
157109479693669821026,102948275208688086911,72594328286354997173,129077565447836636554,167226642469221552777,185320836407762573014,66206001263481311078,127000067210097080874,32951498788862911005,68729281454926890210,83692452168861209989]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 52 lists. */
