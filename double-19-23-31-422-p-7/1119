/* Comments begin... 
Coefficient of   x^21 * y^1               = -1
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = -2
Coefficient of   x^4 * y^11 * z^3         = 3
Coefficient of   x^2 * y^14 * z^2         = -2
Coefficient of   x^1 * z^13               = 2
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

-1*x^21*y^1 + 2*x^8*y^5*z^5 + -2*x^6*y^8*z^4 + 3*x^4*y^11*z^3 + -2*x^2*y^14*z^2 + 2*x^1*z^13 + 3*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 161
[8, 5, 4, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[6, 8, 4, 0]  	422	5 
[6, 11, 3, 0]  	460	6 
[4, 14, 3, 0]  	491	5 
[5, 0, 14, 0]  	529	6 
[19, 8, 3, 0]  	638	6 
[15, 14, 2, 0]  	669	6 
[19, 11, 2, 0]  	676	6 
[13, 17, 2, 0]  	700	8 
[7, 22, 2, 0]  	701	7 
[16, 0, 13, 0]  	707	6 
[19, 14, 1, 0]  	714	7 
[5, 25, 2, 0]  	732	6 
[4, 11, 13, 0]  	732	6 
[14, 3, 13, 0]  	738	7 
[17, 17, 1, 0]  	745	7 
[10, 23, 1, 0]  	750	7 
[20, 0, 12, 0]  	752	6 
[7, 26, 1, 0]  	762	6 
[3, 28, 2, 0]  	763	5 
[5, 28, 1, 0]  	770	6 
[20, 17, 0, 0]  	771	2 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[9, 25, 1, 0]  	777	6 
[3, 14, 13, 0]  	782	5 
[18, 3, 12, 0]  	783	6 
[13, 22, 1, 0]  	784	6 
[3, 32, 0, 0]  	793	5 
[14, 23, 0, 0]  	795	6 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[3, 11, 16, 0]  	806	5 
[11, 26, 0, 0]  	807	5 
[5, 31, 0, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[9, 28, 0, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[13, 25, 0, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[17, 22, 0, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 10, 20, 0]  	888	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[1, 15, 18, 0]  	922	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[20, 1, 0, 1]  	403	6 
[18, 8, 3, 1]  	619	10 
[14, 14, 2, 1]  	650	10 
[18, 11, 2, 1]  	657	9 
[12, 17, 2, 1]  	681	9 
[15, 0, 13, 1]  	688	9 
[18, 14, 1, 1]  	695	8 
[13, 3, 13, 1]  	719	8 
[16, 17, 1, 1]  	726	8 
[19, 0, 12, 1]  	733	7 
[6, 26, 1, 1]  	743	7 
[8, 25, 1, 1]  	758	7 
[17, 3, 12, 1]  	764	7 
[12, 22, 1, 1]  	765	7 
[19, 18, 0, 1]  	775	6 
[15, 20, 1, 1]  	776	6 
[10, 26, 0, 1]  	788	6 
[4, 31, 0, 1]  	789	6 
[8, 28, 0, 1]  	796	6 
[7, 29, 0, 1]  	800	5 
[12, 25, 0, 1]  	803	6 
[2, 32, 1, 1]  	805	5 
[16, 22, 0, 1]  	810	6 
[3, 3, 23, 1]  	839	4 
[2, 28, 6, 1]  	868	4 
[2, 31, 4, 1]  	875	5 
[2, 14, 17, 1]  	887	4 
[1, 15, 17, 1]  	891	3 
[1, 14, 18, 1]  	899	3 
[11, 20, 2, 2]  	731	7 
[14, 20, 1, 2]  	757	7 
[6, 29, 0, 2]  	781	6 
[3, 24, 8, 2]  	857	4 
[1, 24, 12, 2]  	943	3 
[10, 20, 2, 3]  	712	8 
[8, 23, 1, 23]  	712	7 
[4, 1, 22, 23]  	781	5 
[2, 10, 19, 23]  	857	3 
[0, 41, 0, 23]  	943	2 
[7, 5, 5, 24]  	403	5 
[5, 11, 4, 24]  	472	5 
[4, 0, 15, 24]  	541	4 
[6, 22, 2, 24]  	682	7 
[4, 25, 2, 24]  	713	6 
[3, 11, 14, 24]  	744	5 
[4, 28, 1, 24]  	751	6 
[12, 23, 0, 24]  	757	5 
[2, 0, 24, 24]  	782	4 
[3, 4, 21, 24]  	800	4 
[3, 21, 9, 24]  	819	3 
[2, 20, 11, 24]  	839	2 
[0, 31, 5, 24]  	868	2 
[1, 18, 15, 24]  	898	2 
------
The gap is between 4 and 22.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 7^3 Delta^1 (x1x2x3)^6... Done.
Start computing 7^4 Delta^2 (x1x2x3)^6... Done.
Start computing 7^5 Delta^3 (x1x2x3)^6... Done.
Start computing 7^6 Delta^4 (x1x2x3)^6... Done.
Start computing 7^7 Delta^5 (x1x2x3)^6... Done.
Start computing 7^8 Delta^6 (x1x2x3)^6... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[44036707726028154575,125088772559684415301,99847574371086129177,57042249816772277680,105657669914664487403,164773320110722978319,159703885874743949326,152905289030634067508,8497784169273693014,155779804561319796004,53911349715406193787;\
81101401898070099407,88322423263100376436,52991521079665517191,133640305180154317069,163398782142499916110,36783268361035386561,152276592895543126829,40805275107363524156,183133350151667228999,30481202121653465504,149451389287753882917;\
62506685442265485908,92300293975979988794,79729420722946513649,96728179574910461046,97556551796923673195,51061452660698089274,134319828280860899439,97602430468677537557,146221663737515080155,35141406239849472738,101295561282124523111;\
187953955734131293840,188145626941216734032,102165374608418843629,155199819540559157644,49478956326853520810,47980169750878812125,118480047888723339,22767854781427064512,103120913390246593877,145934876211507264287,175369936348301122169;\
92711530518508953749,138244050124788369711,123695589608817726105,94239299404274635541,145800510202672060197,2009059402444774820,129635093339083335997,188655870662181034231,153908201581452574263,176351901380199829858,179882883285007073136;\
28265733749024009693,74282092501418702453,79447985707977491817,75153778798151976797,127895089371366308894,143711309860271189169,41174136553426928625,44094563231502828191,47215344901961198858,177130876853307215307,22717895225516810480;\
13502864871271433118,18802988161694005658,169159122382838742250,47994142089762159214,22652690908698408502,180945744320032080921,182750925414695557115,40244186974435214512,137409592560498614867,167578775364662427689,163508424386702762185;\
78586344273196496809,179813241365182327111,52568008239261953820,160959250592753160520,14101905365552549489,16565763960767909867,89654977611449919228,51473529898490381696,19212577566567648424,24257362812127811968,171113735206495959465;\
111589051857716045872,3440180758562225797,123601332040279703834,6228251768046771568,158718912623709985239,117639625563320237321,29127787068548931588,48850173646445986290,82859403708894294482,163536718521163638840,123688475037732283700;\
179986689901134004844,145506072722039383542,107591664545324753944,70361244631079997266,13344308831654356766,181530743871355137945,68491708156445945910,189167473577041384481,170315803887085065909,57505925928572155664,58810171559822510233;\
117676024619494853693,154524209745991316900,109153983865532302098,125230744333944571294,43667180062890371547,84556011681622918248,117053729018006122832,124872709376200671522,151171821074431994893,131575621840273658033,97803391686725208155]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 52 lists. */
