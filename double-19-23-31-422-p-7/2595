/* Comments begin... 
Coefficient of   x^21 * y^1               = -1
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 1
Coefficient of   x^6 * y^8 * z^4         = 0
Coefficient of   x^4 * y^11 * z^3         = 2
Coefficient of   x^2 * y^14 * z^2         = -1
Coefficient of   x^1 * z^13               = 3
Coefficient of   y^17 * z^1               = 1

Here is the polynomial we're using this time:

-1*x^21*y^1 + 1*x^8*y^5*z^5 + 2*x^4*y^11*z^3 + -1*x^2*y^14*z^2 + 3*x^1*z^13 + 1*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 162
[8, 5, 4, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[4, 11, 3, 0]  	422	4 
[5, 0, 14, 0]  	529	6 
[17, 11, 2, 0]  	638	5 
[15, 14, 2, 0]  	669	4 
[13, 17, 2, 0]  	700	8 
[7, 22, 2, 0]  	701	7 
[19, 14, 1, 0]  	714	7 
[16, 17, 1, 0]  	726	8 
[11, 20, 2, 0]  	731	7 
[5, 25, 2, 0]  	732	6 
[14, 3, 13, 0]  	738	7 
[7, 9, 13, 0]  	743	7 
[18, 0, 13, 0]  	745	7 
[20, 0, 12, 0]  	752	6 
[7, 26, 1, 0]  	762	6 
[3, 28, 2, 0]  	763	5 
[11, 23, 1, 0]  	769	6 
[20, 17, 0, 0]  	771	2 
[4, 10, 15, 0]  	771	5 
[15, 20, 1, 0]  	776	6 
[9, 25, 1, 0]  	777	6 
[3, 14, 13, 0]  	782	5 
[18, 3, 12, 0]  	783	6 
[4, 31, 0, 0]  	789	6 
[5, 29, 1, 0]  	793	5 
[3, 32, 0, 0]  	793	5 
[7, 29, 0, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[3, 11, 16, 0]  	806	5 
[4, 1, 23, 0]  	812	5 
[15, 23, 0, 0]  	814	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[2, 18, 12, 0]  	824	4 
[4, 3, 22, 0]  	827	5 
[17, 22, 0, 0]  	829	5 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[13, 26, 0, 0]  	845	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 27, 8, 0]  	907	2 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[2, 0, 29, 0]  	937	3 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[20, 1, 0, 1]  	403	5 
[16, 11, 2, 1]  	619	8 
[14, 14, 2, 1]  	650	7 
[12, 17, 2, 1]  	681	9 
[18, 14, 1, 1]  	695	8 
[16, 0, 13, 1]  	707	6 
[10, 20, 2, 1]  	712	8 
[13, 3, 13, 1]  	719	8 
[19, 0, 12, 1]  	733	7 
[10, 23, 1, 1]  	750	7 
[14, 20, 1, 1]  	757	7 
[8, 25, 1, 1]  	758	7 
[17, 3, 12, 1]  	764	7 
[5, 28, 1, 1]  	770	6 
[4, 29, 1, 1]  	774	6 
[19, 18, 0, 1]  	775	6 
[6, 29, 0, 1]  	781	6 
[13, 22, 1, 1]  	784	6 
[14, 23, 0, 1]  	795	6 
[12, 25, 0, 1]  	803	6 
[11, 26, 0, 1]  	807	5 
[16, 22, 0, 1]  	810	6 
[9, 28, 0, 1]  	815	5 
[4, 7, 19, 1]  	826	5 
[2, 29, 5, 1]  	860	4 
[2, 26, 8, 1]  	884	3 
[2, 0, 28, 1]  	906	4 
[1, 30, 7, 1]  	926	2 
[1, 0, 30, 1]  	949	2 
[0, 41, 3, 1]  	1036	2 
[15, 0, 13, 2]  	688	9 
[12, 22, 1, 2]  	765	7 
[10, 26, 0, 2]  	788	6 
[8, 28, 0, 2]  	796	6 
[3, 4, 22, 2]  	831	4 
[2, 27, 7, 2]  	876	3 
[4, 3, 20, 23]  	765	5 
[3, 24, 7, 23]  	826	4 
[2, 21, 10, 23]  	831	3 
[1, 13, 18, 23]  	876	2 
[7, 5, 5, 24]  	403	4 
[4, 0, 15, 24]  	541	5 
[6, 22, 2, 24]  	682	7 
[14, 17, 1, 24]  	688	8 
[4, 25, 2, 24]  	713	6 
[3, 11, 14, 24]  	744	4 
[3, 14, 12, 24]  	751	5 
[3, 31, 0, 24]  	770	5 
[2, 31, 1, 24]  	782	5 
[3, 6, 19, 24]  	784	4 
[3, 23, 7, 24]  	803	4 
[3, 9, 18, 24]  	822	4 
[3, 26, 6, 24]  	841	4 
[1, 12, 18, 24]  	853	1 
[1, 15, 16, 24]  	860	3 
[0, 16, 18, 24]  	926	1 
[0, 10, 26, 24]  	1036	1 
------
The gap is between 3 and 22.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 7^3 Delta^1 (x1x2x3)^6... Done.
Start computing 7^4 Delta^2 (x1x2x3)^6... Done.
Start computing 7^5 Delta^3 (x1x2x3)^6... Done.
Start computing 7^6 Delta^4 (x1x2x3)^6... Done.
Start computing 7^7 Delta^5 (x1x2x3)^6... Done.
Start computing 7^8 Delta^6 (x1x2x3)^6... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[152307878548526995040,33115045213123843680,187865366791582474183,131483297843353546090,167477443131080669587,9369180407041778155,13390198356011498098,82767470299863434890,168401969135628798724,34063531927907913431,22153722304366282679;\
117056940472316928055,62528287228168126178,49186426607222724622,37374000717491666081,132347884792257819699,79964284783838475160,90936951549393648958,18846434111136689484,126026073290326540604,5316539075370559127,30681753909791471543;\
1716183313726081205,144044165483581352796,105375004567875062252,58465842113752685045,64608932710122222604,156083494673281320544,160051149483112173111,55581108383673818673,80910775328971150423,81952827199749514589,146232856165838064014;\
499561559255514480,175162210144017548809,123126978480649529176,1980616045268405874,63180099508712575123,9290147447512784559,128287453719052081972,41386302679642898691,131956531056554906464,31526918314552939635,123799277187170964946;\
168468722973805990912,79110931836179275257,69893464183697270377,93628988979249900806,79588969973152955175,92213603881144855312,180973093615447142450,169998766862487915800,35497980601595418256,123301616215538140947,178591178435064483207;\
118976747803960772863,77015524654321538961,173870819844656561417,131398950330671544899,91311743119027370583,4543852970761990270,159929789217284097851,86631595181804977962,128785396772711179158,126023960847522611069,65672673164455599746;\
15703140198333672227,137137311313255074943,136285230102862407137,24213781747355108545,167430675333657623272,105576746829911150409,115977391335944509392,164225725580782320147,153786240868269065532,54631928290440845232,20807611549662671664;\
141748701295678700518,101473519723759633527,44904871474988645873,13789475820063807045,77440315507737140133,161591419214441628839,44863315445865689248,84425086507092201626,33571618534220116889,9084078061565155593,56900395878951978360;\
24145227714851469149,174099989501329142699,166727099314758452512,79898124028334482535,133474272358735601622,84361927375473144383,139533988048235777031,152880137119219608322,43605018429011971988,43663812476415274150,14380886035880748867;\
64044504758232710194,123432163096775590539,48536388274911728098,87258610820210310691,111540531047119911758,123720704357243681198,120068390982693919885,13581472446365785745,136851532925848320265,133998016093059219612,142790080852925345056;\
69792528145475160667,74602928771288230715,151289180240271174135,105099436730232535752,13888400426914240255,128556077136795512176,180680146728499764185,20219862902702032906,160485015789828674714,62057354154255022164,3969764906876101270]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 52 lists. */
