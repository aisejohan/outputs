/* Comments begin... 
Coefficient of   x^21 * y^1               = 1
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = -2
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = 3
Coefficient of   x^1 * z^13               = 3
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

1*x^21*y^1 + 2*x^8*y^5*z^5 + -2*x^6*y^8*z^4 + 3*x^2*y^14*z^2 + 3*x^1*z^13 + 3*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 162
[8, 5, 4, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[6, 8, 4, 0]  	422	4 
[6, 11, 3, 0]  	460	6 
[4, 14, 3, 0]  	491	5 
[5, 0, 14, 0]  	529	6 
[19, 8, 3, 0]  	638	5 
[15, 14, 2, 0]  	669	4 
[17, 14, 1, 0]  	676	5 
[7, 22, 2, 0]  	701	7 
[16, 0, 13, 0]  	707	4 
[13, 3, 13, 0]  	719	8 
[5, 25, 2, 0]  	732	6 
[4, 11, 13, 0]  	732	6 
[20, 0, 12, 0]  	752	6 
[7, 26, 1, 0]  	762	6 
[3, 28, 2, 0]  	763	5 
[12, 22, 1, 0]  	765	7 
[11, 23, 1, 0]  	769	6 
[5, 28, 1, 0]  	770	6 
[20, 17, 0, 0]  	771	2 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[15, 20, 1, 0]  	776	6 
[9, 25, 1, 0]  	777	6 
[3, 14, 13, 0]  	782	5 
[18, 3, 12, 0]  	783	6 
[3, 32, 0, 0]  	793	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[3, 11, 16, 0]  	806	5 
[5, 31, 0, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[15, 23, 0, 0]  	814	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[13, 25, 0, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[17, 22, 0, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 6, 20, 0]  	834	5 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[11, 28, 0, 0]  	853	4 
[3, 9, 19, 0]  	853	4 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[2, 12, 19, 0]  	903	3 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[2, 0, 29, 0]  	937	3 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[20, 1, 0, 1]  	403	5 
[18, 8, 3, 1]  	619	9 
[14, 14, 2, 1]  	650	8 
[16, 14, 1, 1]  	657	8 
[15, 0, 13, 1]  	688	7 
[13, 17, 2, 1]  	700	8 
[11, 20, 2, 1]  	731	7 
[19, 0, 12, 1]  	733	7 
[6, 26, 1, 1]  	743	7 
[10, 23, 1, 1]  	750	7 
[14, 20, 1, 1]  	757	7 
[8, 25, 1, 1]  	758	7 
[17, 3, 12, 1]  	764	7 
[19, 18, 0, 1]  	775	6 
[10, 26, 0, 1]  	788	6 
[4, 31, 0, 1]  	789	6 
[14, 23, 0, 1]  	795	6 
[7, 29, 0, 1]  	800	5 
[12, 25, 0, 1]  	803	6 
[16, 22, 0, 1]  	810	6 
[9, 28, 0, 1]  	815	5 
[3, 7, 20, 1]  	838	4 
[3, 3, 23, 1]  	839	4 
[2, 29, 5, 1]  	860	4 
[3, 26, 7, 1]  	872	4 
[1, 10, 21, 1]  	900	2 
[2, 0, 28, 1]  	906	4 
[1, 12, 20, 1]  	915	2 
[1, 4, 28, 1]  	979	2 
[12, 17, 2, 2]  	681	9 
[10, 20, 2, 2]  	712	8 
[6, 29, 0, 2]  	781	6 
[8, 28, 0, 2]  	796	6 
[0, 32, 6, 2]  	922	2 
[4, 1, 21, 23]  	750	5 
[2, 24, 8, 23]  	838	3 
[0, 1, 29, 23]  	922	1 
[7, 5, 5, 24]  	403	4 
[5, 11, 4, 24]  	472	5 
[4, 0, 15, 24]  	541	5 
[11, 3, 13, 24]  	681	8 
[6, 22, 2, 24]  	682	7 
[8, 23, 1, 24]  	712	7 
[4, 25, 2, 24]  	713	5 
[10, 22, 1, 24]  	727	7 
[3, 11, 14, 24]  	744	4 
[4, 28, 1, 24]  	751	6 
[3, 4, 20, 24]  	769	4 
[2, 31, 1, 24]  	782	5 
[3, 21, 8, 24]  	788	3 
[3, 7, 19, 24]  	807	4 
[2, 10, 18, 24]  	826	2 
[2, 20, 11, 24]  	839	3 
[1, 15, 16, 24]  	860	3 
[0, 27, 9, 24]  	900	1 
[0, 29, 8, 24]  	915	1 
[0, 21, 16, 24]  	979	1 
------
The gap is between 3 and 22.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 7^3 Delta^1 (x1x2x3)^6... Done.
Start computing 7^4 Delta^2 (x1x2x3)^6... Done.
Start computing 7^5 Delta^3 (x1x2x3)^6... Done.
Start computing 7^6 Delta^4 (x1x2x3)^6... Done.
Start computing 7^7 Delta^5 (x1x2x3)^6... Done.
Start computing 7^8 Delta^6 (x1x2x3)^6... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[145152226478605652667,58693091609272199392,134555075699556298728,97976834022970386141,106063081271495131525,111851718098578862747,182225500422368369057,57580493384652014217,65557611334038116363,29873131938211448726,23342278611326940867;\
188208652510466820559,101642918843594241179,2159874545864382548,59554664997047308823,175711876165791635593,48180389730185443640,66896952741721755695,116402395525615939866,65877326008272993578,89237957399987104667,169570472504370928634;\
127888555798232720771,166646925247449402526,108868065447369713312,148293031923406469134,178335265749501168756,129885654772368702221,164957235436190588405,38172487089521155903,113837442209877935500,25244287895574370189,13882162847513841825;\
42345847772757675204,159211352181567322461,54067777007208514482,3684616813322828222,183124618258206882530,78478044480583494985,61401409661661787291,139968556975239555178,123400179649635169645,7395026141557010103,23996080122729319031;\
131356561984927505431,114713199405513731183,177977436445809692963,50021410787813377045,135629670429767887401,145909429204425147373,186090690574285803880,178350532558309929727,109799558343471171770,149778740587817256181,100772704231931154045;\
117923978973823754020,126871174694071816857,139977994064567600935,46871877252433774933,7533757672251613544,97922420115568424740,7100265127594771608,25070606792493268195,188956232064164472250,872960875123047977,157633482356519998633;\
179507752087061456546,24902813564110507538,16241474275898158680,165152917287170463693,295097701544813622,128718030945298600358,56710816188295740380,157264383645753555570,118181354380343836561,148896363931727880923,167293505401542197062;\
116743065881075037015,91910719119932197509,48397938964009129569,176544585637053594814,40777686702130388220,120790314249887824808,11072955984600444277,24664483017304710475,128512925648961753711,47142400522940867942,174371891507513105910;\
6086330984772647595,53831457049860691131,141206375985034148810,134561641699764482588,141078814941525089601,161799950489125471082,41423317519962391216,147268764133064187600,49096835528680710820,42676371001261552422,77277482027960322178;\
178527857345107996962,169262723809583085864,177102803783878002165,117880106105238539951,160302704499434077245,171836984243117214672,130475043089639980382,190333997811407781898,119174009931949772807,17130136533384731458,103701497468166074015;\
119311614502401504296,181336709389789869002,69749990486014474707,77948419124624566392,144929586201220330881,114731214005721503029,99685729778622185520,78236342247253815828,185760044587832801632,103794809267013813004,84788739198688363076]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 52 lists. */
