/* Comments begin... 
Coefficient of   x^21 * y^1               = -3
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = -2
Coefficient of   x^6 * y^8 * z^4         = 1
Coefficient of   x^4 * y^11 * z^3         = 1
Coefficient of   x^2 * y^14 * z^2         = 0
Coefficient of   x^1 * z^13               = -1
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

-3*x^21*y^1 + -2*x^8*y^5*z^5 + 1*x^6*y^8*z^4 + 1*x^4*y^11*z^3 + -1*x^1*z^13 + 3*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 159
[8, 5, 4, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[6, 8, 4, 0]  	422	4 
[6, 11, 3, 0]  	460	6 
[4, 14, 3, 0]  	491	5 
[5, 0, 14, 0]  	529	6 
[19, 8, 3, 0]  	638	5 
[15, 14, 2, 0]  	669	6 
[19, 11, 2, 0]  	676	5 
[13, 17, 2, 0]  	700	8 
[7, 22, 2, 0]  	701	6 
[18, 0, 12, 0]  	714	6 
[16, 17, 1, 0]  	726	6 
[11, 20, 2, 0]  	731	7 
[5, 25, 2, 0]  	732	6 
[4, 11, 13, 0]  	732	6 
[14, 3, 13, 0]  	738	7 
[3, 28, 2, 0]  	763	5 
[11, 23, 1, 0]  	769	6 
[5, 28, 1, 0]  	770	6 
[20, 17, 0, 0]  	771	2 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[15, 20, 1, 0]  	776	6 
[3, 14, 13, 0]  	782	5 
[13, 22, 1, 0]  	784	6 
[3, 32, 0, 0]  	793	5 
[8, 28, 0, 0]  	796	6 
[7, 29, 0, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[3, 11, 16, 0]  	806	5 
[11, 26, 0, 0]  	807	5 
[5, 31, 0, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[15, 23, 0, 0]  	814	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[13, 25, 0, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[17, 22, 0, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[0, 7, 28, 0]  	1029	1 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[20, 1, 0, 1]  	403	5 
[18, 8, 3, 1]  	619	9 
[14, 14, 2, 1]  	650	10 
[18, 11, 2, 1]  	657	8 
[12, 17, 2, 1]  	681	9 
[17, 0, 12, 1]  	695	7 
[16, 0, 13, 1]  	707	4 
[10, 20, 2, 1]  	712	8 
[13, 3, 13, 1]  	719	8 
[10, 23, 1, 1]  	750	7 
[14, 20, 1, 1]  	757	7 
[7, 26, 1, 1]  	762	6 
[12, 22, 1, 1]  	765	7 
[19, 18, 0, 1]  	775	6 
[9, 25, 1, 1]  	777	6 
[6, 29, 0, 1]  	781	6 
[10, 26, 0, 1]  	788	6 
[4, 31, 0, 1]  	789	6 
[14, 23, 0, 1]  	795	6 
[12, 25, 0, 1]  	803	6 
[16, 22, 0, 1]  	810	6 
[3, 26, 7, 1]  	872	4 
[2, 7, 22, 1]  	881	3 
[2, 9, 21, 1]  	896	3 
[1, 18, 16, 1]  	929	3 
[1, 7, 27, 1]  	1017	2 
[0, 41, 3, 1]  	1036	2 
[15, 0, 13, 2]  	688	7 
[6, 26, 1, 2]  	743	7 
[8, 25, 1, 2]  	758	7 
[5, 12, 12, 23]  	743	6 
[4, 1, 22, 23]  	781	5 
[7, 5, 5, 24]  	403	4 
[5, 11, 4, 24]  	472	5 
[4, 0, 15, 24]  	541	5 
[6, 22, 2, 24]  	682	5 
[14, 17, 1, 24]  	688	6 
[4, 25, 2, 24]  	713	5 
[3, 11, 14, 24]  	744	4 
[4, 28, 1, 24]  	751	5 
[6, 28, 0, 24]  	758	6 
[5, 29, 0, 24]  	762	5 
[2, 31, 1, 24]  	782	5 
[3, 4, 21, 24]  	800	3 
[3, 21, 9, 24]  	819	4 
[2, 12, 18, 24]  	872	3 
[1, 24, 10, 24]  	881	2 
[1, 26, 9, 24]  	896	2 
[0, 35, 4, 24]  	929	2 
[0, 24, 15, 24]  	1017	1 
[0, 10, 26, 24]  	1036	1 
------
The gap is between 3 and 22.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 7^3 Delta^1 (x1x2x3)^6... Done.
Start computing 7^4 Delta^2 (x1x2x3)^6... Done.
Start computing 7^5 Delta^3 (x1x2x3)^6... Done.
Start computing 7^6 Delta^4 (x1x2x3)^6... Done.
Start computing 7^7 Delta^5 (x1x2x3)^6... Done.
Start computing 7^8 Delta^6 (x1x2x3)^6... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[58541126774780973583,26463964719243663240,141013149614800198810,64003992199349312712,112316888709747108499,41065341648108214003,159562462180749068042,54323413339916249858,146587714324678913524,63543588329535171039,100124572638370107415;\
141843889765420198368,139134588063117786492,35915381873298287517,135931180925472371929,27740409973993657920,149034663278206723409,83460775479249835037,25787728990002450275,18952238669546034048,50438947965703370353,121312238994931302619;\
182905949929113804147,82378167219743873354,122077970129867215657,86106483374525040959,71445901745607983146,90785807833088582319,72433571906495336572,165154666261612618941,2279276922731593022,108583749113655546885,132933947835040487086;\
180035354000711183360,15426790699734700756,9595867109103137536,7145060689515212331,106812243844160729455,90759402145498737553,103298460085732779525,131689258173216691297,159428475923240604745,50885402020451158720,25269913236433516560;\
96547471303186010593,84601625516160042447,180716614480136592280,136885638409094138291,108427310128329993262,11635123071440377397,183404333765868124679,19133690888398604049,157212660626323021398,59934366985109652728,145320651347990835535;\
150541077527081743291,4333646788690888760,98907350358741016610,61692165823183823354,137193787055912253597,108104614719746181530,4685115121819142829,158550305239297136886,152479262448073909838,106273035149945956943,132007318817973008620;\
100739580728558191536,24831751602232177828,78440850754585419018,167396727201319701589,84116857192662511329,152537540350547874690,58060892570174732952,191560321688309780500,125430207509737239683,40678480394157725735,180637681612245890445;\
61390717460423335307,152384463820776542417,143163018897850272364,112254075506300772317,169316891884022134154,56130677871167404953,34407964880962567174,89120490351664800140,131691448543446228906,56662406542773490956,93504423477547707961;\
71173006120763774829,82176669979442865148,40323799554985559088,29632081339304184545,184299665696483240918,166966544240210877771,56844052525050076986,22628704865073205031,125835010526610568568,141318557474827210674,36676360425552441342;\
50931312676343902689,84800928558500672038,24250975781859359163,185381227364191456374,96135769767696958544,122774365862898578535,172435160261719342764,70787451980001649291,184608074037700660676,54657747771500451900,86889077056733011144;\
172939468337123416761,46436025748390240530,175255646561641868167,96807410463499001028,32318017521059869172,155950558194728672865,130565520445157278915,42869153117656083540,140975694217623646997,122025604488675325438,90096986878312289057]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 52 lists. */
