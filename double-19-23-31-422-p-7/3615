/* Comments begin... 
Coefficient of   x^21 * y^1               = -3
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = -3
Coefficient of   x^6 * y^8 * z^4         = 1
Coefficient of   x^4 * y^11 * z^3         = -2
Coefficient of   x^2 * y^14 * z^2         = -3
Coefficient of   x^1 * z^13               = 3
Coefficient of   y^17 * z^1               = 1

Here is the polynomial we're using this time:

-3*x^21*y^1 + -3*x^8*y^5*z^5 + 1*x^6*y^8*z^4 + -2*x^4*y^11*z^3 + -3*x^2*y^14*z^2 + 3*x^1*z^13 + 1*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 161
[8, 5, 4, 0]  	391	6 
[21, 0, 0, 0]  	399	6  <--- 1
[6, 8, 4, 0]  	422	5 
[4, 14, 3, 0]  	491	5 
[5, 0, 15, 0]  	560	5 
[19, 8, 3, 0]  	638	6 
[14, 14, 2, 0]  	650	10 
[17, 11, 3, 0]  	669	6 
[19, 11, 2, 0]  	676	6 
[12, 17, 2, 0]  	681	9 
[14, 0, 14, 0]  	700	8 
[7, 22, 2, 0]  	701	7 
[16, 0, 13, 0]  	707	6 
[10, 20, 2, 0]  	712	8 
[19, 14, 1, 0]  	714	7 
[12, 3, 14, 0]  	731	7 
[5, 25, 2, 0]  	732	6 
[4, 11, 13, 0]  	732	6 
[14, 3, 13, 0]  	738	7 
[17, 17, 1, 0]  	745	7 
[20, 0, 12, 0]  	752	6 
[7, 26, 1, 0]  	762	6 
[3, 28, 2, 0]  	763	5 
[11, 23, 1, 0]  	769	6 
[5, 28, 1, 0]  	770	6 
[20, 17, 0, 0]  	771	2 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[15, 20, 1, 0]  	776	6 
[9, 25, 1, 0]  	777	6 
[3, 14, 13, 0]  	782	5 
[18, 3, 12, 0]  	783	6 
[13, 22, 1, 0]  	784	6 
[3, 32, 0, 0]  	793	5 
[7, 29, 0, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[3, 11, 16, 0]  	806	5 
[11, 26, 0, 0]  	807	5 
[4, 1, 23, 0]  	812	5 
[15, 23, 0, 0]  	814	5 
[9, 28, 0, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[13, 25, 0, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[17, 22, 0, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[20, 1, 0, 1]  	403	6 
[6, 11, 3, 1]  	460	6 
[5, 0, 14, 1]  	529	6 
[18, 8, 3, 1]  	619	10 
[18, 11, 2, 1]  	657	9 
[15, 0, 13, 1]  	688	9 
[18, 14, 1, 1]  	695	8 
[13, 3, 13, 1]  	719	8 
[16, 17, 1, 1]  	726	8 
[19, 0, 12, 1]  	733	7 
[6, 26, 1, 1]  	743	7 
[10, 23, 1, 1]  	750	7 
[14, 20, 1, 1]  	757	7 
[8, 25, 1, 1]  	758	7 
[17, 3, 12, 1]  	764	7 
[12, 22, 1, 1]  	765	7 
[19, 18, 0, 1]  	775	6 
[6, 29, 0, 1]  	781	6 
[10, 26, 0, 1]  	788	6 
[14, 23, 0, 1]  	795	6 
[8, 28, 0, 1]  	796	6 
[12, 25, 0, 1]  	803	6 
[5, 31, 0, 1]  	808	5 
[16, 22, 0, 1]  	810	6 
[2, 15, 16, 1]  	879	4 
[2, 13, 18, 1]  	895	3 
[1, 1, 29, 1]  	941	2 
[0, 38, 4, 1]  	998	2 
[4, 31, 0, 2]  	789	6 
[6, 22, 2, 23]  	682	7 
[4, 25, 2, 23]  	713	6 
[4, 0, 23, 23]  	789	5 
[7, 5, 5, 24]  	403	5 
[4, 14, 2, 24]  	460	5 
[5, 11, 4, 24]  	472	4 
[4, 0, 15, 24]  	541	4 
[3, 11, 14, 24]  	744	4 
[4, 28, 1, 24]  	751	6 
[2, 31, 1, 24]  	782	5 
[3, 3, 22, 24]  	808	4 
[3, 20, 10, 24]  	827	4 
[1, 32, 4, 24]  	879	2 
[1, 30, 6, 24]  	895	2 
[0, 18, 17, 24]  	941	1 
[0, 7, 27, 24]  	998	1 
------
The gap is between 3 and 22.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 7^3 Delta^1 (x1x2x3)^6... Done.
Start computing 7^4 Delta^2 (x1x2x3)^6... Done.
Start computing 7^5 Delta^3 (x1x2x3)^6... Done.
Start computing 7^6 Delta^4 (x1x2x3)^6... Done.
Start computing 7^7 Delta^5 (x1x2x3)^6... Done.
Start computing 7^8 Delta^6 (x1x2x3)^6... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[92756110198705324763,108847569242716534978,168058501123050429819,81609102352729329007,48674794878442035520,111122523710050112883,111077883574344888586,74712592707656200808,38061648866559540768,129700321510195247007,132394947954649923186;\
104529793426502660217,91761013827960010710,66814241895871464514,34221804526367280788,163079310856415753436,83061979381560362862,157481904573536456137,37383886319008420632,62787387793508658658,14672183023472404948,51806080397803891628;\
109741467810947134889,169924421179980106133,56502280463671087237,178375198583886552010,102490596795315478848,140899397233170846067,11955735585022021107,135970468471249088089,93045690112129986700,142808159049429968073,147662450718073291147;\
43221805094012875503,68458899512055068750,164845010236214690763,132682804975803107396,9493822477207060139,121611623060245492650,16302023855559759940,103904064232955041048,78651550970405975268,179526053212866045490,44981345300617438265;\
150735300773621334100,171707203377625358370,69767305890249070799,161609289919562706200,116233102023687268256,22389907141459141585,99601783379072146991,109440827918503056318,27008194430420451185,161887668845483248899,107066820970197182003;\
31887520546204567883,79864689609662227447,101101744283418211754,142906627286970893584,31089974253581469604,72703001980977786355,67007534253768188185,176171738621665634666,190293330746256846577,77817245690335066181,146026104029044596945;\
34729291813260778740,11821897679218837622,8130175159842917268,126862310166591280057,82468162967135736595,172416858133379038312,126033497863119407701,73052766007168029446,139889175487409123391,75689832235359737122,131825031903673341100;\
96927302736429724060,10345736779524444597,149351539261296474648,29212058508585418123,10358170419332797194,35425044828151352514,187125615893120831430,54542232933808435613,175793493468239391717,74855447655133211815,149131225960444568890;\
113837837977223056298,160081867073865956233,22758699350873874850,112860469716475789504,5789736058515802687,92771241975789467902,126302901865446840611,45490053725258868628,144745077619868707345,148569244673502768157,176813617241699951310;\
182002404257735761854,181286123483910632019,69513077404268935220,99043182938683959430,12773407583805566012,149274330520838251505,45301733363997187840,25827680828213946528,146550832456220722432,186505165895315501969,82489889180722110472;\
86600423043166349914,124909523964761007376,110672520492204615308,164105073814097338405,128130908205446242068,141155519835716314985,118177093062693182973,159454360636411510453,76491700553974342056,29967121007480508831,160261529084367939186]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 52 lists. */
