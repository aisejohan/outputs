/* Comments begin... 
Coefficient of   x^21 * y^1               = -2
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 3
Coefficient of   x^6 * y^8 * z^4         = 0
Coefficient of   x^4 * y^11 * z^3         = 3
Coefficient of   x^2 * y^14 * z^2         = 2
Coefficient of   x^1 * z^13               = -1
Coefficient of   y^17 * z^1               = -2

Here is the polynomial we're using this time:

-2*x^21*y^1 + 3*x^8*y^5*z^5 + 3*x^4*y^11*z^3 + 2*x^2*y^14*z^2 + -1*x^1*z^13 + -2*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 162
[8, 5, 4, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[4, 11, 3, 0]  	422	4 
[5, 0, 14, 0]  	529	6 
[17, 11, 2, 0]  	638	5 
[15, 14, 2, 0]  	669	4 
[13, 17, 2, 0]  	700	8 
[7, 22, 2, 0]  	701	7 
[19, 14, 1, 0]  	714	7 
[16, 17, 1, 0]  	726	8 
[5, 25, 2, 0]  	732	6 
[14, 3, 13, 0]  	738	7 
[7, 9, 13, 0]  	743	7 
[18, 0, 13, 0]  	745	7 
[10, 23, 1, 0]  	750	7 
[20, 0, 12, 0]  	752	6 
[3, 28, 2, 0]  	763	5 
[5, 28, 1, 0]  	770	6 
[20, 17, 0, 0]  	771	2 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[15, 20, 1, 0]  	776	6 
[9, 25, 1, 0]  	777	6 
[6, 29, 0, 0]  	781	6 
[3, 14, 13, 0]  	782	5 
[18, 3, 12, 0]  	783	6 
[3, 32, 0, 0]  	793	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[3, 11, 16, 0]  	806	5 
[5, 31, 0, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[15, 23, 0, 0]  	814	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[17, 22, 0, 0]  	829	5 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[13, 26, 0, 0]  	845	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 24, 8, 0]  	857	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 9, 21, 0]  	896	3 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[20, 1, 0, 1]  	403	5 
[16, 11, 2, 1]  	619	8 
[14, 14, 2, 1]  	650	7 
[12, 17, 2, 1]  	681	9 
[18, 14, 1, 1]  	695	8 
[16, 0, 13, 1]  	707	6 
[13, 3, 13, 1]  	719	8 
[11, 20, 2, 1]  	731	7 
[19, 0, 12, 1]  	733	7 
[14, 20, 1, 1]  	757	7 
[8, 25, 1, 1]  	758	7 
[7, 26, 1, 1]  	762	6 
[17, 3, 12, 1]  	764	7 
[19, 18, 0, 1]  	775	6 
[13, 22, 1, 1]  	784	6 
[4, 31, 0, 1]  	789	6 
[14, 23, 0, 1]  	795	6 
[12, 25, 0, 1]  	803	6 
[11, 26, 0, 1]  	807	5 
[16, 22, 0, 1]  	810	6 
[9, 28, 0, 1]  	815	5 
[3, 4, 22, 1]  	831	4 
[2, 35, 0, 1]  	843	4 
[3, 20, 11, 1]  	858	4 
[2, 15, 16, 1]  	879	4 
[2, 13, 18, 1]  	895	3 
[2, 1, 27, 1]  	898	4 
[0, 32, 6, 1]  	922	2 
[15, 0, 13, 2]  	688	9 
[10, 20, 2, 2]  	712	8 
[12, 22, 1, 2]  	765	7 
[10, 26, 0, 2]  	788	6 
[8, 28, 0, 2]  	796	6 
[2, 12, 19, 2]  	903	3 
[0, 38, 4, 2]  	998	2 
[4, 3, 20, 23]  	765	5 
[1, 29, 7, 23]  	903	2 
[0, 7, 27, 23]  	998	1 
[7, 5, 5, 24]  	403	4 
[4, 0, 15, 24]  	541	4 
[6, 22, 2, 24]  	682	7 
[14, 17, 1, 24]  	688	8 
[8, 23, 1, 24]  	712	6 
[4, 25, 2, 24]  	713	6 
[3, 11, 14, 24]  	744	4 
[4, 28, 1, 24]  	751	5 
[5, 29, 0, 24]  	762	4 
[2, 31, 1, 24]  	782	5 
[3, 6, 19, 24]  	784	4 
[3, 23, 7, 24]  	803	4 
[3, 9, 18, 24]  	822	4 
[2, 21, 10, 24]  	831	3 
[3, 26, 6, 24]  	841	4 
[2, 4, 23, 24]  	843	3 
[2, 26, 7, 24]  	853	3 
[2, 6, 22, 24]  	858	3 
[1, 29, 6, 24]  	872	2 
[1, 32, 4, 24]  	879	3 
[1, 18, 15, 24]  	898	3 
[0, 1, 29, 24]  	922	1 
------
The gap is between 3 and 22.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 7^3 Delta^1 (x1x2x3)^6... Done.
Start computing 7^4 Delta^2 (x1x2x3)^6... Done.
Start computing 7^5 Delta^3 (x1x2x3)^6... Done.
Start computing 7^6 Delta^4 (x1x2x3)^6... Done.
Start computing 7^7 Delta^5 (x1x2x3)^6... Done.
Start computing 7^8 Delta^6 (x1x2x3)^6... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[164822643394840567273,57039919554794545160,69471023494744328454,152933700427777857574,135018048815663921999,138140380208687662778,80412059081745024312,152681996233589768484,162458654611389129329,144034982279482943782,164484068275171746535;\
52893385984247326906,129865228248202278152,153446119120993067383,8115939374035856986,19045749793240521281,2007218001754884611,20815647564777181074,103804899892555080821,56246634764047250943,142282446091208525480,81387576163990290327;\
27846196215932124007,102403094657640439066,62699898960146220831,126772772500922775773,87219482203476360255,106192582824706284032,673794214173141495,48661649985921173411,87080451836974697381,113639193335035185041,162684526810210287302;\
58486647456339721505,13902958085346436590,54098536798740331,28079705865868324612,1238931253681938180,64444114425176682868,105167779771193012944,56681787414469479094,93591989999073834478,158279518915371094619,143831218313811747831;\
103660853446909426346,32170003992979647545,54710339149704538950,41784077194510078540,19403873529224759610,135589849152241717933,144353085054887594718,36289946848297702028,145509809979644100011,73038516181911348432,21749578734607198601;\
150021342994626614315,148258811049147756581,86891449386694576844,39228150129109315304,106450189996145459933,18980149602079812454,149484231420781687626,82962761277463708039,141805500579048240522,46885624307338374082,6232355611837274031;\
131222330855707653251,21854603946296770344,125001019815512700521,27728348897628676871,101507074175762971548,124531933329994270157,124141320365862657802,117243667239122887890,78257360492529354486,182091881603802113902,166856713677495066148;\
175483132723326077464,137087914405849315685,128772938381133913053,110250783586044189326,110220987805862666565,86058694063938691767,177833252578181458468,128131992461922392797,10881151339966749149,134997285359729471637,25737624242860172475;\
44956191153369710102,153301151717945081697,186958617326088971314,55235520398802236514,179712196061098613934,30109446611338830421,63414083603227775551,84410415772513580379,97487450718458942211,137716160109596472831,185273469884778078860;\
6621451735343482812,128148231772937885360,187861864579551120231,78209552191589348390,60505161386904750376,85763593752016076169,144323635905063431257,37419947209106592487,85535426490288041351,143776648425301387125,114703345563010221290;\
10040031936167326980,168378525896366892907,28334594484267892430,125608071518674370976,13845428273921424586,6251419365978398710,18111712357229923012,6181339220734371169,117231271209892612605,43877657382735100050,135957891643043238916]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 52 lists. */
