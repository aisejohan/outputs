/* Comments begin... 
Coefficient of   x^21 * y^1               = -3
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = 0
Coefficient of   x^4 * y^11 * z^3         = 3
Coefficient of   x^2 * y^14 * z^2         = 1
Coefficient of   x^1 * z^13               = -3
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

-3*x^21*y^1 + 2*x^8*y^5*z^5 + 3*x^4*y^11*z^3 + 1*x^2*y^14*z^2 + -3*x^1*z^13 + 3*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 162
[8, 5, 4, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[4, 11, 3, 0]  	422	4 
[5, 0, 14, 0]  	529	6 
[17, 11, 2, 0]  	638	5 
[15, 14, 2, 0]  	669	4 
[13, 17, 2, 0]  	700	8 
[7, 22, 2, 0]  	701	7 
[19, 14, 1, 0]  	714	7 
[16, 17, 1, 0]  	726	8 
[11, 20, 2, 0]  	731	7 
[5, 25, 2, 0]  	732	6 
[14, 3, 13, 0]  	738	7 
[7, 9, 13, 0]  	743	7 
[18, 0, 13, 0]  	745	7 
[20, 0, 12, 0]  	752	6 
[7, 26, 1, 0]  	762	6 
[3, 28, 2, 0]  	763	5 
[5, 28, 1, 0]  	770	6 
[20, 17, 0, 0]  	771	2 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[15, 20, 1, 0]  	776	6 
[3, 14, 13, 0]  	782	5 
[18, 3, 12, 0]  	783	6 
[3, 32, 0, 0]  	793	5 
[7, 29, 0, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[3, 11, 16, 0]  	806	5 
[11, 26, 0, 0]  	807	5 
[5, 31, 0, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[15, 23, 0, 0]  	814	5 
[9, 28, 0, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[17, 22, 0, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 9, 19, 0]  	853	4 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[20, 1, 0, 1]  	403	5 
[16, 11, 2, 1]  	619	8 
[14, 14, 2, 1]  	650	7 
[12, 17, 2, 1]  	681	9 
[18, 14, 1, 1]  	695	8 
[16, 0, 13, 1]  	707	6 
[10, 20, 2, 1]  	712	8 
[13, 3, 13, 1]  	719	8 
[19, 0, 12, 1]  	733	7 
[14, 20, 1, 1]  	757	7 
[17, 3, 12, 1]  	764	7 
[11, 23, 1, 1]  	769	6 
[19, 18, 0, 1]  	775	6 
[9, 25, 1, 1]  	777	6 
[6, 29, 0, 1]  	781	6 
[13, 22, 1, 1]  	784	6 
[10, 26, 0, 1]  	788	6 
[4, 31, 0, 1]  	789	6 
[14, 23, 0, 1]  	795	6 
[8, 28, 0, 1]  	796	6 
[12, 25, 0, 1]  	803	6 
[16, 22, 0, 1]  	810	6 
[4, 9, 18, 1]  	841	5 
[3, 21, 10, 1]  	850	4 
[2, 15, 16, 1]  	879	4 
[2, 10, 20, 1]  	888	3 
[1, 14, 18, 1]  	899	3 
[1, 13, 19, 1]  	907	2 
[1, 21, 15, 1]  	967	3 
[15, 0, 13, 2]  	688	9 
[10, 23, 1, 2]  	750	7 
[8, 25, 1, 2]  	758	7 
[12, 22, 1, 2]  	765	7 
[4, 3, 20, 23]  	765	5 
[3, 26, 6, 23]  	841	4 
[7, 5, 5, 24]  	403	4 
[4, 0, 15, 24]  	541	5 
[6, 22, 2, 24]  	682	7 
[14, 17, 1, 24]  	688	8 
[4, 25, 2, 24]  	713	6 
[3, 11, 14, 24]  	744	5 
[8, 26, 0, 24]  	750	6 
[4, 28, 1, 24]  	751	6 
[6, 28, 0, 24]  	758	6 
[2, 31, 1, 24]  	782	4 
[3, 6, 19, 24]  	784	4 
[3, 23, 7, 24]  	803	3 
[3, 9, 18, 24]  	822	4 
[2, 7, 21, 24]  	850	3 
[2, 26, 7, 24]  	853	3 
[2, 12, 18, 24]  	872	3 
[1, 32, 4, 24]  	879	3 
[1, 27, 8, 24]  	888	2 
[0, 31, 6, 24]  	899	2 
[0, 30, 7, 24]  	907	1 
[0, 0, 30, 24]  	930	1 
[0, 38, 3, 24]  	967	2 
------
The gap is between 3 and 22.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 7^3 Delta^1 (x1x2x3)^6... Done.
Start computing 7^4 Delta^2 (x1x2x3)^6... Done.
Start computing 7^5 Delta^3 (x1x2x3)^6... Done.
Start computing 7^6 Delta^4 (x1x2x3)^6... Done.
Start computing 7^7 Delta^5 (x1x2x3)^6... Done.
Start computing 7^8 Delta^6 (x1x2x3)^6... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[66303467114371738251,148558500250983448849,106474080983689566612,122512286327486930882,116791112170548295865,142510279068892380240,173451538034298790637,173378793027706657118,144097535502739360976,6827918320320621118,99849685335654132704;\
166291737053771445721,181422088547624657303,179709693631964129184,179537709990464415079,1861335366847298664,152976058455989955207,161575893627646799707,29669345800468227476,125446999752869918900,151555333830352493804,86408433771797366481;\
165760009047221918258,136593971593716839806,164071036861394685816,134583304205370845958,168399296317966311024,130479059889897604116,91236342610970308738,9835603914504347042,86076326997790117394,98249517705183846295,146146655346047821906;\
4599238350472260219,185976920859883024119,47407416095492212999,48809386819784369870,57559105922443800304,60722977932240329482,63888915622192495884,69022939633208087072,169514808652422756558,188187522408892828052,186889170408863733307;\
18586955805419193135,15354860247136682401,162055783037679289933,163522567873086553887,78001379000247044195,44341648134203867692,181173031833240988779,151018820336541070375,175331381448957747552,119325614604585154255,96131474040604080484;\
172720983514036356307,64580813641621023056,132778567606297663154,7299037812339661773,94535469868402345062,175176553450974098849,24484194527401434483,177395896683611585798,104104130855749601556,182549418440677941674,22837574403554816122;\
134939254997192823198,52633231321561990370,7533930178683068041,328453712498317357,54610510551438778853,119808679816022301209,191135710134258675821,70281509886357910546,133502525077574596867,39103361300985096920,7130415919652490080;\
187600944995492682518,91101888298099357105,79415719988397611643,170041114294070813535,72797220215405364182,97585351142490539447,151703234246263771379,157529795154820405947,185276013999287187977,138438114671678792859,85463537436624717272;\
175939431643110248925,121497620871854529218,161770358028657842338,88436221404435559445,108527327322360531340,27325107675385547104,164563390713888490779,88223369710723773211,60594325599455636737,17638913953077484039,38250005732518568352;\
83312602463455981901,168770247520861842835,6900514832384446486,151047019878722942919,131887084189485535512,146876103585978315962,4708666680477456368,169227463634688704749,176241110476512243281,37380127844029852861,106563703054925010874;\
70733427023349549795,187044270204516767598,4241732670040224450,113941727494414855840,94714039254424160585,95893119063262533313,74577561220030294944,132478456810372720747,138614094614624378001,33254593603211982652,71163111866049589540]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 52 lists. */
