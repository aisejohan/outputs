/* Comments begin... 
Coefficient of   x^21 * y^1               = -2
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = 2
Coefficient of   x^6 * y^8 * z^4         = 0
Coefficient of   x^4 * y^11 * z^3         = -1
Coefficient of   x^2 * y^14 * z^2         = -1
Coefficient of   x^1 * z^13               = -2
Coefficient of   y^17 * z^1               = -2

Here is the polynomial we're using this time:

-2*x^21*y^1 + 2*x^8*y^5*z^5 + -1*x^4*y^11*z^3 + -1*x^2*y^14*z^2 + -2*x^1*z^13 + -2*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 160
[8, 5, 4, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[4, 11, 3, 0]  	422	4 
[5, 0, 14, 0]  	529	6 
[17, 11, 2, 0]  	638	5 
[15, 14, 2, 0]  	669	4 
[13, 17, 2, 0]  	700	8 
[7, 22, 2, 0]  	701	7 
[19, 14, 1, 0]  	714	7 
[16, 17, 1, 0]  	726	8 
[11, 20, 2, 0]  	731	7 
[5, 25, 2, 0]  	732	6 
[14, 3, 13, 0]  	738	7 
[7, 9, 13, 0]  	743	7 
[18, 0, 13, 0]  	745	7 
[20, 0, 12, 0]  	752	6 
[7, 26, 1, 0]  	762	6 
[3, 28, 2, 0]  	763	5 
[5, 28, 1, 0]  	770	6 
[20, 17, 0, 0]  	771	2 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[15, 20, 1, 0]  	776	6 
[3, 14, 13, 0]  	782	5 
[18, 3, 12, 0]  	783	6 
[3, 32, 0, 0]  	793	5 
[7, 29, 0, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[3, 11, 16, 0]  	806	5 
[11, 26, 0, 0]  	807	5 
[5, 31, 0, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[15, 23, 0, 0]  	814	5 
[9, 28, 0, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[17, 22, 0, 0]  	829	5 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[3, 23, 9, 0]  	865	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 14, 17, 0]  	887	4 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[20, 1, 0, 1]  	403	5 
[16, 11, 2, 1]  	619	8 
[14, 14, 2, 1]  	650	7 
[12, 17, 2, 1]  	681	9 
[18, 14, 1, 1]  	695	8 
[16, 0, 13, 1]  	707	6 
[10, 20, 2, 1]  	712	8 
[13, 3, 13, 1]  	719	8 
[19, 0, 12, 1]  	733	7 
[14, 20, 1, 1]  	757	7 
[17, 3, 12, 1]  	764	7 
[11, 23, 1, 1]  	769	6 
[19, 18, 0, 1]  	775	6 
[9, 25, 1, 1]  	777	6 
[6, 29, 0, 1]  	781	6 
[13, 22, 1, 1]  	784	6 
[10, 26, 0, 1]  	788	6 
[4, 31, 0, 1]  	789	6 
[14, 23, 0, 1]  	795	6 
[8, 28, 0, 1]  	796	6 
[12, 25, 0, 1]  	803	6 
[16, 22, 0, 1]  	810	6 
[2, 10, 20, 1]  	888	3 
[1, 32, 5, 1]  	910	3 
[1, 18, 16, 1]  	929	3 
[15, 0, 13, 2]  	688	9 
[10, 23, 1, 2]  	750	7 
[8, 25, 1, 2]  	758	7 
[12, 22, 1, 2]  	765	7 
[3, 4, 22, 2]  	831	4 
[1, 14, 18, 2]  	899	3 
[3, 26, 7, 3]  	872	4 
[2, 12, 18, 21]  	872	3 
[4, 3, 20, 23]  	765	5 
[2, 21, 10, 23]  	831	3 
[0, 31, 6, 23]  	899	2 
[7, 5, 5, 24]  	403	4 
[4, 0, 15, 24]  	541	5 
[6, 22, 2, 24]  	682	7 
[14, 17, 1, 24]  	688	8 
[4, 25, 2, 24]  	713	6 
[3, 11, 14, 24]  	744	5 
[8, 26, 0, 24]  	750	6 
[4, 28, 1, 24]  	751	6 
[6, 28, 0, 24]  	758	6 
[2, 31, 1, 24]  	782	4 
[3, 6, 19, 24]  	784	3 
[3, 23, 7, 24]  	803	4 
[3, 9, 18, 24]  	822	4 
[3, 26, 6, 24]  	841	3 
[2, 26, 7, 24]  	853	3 
[1, 27, 8, 24]  	888	2 
[1, 1, 28, 24]  	910	2 
[0, 35, 4, 24]  	929	2 
------
The gap is between 4 and 20.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 7^3 Delta^1 (x1x2x3)^6... Done.
Start computing 7^4 Delta^2 (x1x2x3)^6... Done.
Start computing 7^5 Delta^3 (x1x2x3)^6... Done.
Start computing 7^6 Delta^4 (x1x2x3)^6... Done.
Start computing 7^7 Delta^5 (x1x2x3)^6... Done.
Start computing 7^8 Delta^6 (x1x2x3)^6... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[51715201730973188811,41801839659096009774,76057654180346284000,37695538861028226647,146110892713303606914,25131419052066299287,173528980879304494528,143922103355256196509,86913506339365487803,126668482458702101428,117473559624651252820;\
115430550586224083483,151315889795519820402,61961878478022404880,14712960754380514661,91430791905556570677,1445858300059480797,405992061341869576,6621647407333534366,70295790907166626900,12694211588444137619,2449428913651689900;\
41661130142815658510,57390007366088021290,21734457531641993035,81506708247832676683,140355087214489265153,173860744558245785285,55519137033116512259,49753476929380305921,61806531344195791510,51633964396434928137,178666801316296297536;\
167851920773723084687,82864377187708080482,164307896715268740210,107157252508678825985,140191684155102703963,51569678168599255238,177518581926528435299,171123903808817187739,9640995308475940738,135598886136193299652,57925058415718891068;\
13130349496953796434,25730088011957479861,37608873897914637624,31569571495436774135,55440112581454178781,67870246498269289655,1890788168151864135,111111012220582811038,135087308970848220483,121933939995419839301,171390568138228158601;\
13996982325217362226,131806969041195793381,104634916113278804040,18495877153550453027,60258209682508622127,123218476615305861006,146431313901913897731,16139558555421162694,88130473310267232894,129073065979445174090,46434224936096865371;\
43676731885681258486,189810666430556049610,141110947897733322383,87154037345516667351,120541897777202185151,68557969476436796419,67571762127683809037,140813606784222351504,162451171176142775269,61562799067188870080,70394879651818895768;\
179797118838034737426,71197509036240446628,23933549519836773611,90721097293420235250,47968750681301009315,54578199515626625447,1601455184434925050,104263208761844196792,188484269968931479914,170289322656867222858,558777714450739700;\
2530219111733533822,166563487107780754222,165235996212333087328,44740018769279013943,94364150172619922455,189082744259896476493,115609532901291649710,56979256501406274469,134268166618897841271,70120677031774977062,50119116687430004361;\
116792806915320506828,172144220030484146041,103168010107118449227,125815724905256329657,51258396193299586039,190013589917841295767,26771368454258141294,128077257693026715003,139445491848468716792,54869927731102668457,86671250972951351308;\
65883046388802567783,175849443084055144052,104215611184641118155,29138296764204664960,185567424228061991836,5235381169052516496,139843070167010877828,44842638107763687807,25099626973507690464,32197792228608754713,9777691676067251566]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 52 lists. */
