/* Comments begin... 
Coefficient of   x^21 * y^1               = -1
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = -2
Coefficient of   x^6 * y^8 * z^4         = 1
Coefficient of   x^4 * y^11 * z^3         = 0
Coefficient of   x^2 * y^14 * z^2         = 2
Coefficient of   x^1 * z^13               = -3
Coefficient of   y^17 * z^1               = 3

Here is the polynomial we're using this time:

-1*x^21*y^1 + -2*x^8*y^5*z^5 + 1*x^6*y^8*z^4 + 2*x^2*y^14*z^2 + -3*x^1*z^13 + 3*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 155
[8, 5, 4, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[6, 8, 4, 0]  	422	4 
[6, 11, 3, 0]  	460	6 
[4, 14, 3, 0]  	491	5 
[5, 0, 14, 0]  	529	6 
[19, 8, 3, 0]  	638	5 
[15, 14, 2, 0]  	669	4 
[17, 14, 1, 0]  	676	5 
[13, 17, 2, 0]  	700	8 
[7, 22, 2, 0]  	701	7 
[16, 0, 13, 0]  	707	4 
[11, 20, 2, 0]  	731	7 
[5, 25, 2, 0]  	732	6 
[4, 11, 13, 0]  	732	6 
[14, 3, 13, 0]  	738	7 
[20, 0, 12, 0]  	752	6 
[7, 26, 1, 0]  	762	6 
[3, 28, 2, 0]  	763	5 
[11, 23, 1, 0]  	769	6 
[5, 28, 1, 0]  	770	6 
[20, 17, 0, 0]  	771	2 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[15, 20, 1, 0]  	776	6 
[3, 14, 13, 0]  	782	5 
[18, 3, 12, 0]  	783	6 
[13, 22, 1, 0]  	784	6 
[3, 32, 0, 0]  	793	5 
[8, 28, 0, 0]  	796	6 
[7, 29, 0, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[3, 11, 16, 0]  	806	5 
[11, 26, 0, 0]  	807	5 
[4, 1, 23, 0]  	812	5 
[15, 23, 0, 0]  	814	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[13, 25, 0, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[17, 22, 0, 0]  	829	5 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[4, 9, 18, 0]  	841	5 
[2, 35, 0, 0]  	843	4 
[3, 10, 18, 0]  	845	4 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 24, 8, 0]  	857	4 
[3, 20, 11, 0]  	858	4 
[2, 29, 5, 0]  	860	4 
[3, 4, 23, 0]  	862	3 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[3, 26, 7, 0]  	872	4 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 15, 16, 0]  	879	4 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 10, 20, 0]  	888	3 
[1, 15, 17, 0]  	891	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 14, 18, 0]  	899	3 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 24, 12, 0]  	943	3 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 38, 4, 0]  	998	2 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[20, 1, 0, 1]  	403	5 
[18, 8, 3, 1]  	619	9 
[14, 14, 2, 1]  	650	8 
[16, 14, 1, 1]  	657	8 
[12, 17, 2, 1]  	681	9 
[15, 0, 13, 1]  	688	7 
[10, 20, 2, 1]  	712	8 
[13, 3, 13, 1]  	719	8 
[19, 0, 12, 1]  	733	7 
[6, 26, 1, 1]  	743	7 
[10, 23, 1, 1]  	750	7 
[14, 20, 1, 1]  	757	7 
[17, 3, 12, 1]  	764	7 
[12, 22, 1, 1]  	765	7 
[19, 18, 0, 1]  	775	6 
[9, 25, 1, 1]  	777	6 
[6, 29, 0, 1]  	781	6 
[10, 26, 0, 1]  	788	6 
[14, 23, 0, 1]  	795	6 
[12, 25, 0, 1]  	803	6 
[5, 31, 0, 1]  	808	5 
[16, 22, 0, 1]  	810	6 
[3, 4, 22, 1]  	831	4 
[3, 3, 23, 1]  	839	4 
[1, 13, 19, 1]  	907	2 
[0, 35, 5, 1]  	960	2 
[8, 25, 1, 2]  	758	7 
[4, 31, 0, 2]  	789	6 
[3, 23, 9, 2]  	865	4 
[2, 14, 17, 2]  	887	4 
[4, 0, 23, 23]  	789	5 
[2, 9, 20, 23]  	865	3 
[1, 31, 5, 23]  	887	3 
[7, 5, 5, 24]  	403	4 
[5, 11, 4, 24]  	472	4 
[4, 0, 15, 24]  	541	5 
[6, 22, 2, 24]  	682	6 
[4, 25, 2, 24]  	713	5 
[3, 11, 14, 24]  	744	5 
[4, 28, 1, 24]  	751	5 
[6, 28, 0, 24]  	758	6 
[2, 31, 1, 24]  	782	5 
[2, 20, 10, 24]  	808	3 
[0, 30, 7, 24]  	907	1 
[0, 4, 28, 24]  	960	1 
------
The gap is between 3 and 22.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 7^3 Delta^1 (x1x2x3)^6... Done.
Start computing 7^4 Delta^2 (x1x2x3)^6... Done.
Start computing 7^5 Delta^3 (x1x2x3)^6... Done.
Start computing 7^6 Delta^4 (x1x2x3)^6... Done.
Start computing 7^7 Delta^5 (x1x2x3)^6... Done.
Start computing 7^8 Delta^6 (x1x2x3)^6... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[187038102028117371144,18891351888164412495,6358335571617300987,191183570756859778811,15350062450716718515,157725836766665851635,171084691222641913500,168854444045510300210,48997008354047521278,80515058486388618869,14441442847120499217;\
136579373197313495325,53652675851821963740,15158917780040183795,189937410519492372471,34890943186948699361,151359346782515074644,10496246224698607415,69817259911045784347,139592121539869128144,81954718825691000212,94445892041094367207;\
136435258620757122208,67537425782662002913,121046973346362204425,65191199765461652960,56928836558660043810,183106291060739938808,166416790307133086847,28832503995464754179,134821190430011745401,78390618298890710974,604250170769525763;\
138832927446448241250,187433854312624562624,42040855994947355063,60693278167332620467,149016348655513842741,116583664294097060851,88947751890428173904,169395567665481554159,176783565661073561337,28384685067928534464,59483068023215881429;\
47501863089619863814,39995685504822028057,14259237464416086205,101087924994039567080,79806604028684888236,165985824110325480464,11047573668127821405,28702486950477265800,133885978141512426081,2621690777558038837,31313758811346386466;\
175943466791181581346,83462905920834119435,67035223570955988639,189968804502083706071,34126284946780179538,54574719017993743751,3488538170498506377,126729674080759945083,59171288396482749928,125567884853540322634,130422417643533675548;\
154535715602847682609,170749724102794497662,166454229543533920715,54377739485787871741,64344508039953846061,69091705326475290725,181089575561884492041,12945684000412699060,39617814416651197426,57974822626709869734,129725329848421690502;\
116457093454273960953,168329647484729033174,155870185913359309059,47632773520940606502,174393046637142467071,12046314967070487516,81035572552813414655,18876451479116150465,120334722339921143271,65687135492671688219,154188136193232824627;\
140059549092664467588,130437609688878982854,79976685199725620551,183239739325933736019,120732219075355204898,40192783509351995018,105734094719018110030,95040238275478123656,33454769993009465954,182976210630073234976,83782184967463543435;\
191057710452211976169,109722768978488439500,1401264927207091960,143322407697218976198,146058719966978880537,154177014564291762302,190116662272161159290,80512688632261614624,165050445368921059269,27868532484918613600,142461710555402266441;\
42555272424960230057,165086800736525602017,178082538412705218821,22117755194496498460,105656207912422947738,44201831061895363612,180165484421551705839,186675806508188780538,69659592895943411634,164096284820122893623,82354713940646566622]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 52 lists. */
