/* Comments begin... 
Coefficient of   x^21 * y^1               = -2
Coefficient of   x^10 * y^2 * z^6         = 0
Coefficient of   x^8 * y^5 * z^5         = -1
Coefficient of   x^6 * y^8 * z^4         = -1
Coefficient of   x^4 * y^11 * z^3         = 2
Coefficient of   x^2 * y^14 * z^2         = 0
Coefficient of   x^1 * z^13               = -3
Coefficient of   y^17 * z^1               = -1

Here is the polynomial we're using this time:

-2*x^21*y^1 + -1*x^8*y^5*z^5 + -1*x^6*y^8*z^4 + 2*x^4*y^11*z^3 + -3*x^1*z^13 + -1*y^17*z^1

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
Allocate M_len = 12800 elements.
Allocate G_len 320 elements and old = 160.
The final length of G is 162
[8, 5, 4, 0]  	391	5 
[21, 0, 0, 0]  	399	5  <--- 1
[6, 8, 4, 0]  	422	4 
[6, 11, 3, 0]  	460	6 
[4, 14, 3, 0]  	491	5 
[5, 0, 14, 0]  	529	6 
[19, 8, 3, 0]  	638	5 
[15, 14, 2, 0]  	669	6 
[19, 11, 2, 0]  	676	5 
[13, 17, 2, 0]  	700	8 
[7, 22, 2, 0]  	701	6 
[18, 0, 12, 0]  	714	6 
[16, 17, 1, 0]  	726	6 
[11, 20, 2, 0]  	731	7 
[5, 25, 2, 0]  	732	6 
[4, 11, 13, 0]  	732	6 
[14, 3, 13, 0]  	738	7 
[7, 26, 1, 0]  	762	6 
[3, 28, 2, 0]  	763	5 
[11, 23, 1, 0]  	769	6 
[5, 28, 1, 0]  	770	6 
[20, 17, 0, 0]  	771	2 
[4, 10, 15, 0]  	771	5 
[4, 29, 1, 0]  	774	6 
[15, 20, 1, 0]  	776	6 
[9, 25, 1, 0]  	777	6 
[3, 14, 13, 0]  	782	5 
[13, 22, 1, 0]  	784	6 
[3, 32, 0, 0]  	793	5 
[7, 29, 0, 0]  	800	5 
[3, 31, 1, 0]  	801	5 
[3, 0, 24, 0]  	801	5 
[2, 32, 1, 0]  	805	5 
[11, 26, 0, 0]  	807	5 
[5, 31, 0, 0]  	808	5 
[4, 1, 23, 0]  	812	5 
[15, 23, 0, 0]  	814	5 
[9, 28, 0, 0]  	815	5 
[4, 4, 21, 0]  	819	5 
[3, 17, 12, 0]  	820	5 
[13, 25, 0, 0]  	822	5 
[2, 18, 12, 0]  	824	4 
[4, 7, 19, 0]  	826	5 
[4, 3, 22, 0]  	827	5 
[17, 22, 0, 0]  	829	5 
[3, 4, 22, 0]  	831	4 
[4, 6, 20, 0]  	834	5 
[3, 7, 20, 0]  	838	4 
[3, 3, 23, 0]  	839	4 
[4, 9, 18, 0]  	841	5 
[3, 6, 21, 0]  	846	4 
[3, 21, 10, 0]  	850	4 
[3, 9, 19, 0]  	853	4 
[3, 24, 8, 0]  	857	4 
[3, 12, 17, 0]  	860	4 
[2, 29, 5, 0]  	860	4 
[2, 21, 11, 0]  	862	3 
[3, 27, 6, 0]  	864	4 
[2, 28, 6, 0]  	868	4 
[2, 24, 9, 0]  	869	3 
[2, 4, 24, 0]  	874	4 
[2, 31, 4, 0]  	875	5 
[2, 27, 7, 0]  	876	3 
[2, 23, 10, 0]  	877	3 
[2, 7, 22, 0]  	881	3 
[2, 26, 8, 0]  	884	3 
[2, 10, 20, 0]  	888	3 
[1, 38, 0, 0]  	893	3 
[2, 13, 18, 0]  	895	3 
[2, 9, 21, 0]  	896	3 
[2, 1, 27, 0]  	898	4 
[1, 10, 21, 0]  	900	2 
[2, 12, 19, 0]  	903	3 
[2, 0, 28, 0]  	906	4 
[1, 13, 19, 0]  	907	2 
[1, 32, 5, 0]  	910	3 
[1, 12, 20, 0]  	915	2 
[1, 31, 6, 0]  	918	3 
[1, 27, 9, 0]  	919	2 
[1, 15, 18, 0]  	922	2 
[0, 32, 6, 0]  	922	2 
[1, 30, 7, 0]  	926	2 
[1, 18, 16, 0]  	929	3 
[0, 31, 7, 0]  	930	2 
[1, 29, 8, 0]  	934	2 
[0, 30, 8, 0]  	938	1 
[1, 1, 29, 0]  	941	2 
[1, 35, 4, 0]  	948	3 
[1, 0, 30, 0]  	949	2 
[0, 1, 30, 0]  	953	1 
[0, 16, 19, 0]  	957	1 
[0, 35, 5, 0]  	960	2 
[0, 0, 31, 0]  	961	1  <--- 3
[1, 21, 15, 0]  	967	3 
[0, 18, 18, 0]  	972	1 
[1, 4, 28, 0]  	979	2 
[0, 4, 29, 0]  	991	1 
[0, 21, 17, 0]  	1010	1 
[0, 44, 0, 0]  	1012	2  <--- 2
[1, 7, 27, 0]  	1017	2 
[0, 7, 28, 0]  	1029	1 
[0, 41, 3, 0]  	1036	2 
[0, 24, 16, 0]  	1048	1 
[0, 10, 27, 0]  	1067	1 
[0, 27, 15, 0]  	1086	1 
[0, 13, 26, 0]  	1105	1 
[20, 1, 0, 1]  	403	5 
[18, 8, 3, 1]  	619	9 
[14, 14, 2, 1]  	650	10 
[18, 11, 2, 1]  	657	8 
[12, 17, 2, 1]  	681	9 
[17, 0, 12, 1]  	695	7 
[16, 0, 13, 1]  	707	4 
[10, 20, 2, 1]  	712	8 
[13, 3, 13, 1]  	719	8 
[6, 26, 1, 1]  	743	7 
[10, 23, 1, 1]  	750	7 
[14, 20, 1, 1]  	757	7 
[8, 25, 1, 1]  	758	7 
[12, 22, 1, 1]  	765	7 
[19, 18, 0, 1]  	775	6 
[6, 29, 0, 1]  	781	6 
[10, 26, 0, 1]  	788	6 
[4, 31, 0, 1]  	789	6 
[14, 23, 0, 1]  	795	6 
[8, 28, 0, 1]  	796	6 
[12, 25, 0, 1]  	803	6 
[3, 11, 16, 1]  	806	5 
[16, 22, 0, 1]  	810	6 
[2, 35, 0, 1]  	843	4 
[3, 20, 11, 1]  	858	4 
[3, 23, 9, 1]  	865	4 
[3, 26, 7, 1]  	872	4 
[2, 15, 16, 1]  	879	4 
[1, 14, 18, 1]  	899	3 
[1, 24, 12, 1]  	943	3 
[0, 38, 4, 1]  	998	2 
[15, 0, 13, 2]  	688	7 
[3, 10, 18, 2]  	845	4 
[2, 14, 17, 2]  	887	4 
[1, 15, 17, 2]  	891	3 
[2, 27, 6, 23]  	845	3 
[1, 31, 5, 23]  	887	3 
[0, 32, 5, 23]  	891	2 
[7, 5, 5, 24]  	403	4 
[5, 11, 4, 24]  	472	5 
[4, 0, 15, 24]  	541	5 
[6, 22, 2, 24]  	682	5 
[14, 17, 1, 24]  	688	6 
[4, 25, 2, 24]  	713	6 
[2, 28, 2, 24]  	744	4 
[4, 28, 1, 24]  	751	5 
[2, 31, 1, 24]  	782	4 
[2, 4, 23, 24]  	843	3 
[2, 6, 22, 24]  	858	3 
[2, 9, 20, 24]  	865	3 
[0, 31, 5, 24]  	868	2 
[2, 12, 18, 24]  	872	3 
[1, 32, 4, 24]  	879	3 
[1, 1, 28, 24]  	910	2 
[0, 41, 0, 24]  	943	2 
[0, 7, 27, 24]  	998	1 
------
The gap is between 3 and 22.
Lengths: 3 3 5 5 3 3.
For 982 = 5*d/2-d1-d2-d3 you get 3 in char 0.
1*x^1*y^23*z^14
1*y^40*z^2
1*y^9*z^25

For 560 = 3*d/2-d1-d2-d3 you get 5 in char 0.
1*x^14*y^2*z^8
1*x^3*y^3*z^14
1*x^2*y^20*z^2
1*x^1*y^6*z^13
1*y^23*z^1

For 138 = d/2-d1-d2-d3 you get 3 in char 0.
1*x^4*z^2
1*x^2*y^3*z^1
1*y^6

Extra powers of p used 0.
The invariant extra is equal to 1.
Start computing 7^3 Delta^1 (x1x2x3)^6... Done.
Start computing 7^4 Delta^2 (x1x2x3)^6... Done.
Start computing 7^5 Delta^3 (x1x2x3)^6... Done.
Start computing 7^6 Delta^4 (x1x2x3)^6... Done.
Start computing 7^7 Delta^5 (x1x2x3)^6... Done.
Start computing 7^8 Delta^6 (x1x2x3)^6... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 11 
*/
A = \
[19036420157664453329,152480868793954834399,181973090139184525272,56414230141215445513,81497325279829120662,117332669933506644960,100571535630215294372,40245384909431730259,106492187982976016270,79949324157646573644,148461790056392532356;\
140445156100149372416,167969817561222842002,34231319341006823548,32850865270428330230,33116629036090104253,85910928758039544943,163117956766889458593,22143048552058948101,35824928849445156281,182125716335097561740,90906578804435893975;\
173306860478808834993,114346394888031946160,133965909258498265298,101368437402193979129,70657762616226646210,168014231292615584177,24262624940554400547,187110411078248378280,58186896511972588080,174199115517221457663,3541885886696712401;\
162341289012045717621,157834125874387016404,72263164110189097236,139723959301758889463,82383617589285281843,85843737574198736636,152598721591810742773,102678081899266248837,164415349735384020385,56163996118015607906,91885597503683864853;\
872644134009778556,177368480795122235183,141760308120160292996,7128944795450709119,142679560409603222481,152329470279531038116,42523234401312735231,158592688849347048009,16227659051132745594,180183923311186207924,149601242698789335720;\
112114420928817936300,70613459140804802376,113475107001704315984,164766762624596789594,137047443429807959706,69389526935321549922,23664964067898210946,85465534482629348383,174530425089399205169,130098537728865794382,116487817634135911397;\
156121715356274643336,70053485966343933219,175039130165711409036,42685712467271577550,138939878108584045150,87043253052186708676,94334720483372528684,148207037590288815215,123554901618223936770,28862364585315799132,42449992342730309610;\
99947514713203088724,14207332473626831530,87482883409940042796,85177426791722396565,96131457398380366298,137426208846559911887,163985624814822311095,142239456404981808166,98676205158672939224,106687748496767820284,156389465902613093080;\
138969291147962379762,15673292296671795870,187253742881862403614,64016770386641313087,52807789452749599667,138079289820465109193,131733413163755207686,3875687190022623437,120556370784466265859,158809527043310002531,93566536050040085802;\
174073184062603743785,13207144968865764129,133974146323013776648,147864936194746765659,177539715950117467709,159626622937694946817,55608853624110838233,178212951255697541281,116777605789867017233,90827787543125689623,11098109042746528992;\
39668420567901577318,125106204470704668207,36650257573223963958,147890236955942155801,172727007694914600886,185270261091515639445,95094924950595752924,95502351336937187706,28550246999058961589,1214912785845125290,181231777857001384506]
/* 
This should be the matrix of frobenius!
*/ 
B = A; 
/* Freed 52 lists. */
