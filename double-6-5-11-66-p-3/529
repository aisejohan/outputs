/* Comments begin... 
Coefficient of   x^11                     = -1
Coefficient of   x^6 * y^6               = 1
Coefficient of   x^5 * y^5 * z^1         = 0
Coefficient of   x^4 * y^4 * z^2         = 1
Coefficient of   x^3 * y^3 * z^3         = -1
Coefficient of   x^2 * y^2 * z^4         = 1
Coefficient of   x^1 * y^12               = 1
Coefficient of   x^1 * y^1 * z^5         = 0
Coefficient of   y^11 * z^1               = -1
Coefficient of   z^6                     = 1

Here is the polynomial we're using this time:

-1*x^11 + 1*x^6*y^6 + 1*x^4*y^4*z^2 + -1*x^3*y^3*z^3 + 1*x^2*y^2*z^4 + 1*x^1*y^12 + -1*y^11*z^1 + 1*z^6

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
The final length of G is 83
[4, 4, 1, 0]  	55	5 
[10, 0, 0, 0]  	60	6  <--- 1
[6, 6, 0, 0]  	66	6 
[4, 3, 3, 0]  	72	7 
[3, 3, 4, 0]  	77	7 
[3, 13, 0, 0]  	83	7 
[8, 3, 2, 0]  	85	9 
[6, 2, 4, 0]  	90	9 
[8, 2, 3, 0]  	91	9 
[5, 2, 5, 0]  	95	8 
[6, 1, 5, 0]  	96	8 
[8, 1, 4, 0]  	97	8 
[4, 2, 6, 0]  	100	7 
[3, 12, 2, 0]  	100	7 
[5, 1, 6, 0]  	101	8 
[6, 0, 6, 0]  	102	7 
[3, 2, 7, 0]  	105	6 
[2, 12, 3, 0]  	105	6 
[4, 1, 7, 0]  	106	7 
[3, 11, 3, 0]  	106	7 
[5, 0, 7, 0]  	107	6 
[2, 19, 0, 0]  	107	6 
[2, 17, 1, 0]  	108	6 
[2, 15, 2, 0]  	109	6 
[2, 2, 8, 0]  	110	6 
[2, 11, 4, 0]  	111	5 
[4, 0, 8, 0]  	112	5 
[2, 9, 5, 0]  	112	5 
[2, 5, 7, 0]  	114	5 
[1, 13, 4, 0]  	115	5 
[2, 1, 9, 0]  	116	5 
[1, 22, 0, 0]  	116	5 
[3, 0, 9, 0]  	117	4 
[1, 20, 1, 0]  	117	4 
[1, 16, 3, 0]  	119	4 
[1, 12, 5, 0]  	121	5 
[2, 0, 10, 0]  	122	4 
[1, 19, 2, 0]  	123	3 
[1, 8, 7, 0]  	123	3 
[1, 6, 8, 0]  	124	3 
[1, 4, 9, 0]  	125	3 
[0, 25, 0, 0]  	125	3  <--- 2
[1, 11, 6, 0]  	127	4 
[0, 17, 4, 0]  	129	2 
[0, 15, 5, 0]  	130	2 
[0, 24, 1, 0]  	131	3 
[0, 5, 10, 0]  	135	1 
[0, 14, 6, 0]  	136	2 
[1, 0, 12, 0]  	138	3 
[0, 4, 11, 0]  	141	1 
[0, 3, 12, 0]  	147	1 
[0, 12, 8, 0]  	148	2 
[0, 2, 13, 0]  	153	1 
[0, 11, 9, 0]  	154	2 
[0, 1, 14, 0]  	159	1 
[0, 0, 15, 0]  	165	1  <--- 3
[6, 5, 0, 1]  	61	6 
[4, 0, 7, 1]  	101	7 
[8, 0, 5, 1]  	103	7 
[3, 1, 8, 1]  	111	6 
[2, 7, 6, 1]  	113	5 
[1, 3, 9, 1]  	120	4 
[1, 2, 10, 1]  	126	4 
[1, 1, 11, 1]  	132	4 
[0, 23, 2, 1]  	137	3 
[0, 22, 3, 1]  	143	3 
[2, 0, 9, 2]  	111	5 
[1, 18, 2, 2]  	118	4 
[0, 13, 7, 2]  	142	2 
[3, 0, 8, 3]  	106	6 
[2, 10, 4, 47]  	106	4 
[1, 21, 0, 47]  	111	4 
[1, 7, 7, 47]  	118	3 
[0, 2, 12, 47]  	142	1 
[4, 3, 2, 49]  	61	3 
[2, 9, 4, 49]  	101	4 
[2, 16, 1, 49]  	103	4 
[2, 4, 7, 49]  	109	4 
[1, 17, 2, 49]  	113	2 
[0, 24, 0, 49]  	120	2 
[0, 12, 6, 49]  	126	2 
[0, 11, 7, 49]  	132	2 
[0, 1, 12, 49]  	137	1 
------
The gap is between 4 and 46.
Lengths: 2 2 6 6 2 3.
For 143 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^11*z^8
1*z^13

For 77 = 3*d/2-d1-d2-d3 you get 6 in char 0.
1*x^2*y^13
1*x^2*y^2*z^5
1*x^1*y^12*z^1
1*x^1*y^1*z^6
1*y^11*z^2
1*z^7

For 11 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^1*y^1
1*z^1

Extra powers of p used 2.
The invariant extra is equal to 5.
Start computing 3^3 Delta^1 (x1x2x3)^2... Done.
Start computing 3^4 Delta^2 (x1x2x3)^2... Done.
Start computing 3^5 Delta^3 (x1x2x3)^2... Done.
Start computing 3^6 Delta^4 (x1x2x3)^2... Done.
Start computing 3^7 Delta^5 (x1x2x3)^2... Done.
Start computing 3^8 Delta^6 (x1x2x3)^2... Done.
Start computing 3^9 Delta^7 (x1x2x3)^2... Done.
Start computing 3^10 Delta^8 (x1x2x3)^2... Done.
Start computing 3^11 Delta^9 (x1x2x3)^2... Done.
Start computing 3^12 Delta^10 (x1x2x3)^2... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[8562648613769637876519,236405753527716485658,5735708707618029262680,5432813409729852733104,3301263970167264956928,3846332936536969796595,7316610959404618025985,1806880570549388775126,5358030994715803324254,5956062281598239462448;\
2129393848640812692069,7360685345914743286479,6537082476219362808822,1592745162198805860714,2312213570901058986999,2805523176270311841357,3705254106905495964897,5451664720768660710630,8791916996723151943656,664522465996796883912;\
8402260571530941848894,7168295894712367217215,1097071949500883098335,820096020190997244036,5672927893334566438152,634655501679109107375,2854841437459205577774,4409362045085524470234,6120040496918894884395,5807719068254175199554;\
7880789602889956047678,4188741198603179581969,7683128692227473818152,6209406950718441709575,7682739959892770221440,4279482704346745378719,4666111159453369541556,1698095725369208628411,5374525576327600294017,7245928669561379489700;\
4963164106558829566824,5739711965446957137710,7990768070105166288573,2816946296698945647069,6829569850158662880372,5460039153576686114421,241706191194658816761,6807978862266027083406,8450740871511256068075,7241465827071942571782;\
2476737594476400229953,5984157071664902741398,3337152266505804477420,6840782186611527573993,3912891717681405972867,6883262646233837854602,6651376816716573194625,7415219443599233020398,7108646273878092981867,1382682320800871886630;\
6463833819018299754716,3573460095150995241851,3216371492743536111321,6855071834508785620137,3351524278939064839173,8739153857483992183017,5125860454428456669177,2759157455408582978532,2983289719955032027764,5404283805730257757143;\
3993751241009740514548,5756165330965234457642,433606620945835902591,6059416769005366646163,4984611382671921506250,2552203774177977148776,5896363369281597088497,3756704925948767811549,6534362121399160252407,2374519422477628344825;\
7341698351821639811904,5439489170422760967165,5895270677368831953447,3182035813792119525339,2931719830813285283475,8478517243877421130098,2461653105737814761769,7580789432801579896362,1294470278245916142516,1761263757320415343191;\
4425720075793045930776,932841969674839947965,2420417502156531818922,6882889826600381204568,6838543467338064747477,2329938140327392419501,2357346856305659028195,3672320083250308812771,8357848806398887481274,1792605602339343674388]
/* 
This matrix times 3^(-1) should be the matrix of frobenius.
*/ 
B = 3^(-1) * A; 
/* Freed 30 lists. */
