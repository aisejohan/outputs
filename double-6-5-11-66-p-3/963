/* Comments begin... 
Coefficient of   x^11                     = 1
Coefficient of   x^6 * y^6               = 1
Coefficient of   x^5 * y^5 * z^1         = -1
Coefficient of   x^4 * y^4 * z^2         = 0
Coefficient of   x^3 * y^3 * z^3         = -1
Coefficient of   x^2 * y^2 * z^4         = -1
Coefficient of   x^1 * y^12               = -1
Coefficient of   x^1 * y^1 * z^5         = 0
Coefficient of   y^11 * z^1               = 1
Coefficient of   z^6                     = -1

Here is the polynomial we're using this time:

1*x^11 + 1*x^6*y^6 + -1*x^5*y^5*z^1 + -1*x^3*y^3*z^3 + -1*x^2*y^2*z^4 + -1*x^1*y^12 + 1*y^11*z^1 + -1*z^6

Allocate G_len 20 elements and old = 0.
Allocate M_len = 400 elements.
Allocate G_len 40 elements and old = 20.
Allocate M_len = 800 elements.
Allocate G_len 80 elements and old = 40.
Allocate M_len = 1600 elements.
Allocate M_len = 3200 elements.
Allocate G_len 160 elements and old = 80.
Allocate M_len = 6400 elements.
The final length of G is 84
[5, 5, 0, 0]  	55	5 
[10, 0, 0, 0]  	60	7  <--- 1
[5, 4, 1, 0]  	61	7 
[4, 3, 3, 0]  	72	7 
[3, 3, 4, 0]  	77	7 
[3, 13, 0, 0]  	83	7 
[4, 12, 1, 0]  	95	8 
[7, 2, 4, 0]  	96	9 
[9, 2, 3, 0]  	97	8 
[8, 1, 4, 0]  	97	8 
[4, 2, 6, 0]  	100	7 
[3, 12, 2, 0]  	100	7 
[5, 1, 6, 0]  	101	8 
[7, 1, 5, 0]  	102	7 
[6, 0, 6, 0]  	102	7 
[3, 2, 7, 0]  	105	6 
[2, 12, 3, 0]  	105	6 
[4, 1, 7, 0]  	106	7 
[3, 11, 3, 0]  	106	6 
[5, 0, 7, 0]  	107	6 
[2, 19, 0, 0]  	107	6 
[2, 2, 8, 0]  	110	6 
[3, 1, 8, 0]  	111	5 
[2, 11, 4, 0]  	111	5 
[2, 0, 9, 0]  	111	5 
[4, 0, 8, 0]  	112	5 
[2, 9, 5, 0]  	112	5 
[2, 18, 1, 0]  	113	6 
[2, 16, 2, 0]  	114	6 
[1, 13, 4, 0]  	115	5 
[1, 22, 0, 0]  	116	5 
[1, 20, 1, 0]  	117	4 
[2, 8, 6, 0]  	118	4 
[1, 18, 2, 0]  	118	4 
[2, 6, 7, 0]  	119	4 
[1, 16, 3, 0]  	119	4 
[1, 3, 9, 0]  	120	4 
[1, 12, 5, 0]  	121	5 
[1, 8, 7, 0]  	123	3 
[1, 6, 8, 0]  	124	3 
[0, 25, 0, 0]  	125	3  <--- 2
[1, 2, 10, 0]  	126	4 
[1, 11, 6, 0]  	127	4 
[0, 17, 4, 0]  	129	2 
[0, 24, 1, 0]  	131	3 
[1, 1, 11, 0]  	132	4 
[0, 16, 5, 0]  	135	1 
[0, 5, 10, 0]  	135	1 
[0, 14, 6, 0]  	136	2 
[0, 23, 2, 0]  	137	3 
[1, 0, 12, 0]  	138	3 
[0, 4, 11, 0]  	141	1 
[0, 13, 7, 0]  	142	2 
[0, 22, 3, 0]  	143	3 
[0, 3, 12, 0]  	147	1 
[0, 12, 8, 0]  	148	2 
[0, 2, 13, 0]  	153	1 
[0, 1, 14, 0]  	159	1 
[0, 0, 15, 0]  	165	1  <--- 3
[4, 4, 2, 1]  	66	7 
[8, 3, 2, 1]  	85	9 
[6, 2, 4, 1]  	90	9 
[8, 2, 3, 1]  	91	9 
[5, 2, 5, 1]  	95	8 
[6, 1, 5, 1]  	96	8 
[4, 0, 7, 1]  	101	7 
[8, 0, 5, 1]  	103	7 
[2, 17, 1, 1]  	108	6 
[2, 7, 6, 1]  	113	5 
[2, 5, 7, 1]  	114	5 
[0, 11, 9, 1]  	154	2 
[3, 0, 8, 2]  	106	6 
[2, 15, 2, 2]  	109	6 
[0, 15, 5, 2]  	130	2 
[7, 1, 4, 48]  	91	7 
[2, 9, 4, 48]  	101	5 
[2, 4, 7, 48]  	109	5 
[0, 4, 10, 48]  	130	1 
[3, 3, 3, 49]  	66	4 
[7, 2, 3, 49]  	85	5 
[4, 0, 6, 49]  	90	3 
[1, 15, 2, 49]  	103	3 
[1, 14, 3, 49]  	109	3 
[0, 0, 14, 49]  	154	1 
------
The gap is between 3 and 47.
Lengths: 2 2 6 6 2 2.
For 143 = 5*d/2-d1-d2-d3 you get 2 in char 0.
1*y^11*z^8
1*z^13

For 77 = 3*d/2-d1-d2-d3 you get 6 in char 0.
1*x^2*y^13
1*x^2*y^2*z^5
1*x^1*y^12*z^1
1*x^1*y^1*z^6
1*y^11*z^2
1*z^7

For 11 = d/2-d1-d2-d3 you get 2 in char 0.
1*x^1*y^1
1*z^1

Extra powers of p used 0.
The invariant extra is equal to 5.
Start computing 3^3 Delta^1 (x1x2x3)^2... Done.
Start computing 3^4 Delta^2 (x1x2x3)^2... Done.
Start computing 3^5 Delta^3 (x1x2x3)^2... Done.
Start computing 3^6 Delta^4 (x1x2x3)^2... Done.
Start computing 3^7 Delta^5 (x1x2x3)^2... Done.
Start computing 3^8 Delta^6 (x1x2x3)^2... Done.
Start computing 3^9 Delta^7 (x1x2x3)^2... Done.
Start computing 3^10 Delta^8 (x1x2x3)^2... Done.
Start computing 3^11 Delta^9 (x1x2x3)^2... Done.
Start computing 3^12 Delta^10 (x1x2x3)^2... Done.
Start computing aa.
1 2 3 4 5 6 7 8 9 10 
*/
A = \
[7610472341580825973800,212080260523391684085,4275170019458628487848,466964106910594777098,3656572866786464318277,3998396157598872382536,4411888212031710529185,2372089166891877273840,1723275205892244099828,4551201653123026352871;\
5280676766659020668850,4945277237596100292453,2041868534042813180679,2254564051950266905869,286735039213586014827,107948812251580070175,2302234132206666763692,2904926355478354418073,8230596472548988440552,923745264855263662689;\
6824153600813069075140,3238135563337271554188,6384257399070103244796,435393852644390648481,4258193449843994358492,989320935033869775858,3245604426626454443736,455146424835087506724,431832755526252449562,5556234442860077454828;\
2108032335303940561869,2297578584491629628787,2788977443693831499519,7960224307599292478535,2139913950555504355038,3410717193951131513565,3129292126752186754269,4719908348244415953837,5572711312320914357508,3497870571914570535711;\
8062735437599089420788,5548230293251969150429,452125000855463999904,8111134000415236318614,1617680777379520058613,4053771910571695946703,5280513926158733090526,5065880376743413110675,6364486377303968506419,6226051335785200439847;\
4438881094468098523708,1907246820912332730702,4047711883075845709929,3235239317031840260397,2584607110450435811718,7546739002438552951428,5351880864052596582504,7586362460364610197366,8481695339764283294727,220370078785283565804;\
8635395377347659953857,6757618203650742825051,7612842782985251185710,2092678379673893878482,4574218049722256081796,2312116038587497616352,3620187735091353644841,312022922148963806094,7687765857149912209032,7460753319819495045288;\
7226741259670233605273,1457768130444746605861,8537627570252305092480,4991636016413001537813,4675954149213289533738,8716367752337454572952,5486209123941177642738,1389791431269195260823,2477180659081560624036,8052749865936342166608;\
3769294941345142162303,695187798203629490563,3412518941880343655523,8236556159237236432584,1786276722894838562295,629596987162396059618,7381684986486767080974,476135612953530836427,4545305673154966996731,2546990932575005760294;\
4092223668451778697831,4649787671383990433958,5624988049597479022881,3352391651524279379121,499107321439417642275,4776623674014994095843,5143913190864283611285,2518332659160877535724,7050148951071132001368,6328118773515632322627]
/* 
This matrix times 3^(-1) should be the matrix of frobenius.
*/ 
B = 3^(-1) * A; 
/* Freed 30 lists. */
